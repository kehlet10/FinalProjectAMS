
AMSProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000f62  00800200  000058ae  00005942  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000058ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000049c  00801162  00801162  000068a4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000068a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006900  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003b0  00000000  00000000  00006940  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00008835  00000000  00000000  00006cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001915  00000000  00000000  0000f525  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003d0e  00000000  00000000  00010e3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001100  00000000  00000000  00014b48  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000123f  00000000  00000000  00015c48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00009822  00000000  00000000  00016e87  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000490  00000000  00000000  000206a9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	bc c1       	rjmp	.+888    	; 0x37a <__ctors_end>
       2:	00 00       	nop
       4:	db c1       	rjmp	.+950    	; 0x3bc <__bad_interrupt>
       6:	00 00       	nop
       8:	d9 c1       	rjmp	.+946    	; 0x3bc <__bad_interrupt>
       a:	00 00       	nop
       c:	d7 c1       	rjmp	.+942    	; 0x3bc <__bad_interrupt>
       e:	00 00       	nop
      10:	d5 c1       	rjmp	.+938    	; 0x3bc <__bad_interrupt>
      12:	00 00       	nop
      14:	d3 c1       	rjmp	.+934    	; 0x3bc <__bad_interrupt>
      16:	00 00       	nop
      18:	d1 c1       	rjmp	.+930    	; 0x3bc <__bad_interrupt>
      1a:	00 00       	nop
      1c:	cf c1       	rjmp	.+926    	; 0x3bc <__bad_interrupt>
      1e:	00 00       	nop
      20:	cd c1       	rjmp	.+922    	; 0x3bc <__bad_interrupt>
      22:	00 00       	nop
      24:	cb c1       	rjmp	.+918    	; 0x3bc <__bad_interrupt>
      26:	00 00       	nop
      28:	c9 c1       	rjmp	.+914    	; 0x3bc <__bad_interrupt>
      2a:	00 00       	nop
      2c:	c7 c1       	rjmp	.+910    	; 0x3bc <__bad_interrupt>
      2e:	00 00       	nop
      30:	c5 c1       	rjmp	.+906    	; 0x3bc <__bad_interrupt>
      32:	00 00       	nop
      34:	c3 c1       	rjmp	.+902    	; 0x3bc <__bad_interrupt>
      36:	00 00       	nop
      38:	c1 c1       	rjmp	.+898    	; 0x3bc <__bad_interrupt>
      3a:	00 00       	nop
      3c:	bf c1       	rjmp	.+894    	; 0x3bc <__bad_interrupt>
      3e:	00 00       	nop
      40:	bd c1       	rjmp	.+890    	; 0x3bc <__bad_interrupt>
      42:	00 00       	nop
      44:	bb c1       	rjmp	.+886    	; 0x3bc <__bad_interrupt>
      46:	00 00       	nop
      48:	b9 c1       	rjmp	.+882    	; 0x3bc <__bad_interrupt>
      4a:	00 00       	nop
      4c:	b7 c1       	rjmp	.+878    	; 0x3bc <__bad_interrupt>
      4e:	00 00       	nop
      50:	b5 c1       	rjmp	.+874    	; 0x3bc <__bad_interrupt>
      52:	00 00       	nop
      54:	b3 c1       	rjmp	.+870    	; 0x3bc <__bad_interrupt>
      56:	00 00       	nop
      58:	b1 c1       	rjmp	.+866    	; 0x3bc <__bad_interrupt>
      5a:	00 00       	nop
      5c:	af c1       	rjmp	.+862    	; 0x3bc <__bad_interrupt>
      5e:	00 00       	nop
      60:	ad c1       	rjmp	.+858    	; 0x3bc <__bad_interrupt>
      62:	00 00       	nop
      64:	ab c1       	rjmp	.+854    	; 0x3bc <__bad_interrupt>
      66:	00 00       	nop
      68:	a9 c1       	rjmp	.+850    	; 0x3bc <__bad_interrupt>
      6a:	00 00       	nop
      6c:	a7 c1       	rjmp	.+846    	; 0x3bc <__bad_interrupt>
      6e:	00 00       	nop
      70:	a5 c1       	rjmp	.+842    	; 0x3bc <__bad_interrupt>
      72:	00 00       	nop
      74:	a3 c1       	rjmp	.+838    	; 0x3bc <__bad_interrupt>
      76:	00 00       	nop
      78:	a1 c1       	rjmp	.+834    	; 0x3bc <__bad_interrupt>
      7a:	00 00       	nop
      7c:	9f c1       	rjmp	.+830    	; 0x3bc <__bad_interrupt>
      7e:	00 00       	nop
      80:	9d c1       	rjmp	.+826    	; 0x3bc <__bad_interrupt>
      82:	00 00       	nop
      84:	9b c1       	rjmp	.+822    	; 0x3bc <__bad_interrupt>
      86:	00 00       	nop
      88:	99 c1       	rjmp	.+818    	; 0x3bc <__bad_interrupt>
      8a:	00 00       	nop
      8c:	97 c1       	rjmp	.+814    	; 0x3bc <__bad_interrupt>
      8e:	00 00       	nop
      90:	95 c1       	rjmp	.+810    	; 0x3bc <__bad_interrupt>
      92:	00 00       	nop
      94:	93 c1       	rjmp	.+806    	; 0x3bc <__bad_interrupt>
      96:	00 00       	nop
      98:	91 c1       	rjmp	.+802    	; 0x3bc <__bad_interrupt>
      9a:	00 00       	nop
      9c:	8f c1       	rjmp	.+798    	; 0x3bc <__bad_interrupt>
      9e:	00 00       	nop
      a0:	8d c1       	rjmp	.+794    	; 0x3bc <__bad_interrupt>
      a2:	00 00       	nop
      a4:	8b c1       	rjmp	.+790    	; 0x3bc <__bad_interrupt>
      a6:	00 00       	nop
      a8:	89 c1       	rjmp	.+786    	; 0x3bc <__bad_interrupt>
      aa:	00 00       	nop
      ac:	87 c1       	rjmp	.+782    	; 0x3bc <__bad_interrupt>
      ae:	00 00       	nop
      b0:	85 c1       	rjmp	.+778    	; 0x3bc <__bad_interrupt>
      b2:	00 00       	nop
      b4:	83 c1       	rjmp	.+774    	; 0x3bc <__bad_interrupt>
      b6:	00 00       	nop
      b8:	81 c1       	rjmp	.+770    	; 0x3bc <__bad_interrupt>
      ba:	00 00       	nop
      bc:	7f c1       	rjmp	.+766    	; 0x3bc <__bad_interrupt>
      be:	00 00       	nop
      c0:	7d c1       	rjmp	.+762    	; 0x3bc <__bad_interrupt>
      c2:	00 00       	nop
      c4:	7b c1       	rjmp	.+758    	; 0x3bc <__bad_interrupt>
      c6:	00 00       	nop
      c8:	79 c1       	rjmp	.+754    	; 0x3bc <__bad_interrupt>
      ca:	00 00       	nop
      cc:	77 c1       	rjmp	.+750    	; 0x3bc <__bad_interrupt>
      ce:	00 00       	nop
      d0:	75 c1       	rjmp	.+746    	; 0x3bc <__bad_interrupt>
      d2:	00 00       	nop
      d4:	73 c1       	rjmp	.+742    	; 0x3bc <__bad_interrupt>
      d6:	00 00       	nop
      d8:	71 c1       	rjmp	.+738    	; 0x3bc <__bad_interrupt>
      da:	00 00       	nop
      dc:	6f c1       	rjmp	.+734    	; 0x3bc <__bad_interrupt>
      de:	00 00       	nop
      e0:	6d c1       	rjmp	.+730    	; 0x3bc <__bad_interrupt>
      e2:	00 00       	nop
      e4:	49 18       	sub	r4, r9
      e6:	f8 19       	sub	r31, r8
      e8:	66 18       	sub	r6, r6
      ea:	83 18       	sub	r8, r3
      ec:	a0 18       	sub	r10, r0
      ee:	bd 18       	sub	r11, r13
      f0:	d8 18       	sub	r13, r8
      f2:	f5 18       	sub	r15, r5
      f4:	12 19       	sub	r17, r2
      f6:	2f 19       	sub	r18, r15
      f8:	4c 19       	sub	r20, r12
      fa:	69 19       	sub	r22, r9
      fc:	86 19       	sub	r24, r6
      fe:	a3 19       	sub	r26, r3
     100:	c0 19       	sub	r28, r0
     102:	db 19       	sub	r29, r11
     104:	42 1a       	sub	r4, r18
     106:	f1 1b       	sub	r31, r17
     108:	5f 1a       	sub	r5, r31
     10a:	7c 1a       	sub	r7, r28
     10c:	99 1a       	sub	r9, r25
     10e:	b6 1a       	sub	r11, r22
     110:	d1 1a       	sub	r13, r17
     112:	ee 1a       	sub	r14, r30
     114:	0b 1b       	sub	r16, r27
     116:	28 1b       	sub	r18, r24
     118:	45 1b       	sub	r20, r21
     11a:	62 1b       	sub	r22, r18
     11c:	7f 1b       	sub	r23, r31
     11e:	9c 1b       	sub	r25, r28
     120:	b9 1b       	sub	r27, r25
     122:	d4 1b       	sub	r29, r20
     124:	23 1c       	adc	r2, r3
     126:	a3 1c       	adc	r10, r3
     128:	2a 1c       	adc	r2, r10
     12a:	32 1c       	adc	r3, r2
     12c:	3b 1c       	adc	r3, r11
     12e:	43 1c       	adc	r4, r3
     130:	4b 1c       	adc	r4, r11
     132:	53 1c       	adc	r5, r3
     134:	5c 1c       	adc	r5, r12
     136:	64 1c       	adc	r6, r4
     138:	6c 1c       	adc	r6, r12
     13a:	74 1c       	adc	r7, r4
     13c:	7d 1c       	adc	r7, r13
     13e:	87 1c       	adc	r8, r7
     140:	8f 1c       	adc	r8, r15
     142:	99 1c       	adc	r9, r9
     144:	b7 1c       	adc	r11, r7
     146:	37 1d       	adc	r19, r7
     148:	be 1c       	adc	r11, r14
     14a:	c6 1c       	adc	r12, r6
     14c:	cf 1c       	adc	r12, r15
     14e:	d7 1c       	adc	r13, r7
     150:	df 1c       	adc	r13, r15
     152:	e7 1c       	adc	r14, r7
     154:	f0 1c       	adc	r15, r0
     156:	f8 1c       	adc	r15, r8
     158:	00 1d       	adc	r16, r0
     15a:	08 1d       	adc	r16, r8
     15c:	11 1d       	adc	r17, r1
     15e:	1b 1d       	adc	r17, r11
     160:	23 1d       	adc	r18, r3
     162:	2d 1d       	adc	r18, r13
     164:	4e 1f       	adc	r20, r30
     166:	a3 1f       	adc	r26, r19
     168:	54 1f       	adc	r21, r20
     16a:	5c 1f       	adc	r21, r28
     16c:	64 1f       	adc	r22, r20
     16e:	6c 1f       	adc	r22, r28
     170:	74 1f       	adc	r23, r20
     172:	7c 1f       	adc	r23, r28
     174:	84 1f       	adc	r24, r20
     176:	8c 1f       	adc	r24, r28
     178:	94 1f       	adc	r25, r20
     17a:	9c 1f       	adc	r25, r28
     17c:	f6 1f       	adc	r31, r22
     17e:	f9 1f       	adc	r31, r25
     180:	f9 1f       	adc	r31, r25
     182:	f9 1f       	adc	r31, r25
     184:	f9 1f       	adc	r31, r25
     186:	f9 1f       	adc	r31, r25
     188:	f9 1f       	adc	r31, r25
     18a:	f9 1f       	adc	r31, r25
     18c:	fa 1f       	adc	r31, r26
     18e:	f9 1f       	adc	r31, r25
     190:	f9 1f       	adc	r31, r25
     192:	f9 1f       	adc	r31, r25
     194:	f9 1f       	adc	r31, r25
     196:	f9 1f       	adc	r31, r25
     198:	f9 1f       	adc	r31, r25
     19a:	f9 1f       	adc	r31, r25
     19c:	f9 1f       	adc	r31, r25
     19e:	f9 1f       	adc	r31, r25
     1a0:	f9 1f       	adc	r31, r25
     1a2:	f9 1f       	adc	r31, r25
     1a4:	f9 1f       	adc	r31, r25
     1a6:	f9 1f       	adc	r31, r25
     1a8:	ea 1f       	adc	r30, r26
     1aa:	f9 1f       	adc	r31, r25
     1ac:	f9 1f       	adc	r31, r25
     1ae:	f9 1f       	adc	r31, r25
     1b0:	f9 1f       	adc	r31, r25
     1b2:	f9 1f       	adc	r31, r25
     1b4:	f9 1f       	adc	r31, r25
     1b6:	f9 1f       	adc	r31, r25
     1b8:	f9 1f       	adc	r31, r25
     1ba:	f9 1f       	adc	r31, r25
     1bc:	f9 1f       	adc	r31, r25
     1be:	f9 1f       	adc	r31, r25
     1c0:	f9 1f       	adc	r31, r25
     1c2:	f9 1f       	adc	r31, r25
     1c4:	f9 1f       	adc	r31, r25
     1c6:	f9 1f       	adc	r31, r25
     1c8:	f9 1f       	adc	r31, r25
     1ca:	d8 1f       	adc	r29, r24
     1cc:	f9 1f       	adc	r31, r25
     1ce:	f9 1f       	adc	r31, r25
     1d0:	f9 1f       	adc	r31, r25
     1d2:	fd 1f       	adc	r31, r29
     1d4:	f9 1f       	adc	r31, r25
     1d6:	f9 1f       	adc	r31, r25
     1d8:	de 1f       	adc	r29, r30
     1da:	f3 1f       	adc	r31, r19
     1dc:	f9 1f       	adc	r31, r25
     1de:	f9 1f       	adc	r31, r25
     1e0:	e1 1f       	adc	r30, r17
     1e2:	f0 1f       	adc	r31, r16
     1e4:	f9 1f       	adc	r31, r25
     1e6:	ed 1f       	adc	r30, r29
     1e8:	f9 1f       	adc	r31, r25
     1ea:	f9 1f       	adc	r31, r25
     1ec:	d5 1f       	adc	r29, r21
     1ee:	f9 1f       	adc	r31, r25
     1f0:	db 1f       	adc	r29, r27
     1f2:	f9 1f       	adc	r31, r25
     1f4:	f9 1f       	adc	r31, r25
     1f6:	f9 1f       	adc	r31, r25
     1f8:	f9 1f       	adc	r31, r25
     1fa:	e4 1f       	adc	r30, r20
     1fc:	e7 1f       	adc	r30, r23
     1fe:	07 63       	ori	r16, 0x37	; 55
     200:	42 36       	cpi	r20, 0x62	; 98
     202:	b7 9b       	sbis	0x16, 7	; 22
     204:	d8 a7       	std	Y+40, r29	; 0x28
     206:	1a 39       	cpi	r17, 0x9A	; 154
     208:	68 56       	subi	r22, 0x68	; 104
     20a:	18 ae       	std	Y+56, r1	; 0x38
     20c:	ba ab       	std	Y+50, r27	; 0x32
     20e:	55 8c       	ldd	r5, Z+29	; 0x1d
     210:	1d 3c       	cpi	r17, 0xCD	; 205
     212:	b7 cc       	rjmp	.-1682   	; 0xfffffb82 <__eeprom_end+0xff7efb82>
     214:	57 63       	ori	r21, 0x37	; 55
     216:	bd 6d       	ori	r27, 0xDD	; 221
     218:	ed fd       	.word	0xfded	; ????
     21a:	75 3e       	cpi	r23, 0xE5	; 229
     21c:	f6 17       	cp	r31, r22
     21e:	72 31       	cpi	r23, 0x12	; 18
     220:	bf 00       	.word	0x00bf	; ????
     222:	00 00       	nop
     224:	80 3f       	cpi	r24, 0xF0	; 240
     226:	08 00       	.word	0x0008	; ????
     228:	00 00       	nop
     22a:	be 92       	st	-X, r11
     22c:	24 49       	sbci	r18, 0x94	; 148
     22e:	12 3e       	cpi	r17, 0xE2	; 226
     230:	ab aa       	std	Y+51, r10	; 0x33
     232:	aa 2a       	or	r10, r26
     234:	be cd       	rjmp	.-1156   	; 0xfffffdb2 <__eeprom_end+0xff7efdb2>
     236:	cc cc       	rjmp	.-1640   	; 0xfffffbd0 <__eeprom_end+0xff7efbd0>
     238:	4c 3e       	cpi	r20, 0xEC	; 236
     23a:	00 00       	nop
     23c:	00 80       	ld	r0, Z
     23e:	be ab       	std	Y+54, r27	; 0x36
     240:	aa aa       	std	Y+50, r10	; 0x32
     242:	aa 3e       	cpi	r26, 0xEA	; 234
     244:	00 00       	nop
     246:	00 00       	nop
     248:	bf 00       	.word	0x00bf	; ????
     24a:	00 00       	nop
     24c:	80 3f       	cpi	r24, 0xF0	; 240
     24e:	00 00       	nop
     250:	00 00       	nop
     252:	00 08       	sbc	r0, r0
     254:	41 78       	andi	r20, 0x81	; 129
     256:	d3 bb       	out	0x13, r29	; 19
     258:	43 87       	std	Z+11, r20	; 0x0b
     25a:	d1 13       	cpse	r29, r17
     25c:	3d 19       	sub	r19, r13
     25e:	0e 3c       	cpi	r16, 0xCE	; 206
     260:	c3 bd       	out	0x23, r28	; 35
     262:	42 82       	std	Z+2, r4	; 0x02
     264:	ad 2b       	or	r26, r29
     266:	3e 68       	ori	r19, 0x8E	; 142
     268:	ec 82       	std	Y+4, r14	; 0x04
     26a:	76 be       	out	0x36, r7	; 54
     26c:	d9 8f       	std	Y+25, r29	; 0x19
     26e:	e1 a9       	ldd	r30, Z+49	; 0x31
     270:	3e 4c       	sbci	r19, 0xCE	; 206
     272:	80 ef       	ldi	r24, 0xF0	; 240
     274:	ff be       	out	0x3f, r15	; 63
     276:	01 c4       	rjmp	.+2050   	; 0xa7a <sync_fs+0xa0>
     278:	ff 7f       	andi	r31, 0xFF	; 255
     27a:	3f 00       	.word	0x003f	; ????
     27c:	00 00       	nop
	...

00000280 <__trampolines_end>:
     280:	00 40       	sbci	r16, 0x00	; 0
     282:	7a 10       	cpse	r7, r10
     284:	f3 5a       	subi	r31, 0xA3	; 163
     286:	00 a0       	ldd	r0, Z+32	; 0x20
     288:	72 4e       	sbci	r23, 0xE2	; 226
     28a:	18 09       	sbc	r17, r8
     28c:	00 10       	cpse	r0, r0
     28e:	a5 d4       	rcall	.+2378   	; 0xbda <put_fat+0x124>
     290:	e8 00       	.word	0x00e8	; ????
     292:	00 e8       	ldi	r16, 0x80	; 128
     294:	76 48       	sbci	r23, 0x86	; 134
     296:	17 00       	.word	0x0017	; ????
     298:	00 e4       	ldi	r16, 0x40	; 64
     29a:	0b 54       	subi	r16, 0x4B	; 75
     29c:	02 00       	.word	0x0002	; ????
     29e:	00 ca       	rjmp	.-3072   	; 0xfffff6a0 <__eeprom_end+0xff7ef6a0>
     2a0:	9a 3b       	cpi	r25, 0xBA	; 186
     2a2:	00 00       	nop
     2a4:	00 e1       	ldi	r16, 0x10	; 16
     2a6:	f5 05       	cpc	r31, r5
     2a8:	00 00       	nop
     2aa:	80 96       	adiw	r24, 0x20	; 32
     2ac:	98 00       	.word	0x0098	; ????
     2ae:	00 00       	nop
     2b0:	40 42       	sbci	r20, 0x20	; 32
     2b2:	0f 00       	.word	0x000f	; ????
     2b4:	00 00       	nop
     2b6:	a0 86       	std	Z+8, r10	; 0x08
     2b8:	01 00       	.word	0x0001	; ????
     2ba:	00 00       	nop
     2bc:	10 27       	eor	r17, r16
     2be:	00 00       	nop
     2c0:	00 00       	nop
     2c2:	e8 03       	fmulsu	r22, r16
     2c4:	00 00       	nop
     2c6:	00 00       	nop
     2c8:	64 00       	.word	0x0064	; ????
     2ca:	00 00       	nop
     2cc:	00 00       	nop
     2ce:	0a 00       	.word	0x000a	; ????
     2d0:	00 00       	nop
     2d2:	00 00       	nop
     2d4:	01 00       	.word	0x0001	; ????
     2d6:	00 00       	nop
     2d8:	00 00       	nop
     2da:	2c 76       	andi	r18, 0x6C	; 108
     2dc:	d8 88       	ldd	r13, Y+16	; 0x10
     2de:	dc 67       	ori	r29, 0x7C	; 124
     2e0:	4f 08       	sbc	r4, r15
     2e2:	23 df       	rcall	.-442    	; 0x12a <__SREG__+0xeb>
     2e4:	c1 df       	rcall	.-126    	; 0x268 <__SREG__+0x229>
     2e6:	ae 59       	subi	r26, 0x9E	; 158
     2e8:	e1 b1       	in	r30, 0x01	; 1
     2ea:	b7 96       	adiw	r30, 0x27	; 39
     2ec:	e5 e3       	ldi	r30, 0x35	; 53
     2ee:	e4 53       	subi	r30, 0x34	; 52
     2f0:	c6 3a       	cpi	r28, 0xA6	; 166
     2f2:	e6 51       	subi	r30, 0x16	; 22
     2f4:	99 76       	andi	r25, 0x69	; 105
     2f6:	96 e8       	ldi	r25, 0x86	; 134
     2f8:	e6 c2       	rjmp	.+1484   	; 0x8c6 <move_window+0x24>
     2fa:	84 26       	eor	r8, r20
     2fc:	eb 89       	ldd	r30, Y+19	; 0x13
     2fe:	8c 9b       	sbis	0x11, 4	; 17
     300:	62 ed       	ldi	r22, 0xD2	; 210
     302:	40 7c       	andi	r20, 0xC0	; 192
     304:	6f fc       	.word	0xfc6f	; ????
     306:	ef bc       	out	0x2f, r14	; 47
     308:	9c 9f       	mul	r25, r28
     30a:	40 f2       	brcs	.-112    	; 0x29c <__trampolines_end+0x1c>
     30c:	ba a5       	ldd	r27, Y+42	; 0x2a
     30e:	6f a5       	ldd	r22, Y+47	; 0x2f
     310:	f4 90       	lpm	r15, Z
     312:	05 5a       	subi	r16, 0xA5	; 165
     314:	2a f7       	brpl	.-54     	; 0x2e0 <__trampolines_end+0x60>
     316:	5c 93       	st	X, r21
     318:	6b 6c       	ori	r22, 0xCB	; 203
     31a:	f9 67       	ori	r31, 0x79	; 121
     31c:	6d c1       	rjmp	.+730    	; 0x5f8 <disk_read+0x6c>
     31e:	1b fc       	.word	0xfc1b	; ????
     320:	e0 e4       	ldi	r30, 0x40	; 64
     322:	0d 47       	sbci	r16, 0x7D	; 125
     324:	fe f5       	brtc	.+126    	; 0x3a4 <__do_clear_bss>
     326:	20 e6       	ldi	r18, 0x60	; 96
     328:	b5 00       	.word	0x00b5	; ????
     32a:	d0 ed       	ldi	r29, 0xD0	; 208
     32c:	90 2e       	mov	r9, r16
     32e:	03 00       	.word	0x0003	; ????
     330:	94 35       	cpi	r25, 0x54	; 84
     332:	77 05       	cpc	r23, r7
     334:	00 80       	ld	r0, Z
     336:	84 1e       	adc	r8, r20
     338:	08 00       	.word	0x0008	; ????
     33a:	00 20       	and	r0, r0
     33c:	4e 0a       	sbc	r4, r30
     33e:	00 00       	nop
     340:	00 c8       	rjmp	.-4096   	; 0xfffff342 <__eeprom_end+0xff7ef342>
     342:	0c 33       	cpi	r16, 0x3C	; 60
     344:	33 33       	cpi	r19, 0x33	; 51
     346:	33 0f       	add	r19, r19
     348:	98 6e       	ori	r25, 0xE8	; 232
     34a:	12 83       	std	Z+2, r17	; 0x02
     34c:	11 41       	sbci	r17, 0x11	; 17
     34e:	ef 8d       	ldd	r30, Y+31	; 0x1f
     350:	21 14       	cp	r2, r1
     352:	89 3b       	cpi	r24, 0xB9	; 185
     354:	e6 55       	subi	r30, 0x56	; 86
     356:	16 cf       	rjmp	.-468    	; 0x184 <__SREG__+0x145>
     358:	fe e6       	ldi	r31, 0x6E	; 110
     35a:	db 18       	sub	r13, r11
     35c:	d1 84       	ldd	r13, Z+9	; 0x09
     35e:	4b 38       	cpi	r20, 0x8B	; 139
     360:	1b f7       	brvc	.-58     	; 0x328 <__trampolines_end+0xa8>
     362:	7c 1d       	adc	r23, r12
     364:	90 1d       	adc	r25, r0
     366:	a4 bb       	out	0x14, r26	; 20
     368:	e4 24       	eor	r14, r4
     36a:	20 32       	cpi	r18, 0x20	; 32
     36c:	84 72       	andi	r24, 0x24	; 36
     36e:	5e 22       	and	r5, r30
     370:	81 00       	.word	0x0081	; ????
     372:	c9 f1       	breq	.+114    	; 0x3e6 <BacLevel+0x12>
     374:	24 ec       	ldi	r18, 0xC4	; 196
     376:	a1 e5       	ldi	r26, 0x51	; 81
     378:	3d 27       	eor	r19, r29

0000037a <__ctors_end>:
     37a:	11 24       	eor	r1, r1
     37c:	1f be       	out	0x3f, r1	; 63
     37e:	cf ef       	ldi	r28, 0xFF	; 255
     380:	d1 e2       	ldi	r29, 0x21	; 33
     382:	de bf       	out	0x3e, r29	; 62
     384:	cd bf       	out	0x3d, r28	; 61
     386:	00 e0       	ldi	r16, 0x00	; 0
     388:	0c bf       	out	0x3c, r16	; 60

0000038a <__do_copy_data>:
     38a:	11 e1       	ldi	r17, 0x11	; 17
     38c:	a0 e0       	ldi	r26, 0x00	; 0
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	ee ea       	ldi	r30, 0xAE	; 174
     392:	f8 e5       	ldi	r31, 0x58	; 88
     394:	00 e0       	ldi	r16, 0x00	; 0
     396:	0b bf       	out	0x3b, r16	; 59
     398:	02 c0       	rjmp	.+4      	; 0x39e <__do_copy_data+0x14>
     39a:	07 90       	elpm	r0, Z+
     39c:	0d 92       	st	X+, r0
     39e:	a2 36       	cpi	r26, 0x62	; 98
     3a0:	b1 07       	cpc	r27, r17
     3a2:	d9 f7       	brne	.-10     	; 0x39a <__do_copy_data+0x10>

000003a4 <__do_clear_bss>:
     3a4:	25 e1       	ldi	r18, 0x15	; 21
     3a6:	a2 e6       	ldi	r26, 0x62	; 98
     3a8:	b1 e1       	ldi	r27, 0x11	; 17
     3aa:	01 c0       	rjmp	.+2      	; 0x3ae <.do_clear_bss_start>

000003ac <.do_clear_bss_loop>:
     3ac:	1d 92       	st	X+, r1

000003ae <.do_clear_bss_start>:
     3ae:	ae 3f       	cpi	r26, 0xFE	; 254
     3b0:	b2 07       	cpc	r27, r18
     3b2:	e1 f7       	brne	.-8      	; 0x3ac <.do_clear_bss_loop>
     3b4:	0e 94 08 22 	call	0x4410	; 0x4410 <main>
     3b8:	0c 94 55 2c 	jmp	0x58aa	; 0x58aa <_exit>

000003bc <__bad_interrupt>:
     3bc:	21 ce       	rjmp	.-958    	; 0x0 <__vectors>

000003be <ADC_Init>:
     3be:	87 e4       	ldi	r24, 0x47	; 71
     3c0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
     3c4:	87 ee       	ldi	r24, 0xE7	; 231
     3c6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
     3ca:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
     3ce:	08 95       	ret

000003d0 <breathalyzerInit>:
     3d0:	f6 cf       	rjmp	.-20     	; 0x3be <ADC_Init>
     3d2:	08 95       	ret

000003d4 <BacLevel>:
     3d4:	cf 92       	push	r12
     3d6:	df 92       	push	r13
     3d8:	ef 92       	push	r14
     3da:	ff 92       	push	r15
     3dc:	0f 93       	push	r16
     3de:	1f 93       	push	r17
     3e0:	cf 93       	push	r28
     3e2:	df 93       	push	r29
     3e4:	cd b7       	in	r28, 0x3d	; 61
     3e6:	de b7       	in	r29, 0x3e	; 62
     3e8:	c6 54       	subi	r28, 0x46	; 70
     3ea:	d1 09       	sbc	r29, r1
     3ec:	0f b6       	in	r0, 0x3f	; 63
     3ee:	f8 94       	cli
     3f0:	de bf       	out	0x3e, r29	; 62
     3f2:	0f be       	out	0x3f, r0	; 63
     3f4:	cd bf       	out	0x3d, r28	; 61
     3f6:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
     3fa:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	90 e0       	ldi	r25, 0x00	; 0
     402:	0e 94 49 24 	call	0x4892	; 0x4892 <__floatunsisf>
     406:	6b 01       	movw	r12, r22
     408:	7c 01       	movw	r14, r24
     40a:	60 93 8b 11 	sts	0x118B, r22	; 0x80118b <sensorValue>
     40e:	70 93 8c 11 	sts	0x118C, r23	; 0x80118c <sensorValue+0x1>
     412:	80 93 8d 11 	sts	0x118D, r24	; 0x80118d <sensorValue+0x2>
     416:	90 93 8e 11 	sts	0x118E, r25	; 0x80118e <sensorValue+0x3>
     41a:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <adcResolution>
     41e:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <adcResolution+0x1>
     422:	07 2e       	mov	r0, r23
     424:	00 0c       	add	r0, r0
     426:	88 0b       	sbc	r24, r24
     428:	99 0b       	sbc	r25, r25
     42a:	0e 94 4b 24 	call	0x4896	; 0x4896 <__floatsisf>
     42e:	9b 01       	movw	r18, r22
     430:	ac 01       	movw	r20, r24
     432:	c7 01       	movw	r24, r14
     434:	b6 01       	movw	r22, r12
     436:	0e 94 e1 23 	call	0x47c2	; 0x47c2 <__divsf3>
     43a:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     43e:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
     442:	40 91 02 02 	lds	r20, 0x0202	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
     446:	50 91 03 02 	lds	r21, 0x0203	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
     44a:	0e 94 fb 24 	call	0x49f6	; 0x49f6 <__mulsf3>
     44e:	60 93 93 11 	sts	0x1193, r22	; 0x801193 <sensor_volt>
     452:	70 93 94 11 	sts	0x1194, r23	; 0x801194 <sensor_volt+0x1>
     456:	80 93 95 11 	sts	0x1195, r24	; 0x801195 <sensor_volt+0x2>
     45a:	90 93 96 11 	sts	0x1196, r25	; 0x801196 <sensor_volt+0x3>
     45e:	7e 01       	movw	r14, r28
     460:	23 e3       	ldi	r18, 0x33	; 51
     462:	e2 0e       	add	r14, r18
     464:	f1 1c       	adc	r15, r1
     466:	87 01       	movw	r16, r14
     468:	23 e0       	ldi	r18, 0x03	; 3
     46a:	43 e0       	ldi	r20, 0x03	; 3
     46c:	0e 94 06 27 	call	0x4e0c	; 0x4e0c <dtostrf>
     470:	ff 92       	push	r15
     472:	ef 92       	push	r14
     474:	84 e1       	ldi	r24, 0x14	; 20
     476:	92 e0       	ldi	r25, 0x02	; 2
     478:	9f 93       	push	r25
     47a:	8f 93       	push	r24
     47c:	02 53       	subi	r16, 0x32	; 50
     47e:	11 09       	sbc	r17, r1
     480:	1f 93       	push	r17
     482:	0f 93       	push	r16
     484:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <sprintf>
     488:	b8 01       	movw	r22, r16
     48a:	80 ec       	ldi	r24, 0xC0	; 192
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <SendString>
     492:	c0 90 06 02 	lds	r12, 0x0206	; 0x800206 <R2>
     496:	d0 90 07 02 	lds	r13, 0x0207	; 0x800207 <R2+0x1>
     49a:	e0 90 08 02 	lds	r14, 0x0208	; 0x800208 <R2+0x2>
     49e:	f0 90 09 02 	lds	r15, 0x0209	; 0x800209 <R2+0x3>
     4a2:	20 e0       	ldi	r18, 0x00	; 0
     4a4:	30 e0       	ldi	r19, 0x00	; 0
     4a6:	40 ea       	ldi	r20, 0xA0	; 160
     4a8:	50 e4       	ldi	r21, 0x40	; 64
     4aa:	c7 01       	movw	r24, r14
     4ac:	b6 01       	movw	r22, r12
     4ae:	0e 94 fb 24 	call	0x49f6	; 0x49f6 <__mulsf3>
     4b2:	20 91 93 11 	lds	r18, 0x1193	; 0x801193 <sensor_volt>
     4b6:	30 91 94 11 	lds	r19, 0x1194	; 0x801194 <sensor_volt+0x1>
     4ba:	40 91 95 11 	lds	r20, 0x1195	; 0x801195 <sensor_volt+0x2>
     4be:	50 91 96 11 	lds	r21, 0x1196	; 0x801196 <sensor_volt+0x3>
     4c2:	0e 94 e1 23 	call	0x47c2	; 0x47c2 <__divsf3>
     4c6:	a7 01       	movw	r20, r14
     4c8:	96 01       	movw	r18, r12
     4ca:	0e 94 78 23 	call	0x46f0	; 0x46f0 <__subsf3>
     4ce:	60 93 8f 11 	sts	0x118F, r22	; 0x80118f <rs_gas>
     4d2:	70 93 90 11 	sts	0x1190, r23	; 0x801190 <rs_gas+0x1>
     4d6:	80 93 91 11 	sts	0x1191, r24	; 0x801191 <rs_gas+0x2>
     4da:	90 93 92 11 	sts	0x1192, r25	; 0x801192 <rs_gas+0x3>
     4de:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <R0>
     4e2:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <R0+0x1>
     4e6:	40 91 0c 02 	lds	r20, 0x020C	; 0x80020c <R0+0x2>
     4ea:	50 91 0d 02 	lds	r21, 0x020D	; 0x80020d <R0+0x3>
     4ee:	0e 94 e1 23 	call	0x47c2	; 0x47c2 <__divsf3>
     4f2:	60 93 87 11 	sts	0x1187, r22	; 0x801187 <ratio>
     4f6:	70 93 88 11 	sts	0x1188, r23	; 0x801188 <ratio+0x1>
     4fa:	80 93 89 11 	sts	0x1189, r24	; 0x801189 <ratio+0x2>
     4fe:	90 93 8a 11 	sts	0x118A, r25	; 0x80118a <ratio+0x3>
     502:	2d ec       	ldi	r18, 0xCD	; 205
     504:	3c ec       	ldi	r19, 0xCC	; 204
     506:	4c ec       	ldi	r20, 0xCC	; 204
     508:	5e e3       	ldi	r21, 0x3E	; 62
     50a:	0e 94 fb 24 	call	0x49f6	; 0x49f6 <__mulsf3>
     50e:	22 e0       	ldi	r18, 0x02	; 2
     510:	3b e2       	ldi	r19, 0x2B	; 43
     512:	47 eb       	ldi	r20, 0xB7	; 183
     514:	5f eb       	ldi	r21, 0xBF	; 191
     516:	0e 94 5e 25 	call	0x4abc	; 0x4abc <pow>
     51a:	60 93 83 11 	sts	0x1183, r22	; 0x801183 <BAC>
     51e:	70 93 84 11 	sts	0x1184, r23	; 0x801184 <BAC+0x1>
     522:	80 93 85 11 	sts	0x1185, r24	; 0x801185 <BAC+0x2>
     526:	90 93 86 11 	sts	0x1186, r25	; 0x801186 <BAC+0x3>
     52a:	0f 90       	pop	r0
     52c:	0f 90       	pop	r0
     52e:	0f 90       	pop	r0
     530:	0f 90       	pop	r0
     532:	0f 90       	pop	r0
     534:	0f 90       	pop	r0
     536:	ca 5b       	subi	r28, 0xBA	; 186
     538:	df 4f       	sbci	r29, 0xFF	; 255
     53a:	0f b6       	in	r0, 0x3f	; 63
     53c:	f8 94       	cli
     53e:	de bf       	out	0x3e, r29	; 62
     540:	0f be       	out	0x3f, r0	; 63
     542:	cd bf       	out	0x3d, r28	; 61
     544:	df 91       	pop	r29
     546:	cf 91       	pop	r28
     548:	1f 91       	pop	r17
     54a:	0f 91       	pop	r16
     54c:	ff 90       	pop	r15
     54e:	ef 90       	pop	r14
     550:	df 90       	pop	r13
     552:	cf 90       	pop	r12
     554:	08 95       	ret

00000556 <InitButton>:
 */ 
#include "Button.h"

void InitButton(unsigned char pinNumber){
		
	DDRB = pinNumber;						// Initialize digital pins
     556:	84 b9       	out	0x04, r24	; 4
	PORTB = 0;								// Reset PORTB pin states
     558:	15 b8       	out	0x05, r1	; 5
     55a:	08 95       	ret

0000055c <readButtonState>:
}


int readButtonState(unsigned int pinNumber){
	return (PINB & (1 << pinNumber));
     55c:	23 b1       	in	r18, 0x03	; 3
     55e:	41 e0       	ldi	r20, 0x01	; 1
     560:	50 e0       	ldi	r21, 0x00	; 0
     562:	ba 01       	movw	r22, r20
     564:	02 c0       	rjmp	.+4      	; 0x56a <readButtonState+0xe>
     566:	66 0f       	add	r22, r22
     568:	77 1f       	adc	r23, r23
     56a:	8a 95       	dec	r24
     56c:	e2 f7       	brpl	.-8      	; 0x566 <readButtonState+0xa>
     56e:	cb 01       	movw	r24, r22
     570:	30 e0       	ldi	r19, 0x00	; 0
}
     572:	82 23       	and	r24, r18
     574:	93 23       	and	r25, r19
     576:	08 95       	ret

00000578 <disk_status>:
     578:	80 e0       	ldi	r24, 0x00	; 0
     57a:	08 95       	ret

0000057c <disk_initialize>:
     57c:	0e 94 fc 15 	call	0x2bf8	; 0x2bf8 <SD_init>
     580:	91 e0       	ldi	r25, 0x01	; 1
     582:	81 11       	cpse	r24, r1
     584:	01 c0       	rjmp	.+2      	; 0x588 <disk_initialize+0xc>
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	89 2f       	mov	r24, r25
     58a:	08 95       	ret

0000058c <disk_read>:
     58c:	8f 92       	push	r8
     58e:	9f 92       	push	r9
     590:	af 92       	push	r10
     592:	bf 92       	push	r11
     594:	cf 92       	push	r12
     596:	df 92       	push	r13
     598:	ef 92       	push	r14
     59a:	ff 92       	push	r15
     59c:	0f 93       	push	r16
     59e:	1f 93       	push	r17
     5a0:	cf 93       	push	r28
     5a2:	df 93       	push	r29
     5a4:	eb 01       	movw	r28, r22
     5a6:	48 01       	movw	r8, r16
     5a8:	a1 2c       	mov	r10, r1
     5aa:	b1 2c       	mov	r11, r1
     5ac:	81 14       	cp	r8, r1
     5ae:	91 04       	cpc	r9, r1
     5b0:	a1 04       	cpc	r10, r1
     5b2:	b1 04       	cpc	r11, r1
     5b4:	d1 f0       	breq	.+52     	; 0x5ea <disk_read+0x5e>
     5b6:	82 0e       	add	r8, r18
     5b8:	93 1e       	adc	r9, r19
     5ba:	a4 1e       	adc	r10, r20
     5bc:	b5 1e       	adc	r11, r21
     5be:	69 01       	movw	r12, r18
     5c0:	7a 01       	movw	r14, r20
     5c2:	ae 01       	movw	r20, r28
     5c4:	c7 01       	movw	r24, r14
     5c6:	b6 01       	movw	r22, r12
     5c8:	0e 94 8e 16 	call	0x2d1c	; 0x2d1c <SD_readSingleBlock>
     5cc:	de 5f       	subi	r29, 0xFE	; 254
     5ce:	81 11       	cpse	r24, r1
     5d0:	0e c0       	rjmp	.+28     	; 0x5ee <disk_read+0x62>
     5d2:	8f ef       	ldi	r24, 0xFF	; 255
     5d4:	c8 1a       	sub	r12, r24
     5d6:	d8 0a       	sbc	r13, r24
     5d8:	e8 0a       	sbc	r14, r24
     5da:	f8 0a       	sbc	r15, r24
     5dc:	c8 14       	cp	r12, r8
     5de:	d9 04       	cpc	r13, r9
     5e0:	ea 04       	cpc	r14, r10
     5e2:	fb 04       	cpc	r15, r11
     5e4:	71 f7       	brne	.-36     	; 0x5c2 <disk_read+0x36>
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	03 c0       	rjmp	.+6      	; 0x5f0 <disk_read+0x64>
     5ea:	80 e0       	ldi	r24, 0x00	; 0
     5ec:	01 c0       	rjmp	.+2      	; 0x5f0 <disk_read+0x64>
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	df 91       	pop	r29
     5f2:	cf 91       	pop	r28
     5f4:	1f 91       	pop	r17
     5f6:	0f 91       	pop	r16
     5f8:	ff 90       	pop	r15
     5fa:	ef 90       	pop	r14
     5fc:	df 90       	pop	r13
     5fe:	cf 90       	pop	r12
     600:	bf 90       	pop	r11
     602:	af 90       	pop	r10
     604:	9f 90       	pop	r9
     606:	8f 90       	pop	r8
     608:	08 95       	ret

0000060a <disk_write>:
     60a:	8f 92       	push	r8
     60c:	9f 92       	push	r9
     60e:	af 92       	push	r10
     610:	bf 92       	push	r11
     612:	cf 92       	push	r12
     614:	df 92       	push	r13
     616:	ef 92       	push	r14
     618:	ff 92       	push	r15
     61a:	0f 93       	push	r16
     61c:	1f 93       	push	r17
     61e:	cf 93       	push	r28
     620:	df 93       	push	r29
     622:	eb 01       	movw	r28, r22
     624:	48 01       	movw	r8, r16
     626:	a1 2c       	mov	r10, r1
     628:	b1 2c       	mov	r11, r1
     62a:	81 14       	cp	r8, r1
     62c:	91 04       	cpc	r9, r1
     62e:	a1 04       	cpc	r10, r1
     630:	b1 04       	cpc	r11, r1
     632:	d1 f0       	breq	.+52     	; 0x668 <disk_write+0x5e>
     634:	82 0e       	add	r8, r18
     636:	93 1e       	adc	r9, r19
     638:	a4 1e       	adc	r10, r20
     63a:	b5 1e       	adc	r11, r21
     63c:	69 01       	movw	r12, r18
     63e:	7a 01       	movw	r14, r20
     640:	ae 01       	movw	r20, r28
     642:	c7 01       	movw	r24, r14
     644:	b6 01       	movw	r22, r12
     646:	0e 94 b7 16 	call	0x2d6e	; 0x2d6e <SD_writeSingleBlock>
     64a:	de 5f       	subi	r29, 0xFE	; 254
     64c:	81 11       	cpse	r24, r1
     64e:	0e c0       	rjmp	.+28     	; 0x66c <disk_write+0x62>
     650:	8f ef       	ldi	r24, 0xFF	; 255
     652:	c8 1a       	sub	r12, r24
     654:	d8 0a       	sbc	r13, r24
     656:	e8 0a       	sbc	r14, r24
     658:	f8 0a       	sbc	r15, r24
     65a:	c8 14       	cp	r12, r8
     65c:	d9 04       	cpc	r13, r9
     65e:	ea 04       	cpc	r14, r10
     660:	fb 04       	cpc	r15, r11
     662:	71 f7       	brne	.-36     	; 0x640 <disk_write+0x36>
     664:	80 e0       	ldi	r24, 0x00	; 0
     666:	03 c0       	rjmp	.+6      	; 0x66e <disk_write+0x64>
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	01 c0       	rjmp	.+2      	; 0x66e <disk_write+0x64>
     66c:	81 e0       	ldi	r24, 0x01	; 1
     66e:	df 91       	pop	r29
     670:	cf 91       	pop	r28
     672:	1f 91       	pop	r17
     674:	0f 91       	pop	r16
     676:	ff 90       	pop	r15
     678:	ef 90       	pop	r14
     67a:	df 90       	pop	r13
     67c:	cf 90       	pop	r12
     67e:	bf 90       	pop	r11
     680:	af 90       	pop	r10
     682:	9f 90       	pop	r9
     684:	8f 90       	pop	r8
     686:	08 95       	ret

00000688 <disk_ioctl>:
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	08 95       	ret

0000068c <ld_dword>:
     68c:	fc 01       	movw	r30, r24
     68e:	63 81       	ldd	r22, Z+3	; 0x03
     690:	86 2f       	mov	r24, r22
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	a0 e0       	ldi	r26, 0x00	; 0
     696:	b0 e0       	ldi	r27, 0x00	; 0
     698:	ba 2f       	mov	r27, r26
     69a:	a9 2f       	mov	r26, r25
     69c:	98 2f       	mov	r25, r24
     69e:	88 27       	eor	r24, r24
     6a0:	22 81       	ldd	r18, Z+2	; 0x02
     6a2:	82 2b       	or	r24, r18
     6a4:	ba 2f       	mov	r27, r26
     6a6:	a9 2f       	mov	r26, r25
     6a8:	98 2f       	mov	r25, r24
     6aa:	88 27       	eor	r24, r24
     6ac:	21 81       	ldd	r18, Z+1	; 0x01
     6ae:	82 2b       	or	r24, r18
     6b0:	ba 2f       	mov	r27, r26
     6b2:	a9 2f       	mov	r26, r25
     6b4:	98 2f       	mov	r25, r24
     6b6:	88 27       	eor	r24, r24
     6b8:	20 81       	ld	r18, Z
     6ba:	bc 01       	movw	r22, r24
     6bc:	cd 01       	movw	r24, r26
     6be:	62 2b       	or	r22, r18
     6c0:	08 95       	ret

000006c2 <mem_cpy>:
     6c2:	41 15       	cp	r20, r1
     6c4:	51 05       	cpc	r21, r1
     6c6:	51 f0       	breq	.+20     	; 0x6dc <mem_cpy+0x1a>
     6c8:	a6 2f       	mov	r26, r22
     6ca:	b7 2f       	mov	r27, r23
     6cc:	fc 01       	movw	r30, r24
     6ce:	48 0f       	add	r20, r24
     6d0:	59 1f       	adc	r21, r25
     6d2:	9d 91       	ld	r25, X+
     6d4:	91 93       	st	Z+, r25
     6d6:	e4 17       	cp	r30, r20
     6d8:	f5 07       	cpc	r31, r21
     6da:	d9 f7       	brne	.-10     	; 0x6d2 <mem_cpy+0x10>
     6dc:	08 95       	ret

000006de <clst2sect>:
     6de:	0f 93       	push	r16
     6e0:	1f 93       	push	r17
     6e2:	fc 01       	movw	r30, r24
     6e4:	9a 01       	movw	r18, r20
     6e6:	ab 01       	movw	r20, r22
     6e8:	22 50       	subi	r18, 0x02	; 2
     6ea:	31 09       	sbc	r19, r1
     6ec:	41 09       	sbc	r20, r1
     6ee:	51 09       	sbc	r21, r1
     6f0:	83 89       	ldd	r24, Z+19	; 0x13
     6f2:	94 89       	ldd	r25, Z+20	; 0x14
     6f4:	a5 89       	ldd	r26, Z+21	; 0x15
     6f6:	b6 89       	ldd	r27, Z+22	; 0x16
     6f8:	02 97       	sbiw	r24, 0x02	; 2
     6fa:	a1 09       	sbc	r26, r1
     6fc:	b1 09       	sbc	r27, r1
     6fe:	28 17       	cp	r18, r24
     700:	39 07       	cpc	r19, r25
     702:	4a 07       	cpc	r20, r26
     704:	5b 07       	cpc	r21, r27
     706:	68 f4       	brcc	.+26     	; 0x722 <clst2sect+0x44>
     708:	a1 85       	ldd	r26, Z+9	; 0x09
     70a:	b2 85       	ldd	r27, Z+10	; 0x0a
     70c:	0e 94 ed 26 	call	0x4dda	; 0x4dda <__muluhisi3>
     710:	07 a1       	ldd	r16, Z+39	; 0x27
     712:	10 a5       	ldd	r17, Z+40	; 0x28
     714:	21 a5       	ldd	r18, Z+41	; 0x29
     716:	32 a5       	ldd	r19, Z+42	; 0x2a
     718:	60 0f       	add	r22, r16
     71a:	71 1f       	adc	r23, r17
     71c:	82 1f       	adc	r24, r18
     71e:	93 1f       	adc	r25, r19
     720:	03 c0       	rjmp	.+6      	; 0x728 <clst2sect+0x4a>
     722:	60 e0       	ldi	r22, 0x00	; 0
     724:	70 e0       	ldi	r23, 0x00	; 0
     726:	cb 01       	movw	r24, r22
     728:	1f 91       	pop	r17
     72a:	0f 91       	pop	r16
     72c:	08 95       	ret

0000072e <get_ldnumber>:
     72e:	cf 93       	push	r28
     730:	df 93       	push	r29
     732:	ec 01       	movw	r28, r24
     734:	a8 81       	ld	r26, Y
     736:	b9 81       	ldd	r27, Y+1	; 0x01
     738:	10 97       	sbiw	r26, 0x00	; 0
     73a:	f1 f0       	breq	.+60     	; 0x778 <get_ldnumber+0x4a>
     73c:	9d 01       	movw	r18, r26
     73e:	2f 5f       	subi	r18, 0xFF	; 255
     740:	3f 4f       	sbci	r19, 0xFF	; 255
     742:	f9 01       	movw	r30, r18
     744:	31 97       	sbiw	r30, 0x01	; 1
     746:	90 81       	ld	r25, Z
     748:	91 32       	cpi	r25, 0x21	; 33
     74a:	18 f0       	brcs	.+6      	; 0x752 <get_ldnumber+0x24>
     74c:	9a 33       	cpi	r25, 0x3A	; 58
     74e:	b9 f7       	brne	.-18     	; 0x73e <get_ldnumber+0x10>
     750:	02 c0       	rjmp	.+4      	; 0x756 <get_ldnumber+0x28>
     752:	9a 33       	cpi	r25, 0x3A	; 58
     754:	a1 f4       	brne	.+40     	; 0x77e <get_ldnumber+0x50>
     756:	8c 91       	ld	r24, X
     758:	90 ed       	ldi	r25, 0xD0	; 208
     75a:	98 0f       	add	r25, r24
     75c:	9a 30       	cpi	r25, 0x0A	; 10
     75e:	90 f4       	brcc	.+36     	; 0x784 <get_ldnumber+0x56>
     760:	12 96       	adiw	r26, 0x02	; 2
     762:	2a 17       	cp	r18, r26
     764:	3b 07       	cpc	r19, r27
     766:	89 f4       	brne	.+34     	; 0x78a <get_ldnumber+0x5c>
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	c0 97       	sbiw	r24, 0x30	; 48
     76c:	18 16       	cp	r1, r24
     76e:	19 06       	cpc	r1, r25
     770:	7c f0       	brlt	.+30     	; 0x790 <get_ldnumber+0x62>
     772:	39 83       	std	Y+1, r19	; 0x01
     774:	28 83       	st	Y, r18
     776:	0e c0       	rjmp	.+28     	; 0x794 <get_ldnumber+0x66>
     778:	8f ef       	ldi	r24, 0xFF	; 255
     77a:	9f ef       	ldi	r25, 0xFF	; 255
     77c:	0b c0       	rjmp	.+22     	; 0x794 <get_ldnumber+0x66>
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	08 c0       	rjmp	.+16     	; 0x794 <get_ldnumber+0x66>
     784:	8f ef       	ldi	r24, 0xFF	; 255
     786:	9f ef       	ldi	r25, 0xFF	; 255
     788:	05 c0       	rjmp	.+10     	; 0x794 <get_ldnumber+0x66>
     78a:	8f ef       	ldi	r24, 0xFF	; 255
     78c:	9f ef       	ldi	r25, 0xFF	; 255
     78e:	02 c0       	rjmp	.+4      	; 0x794 <get_ldnumber+0x66>
     790:	8f ef       	ldi	r24, 0xFF	; 255
     792:	9f ef       	ldi	r25, 0xFF	; 255
     794:	df 91       	pop	r29
     796:	cf 91       	pop	r28
     798:	08 95       	ret

0000079a <validate>:
     79a:	0f 93       	push	r16
     79c:	1f 93       	push	r17
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	ec 01       	movw	r28, r24
     7a4:	8b 01       	movw	r16, r22
     7a6:	89 2b       	or	r24, r25
     7a8:	d9 f0       	breq	.+54     	; 0x7e0 <validate+0x46>
     7aa:	e8 81       	ld	r30, Y
     7ac:	f9 81       	ldd	r31, Y+1	; 0x01
     7ae:	30 97       	sbiw	r30, 0x00	; 0
     7b0:	b9 f0       	breq	.+46     	; 0x7e0 <validate+0x46>
     7b2:	80 81       	ld	r24, Z
     7b4:	88 23       	and	r24, r24
     7b6:	a1 f0       	breq	.+40     	; 0x7e0 <validate+0x46>
     7b8:	2a 81       	ldd	r18, Y+2	; 0x02
     7ba:	3b 81       	ldd	r19, Y+3	; 0x03
     7bc:	85 81       	ldd	r24, Z+5	; 0x05
     7be:	96 81       	ldd	r25, Z+6	; 0x06
     7c0:	28 17       	cp	r18, r24
     7c2:	39 07       	cpc	r19, r25
     7c4:	69 f4       	brne	.+26     	; 0x7e0 <validate+0x46>
     7c6:	81 81       	ldd	r24, Z+1	; 0x01
     7c8:	d7 de       	rcall	.-594    	; 0x578 <disk_status>
     7ca:	80 fd       	sbrc	r24, 0
     7cc:	09 c0       	rjmp	.+18     	; 0x7e0 <validate+0x46>
     7ce:	04 c0       	rjmp	.+8      	; 0x7d8 <validate+0x3e>
     7d0:	f8 01       	movw	r30, r16
     7d2:	31 83       	std	Z+1, r19	; 0x01
     7d4:	20 83       	st	Z, r18
     7d6:	08 c0       	rjmp	.+16     	; 0x7e8 <validate+0x4e>
     7d8:	28 81       	ld	r18, Y
     7da:	39 81       	ldd	r19, Y+1	; 0x01
     7dc:	80 e0       	ldi	r24, 0x00	; 0
     7de:	f8 cf       	rjmp	.-16     	; 0x7d0 <validate+0x36>
     7e0:	89 e0       	ldi	r24, 0x09	; 9
     7e2:	20 e0       	ldi	r18, 0x00	; 0
     7e4:	30 e0       	ldi	r19, 0x00	; 0
     7e6:	f4 cf       	rjmp	.-24     	; 0x7d0 <validate+0x36>
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	1f 91       	pop	r17
     7ee:	0f 91       	pop	r16
     7f0:	08 95       	ret

000007f2 <sync_window>:
     7f2:	8f 92       	push	r8
     7f4:	9f 92       	push	r9
     7f6:	af 92       	push	r10
     7f8:	bf 92       	push	r11
     7fa:	ef 92       	push	r14
     7fc:	ff 92       	push	r15
     7fe:	0f 93       	push	r16
     800:	1f 93       	push	r17
     802:	cf 93       	push	r28
     804:	df 93       	push	r29
     806:	fc 01       	movw	r30, r24
     808:	23 81       	ldd	r18, Z+3	; 0x03
     80a:	22 23       	and	r18, r18
     80c:	c1 f1       	breq	.+112    	; 0x87e <sync_window+0x8c>
     80e:	ec 01       	movw	r28, r24
     810:	7c 01       	movw	r14, r24
     812:	ff e2       	ldi	r31, 0x2F	; 47
     814:	ef 0e       	add	r14, r31
     816:	f1 1c       	adc	r15, r1
     818:	2b a5       	ldd	r18, Y+43	; 0x2b
     81a:	3c a5       	ldd	r19, Y+44	; 0x2c
     81c:	4d a5       	ldd	r20, Y+45	; 0x2d
     81e:	5e a5       	ldd	r21, Y+46	; 0x2e
     820:	01 e0       	ldi	r16, 0x01	; 1
     822:	10 e0       	ldi	r17, 0x00	; 0
     824:	b7 01       	movw	r22, r14
     826:	89 81       	ldd	r24, Y+1	; 0x01
     828:	f0 de       	rcall	.-544    	; 0x60a <disk_write>
     82a:	81 11       	cpse	r24, r1
     82c:	2a c0       	rjmp	.+84     	; 0x882 <sync_window+0x90>
     82e:	1b 82       	std	Y+3, r1	; 0x03
     830:	0b a5       	ldd	r16, Y+43	; 0x2b
     832:	1c a5       	ldd	r17, Y+44	; 0x2c
     834:	2d a5       	ldd	r18, Y+45	; 0x2d
     836:	3e a5       	ldd	r19, Y+46	; 0x2e
     838:	8f 89       	ldd	r24, Y+23	; 0x17
     83a:	98 8d       	ldd	r25, Y+24	; 0x18
     83c:	a9 8d       	ldd	r26, Y+25	; 0x19
     83e:	ba 8d       	ldd	r27, Y+26	; 0x1a
     840:	8f 8c       	ldd	r8, Y+31	; 0x1f
     842:	98 a0       	ldd	r9, Y+32	; 0x20
     844:	a9 a0       	ldd	r10, Y+33	; 0x21
     846:	ba a0       	ldd	r11, Y+34	; 0x22
     848:	b9 01       	movw	r22, r18
     84a:	a8 01       	movw	r20, r16
     84c:	48 19       	sub	r20, r8
     84e:	59 09       	sbc	r21, r9
     850:	6a 09       	sbc	r22, r10
     852:	7b 09       	sbc	r23, r11
     854:	48 17       	cp	r20, r24
     856:	59 07       	cpc	r21, r25
     858:	6a 07       	cpc	r22, r26
     85a:	7b 07       	cpc	r23, r27
     85c:	a0 f4       	brcc	.+40     	; 0x886 <sync_window+0x94>
     85e:	6a 81       	ldd	r22, Y+2	; 0x02
     860:	62 30       	cpi	r22, 0x02	; 2
     862:	99 f4       	brne	.+38     	; 0x88a <sync_window+0x98>
     864:	a9 01       	movw	r20, r18
     866:	98 01       	movw	r18, r16
     868:	28 0f       	add	r18, r24
     86a:	39 1f       	adc	r19, r25
     86c:	4a 1f       	adc	r20, r26
     86e:	5b 1f       	adc	r21, r27
     870:	01 e0       	ldi	r16, 0x01	; 1
     872:	10 e0       	ldi	r17, 0x00	; 0
     874:	b7 01       	movw	r22, r14
     876:	89 81       	ldd	r24, Y+1	; 0x01
     878:	c8 de       	rcall	.-624    	; 0x60a <disk_write>
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	07 c0       	rjmp	.+14     	; 0x88c <sync_window+0x9a>
     87e:	80 e0       	ldi	r24, 0x00	; 0
     880:	05 c0       	rjmp	.+10     	; 0x88c <sync_window+0x9a>
     882:	81 e0       	ldi	r24, 0x01	; 1
     884:	03 c0       	rjmp	.+6      	; 0x88c <sync_window+0x9a>
     886:	80 e0       	ldi	r24, 0x00	; 0
     888:	01 c0       	rjmp	.+2      	; 0x88c <sync_window+0x9a>
     88a:	80 e0       	ldi	r24, 0x00	; 0
     88c:	df 91       	pop	r29
     88e:	cf 91       	pop	r28
     890:	1f 91       	pop	r17
     892:	0f 91       	pop	r16
     894:	ff 90       	pop	r15
     896:	ef 90       	pop	r14
     898:	bf 90       	pop	r11
     89a:	af 90       	pop	r10
     89c:	9f 90       	pop	r9
     89e:	8f 90       	pop	r8
     8a0:	08 95       	ret

000008a2 <move_window>:
     8a2:	8f 92       	push	r8
     8a4:	9f 92       	push	r9
     8a6:	af 92       	push	r10
     8a8:	bf 92       	push	r11
     8aa:	ff 92       	push	r15
     8ac:	0f 93       	push	r16
     8ae:	1f 93       	push	r17
     8b0:	cf 93       	push	r28
     8b2:	df 93       	push	r29
     8b4:	ec 01       	movw	r28, r24
     8b6:	4a 01       	movw	r8, r20
     8b8:	5b 01       	movw	r10, r22
     8ba:	8b a5       	ldd	r24, Y+43	; 0x2b
     8bc:	9c a5       	ldd	r25, Y+44	; 0x2c
     8be:	ad a5       	ldd	r26, Y+45	; 0x2d
     8c0:	be a5       	ldd	r27, Y+46	; 0x2e
     8c2:	84 17       	cp	r24, r20
     8c4:	95 07       	cpc	r25, r21
     8c6:	a6 07       	cpc	r26, r22
     8c8:	b7 07       	cpc	r27, r23
     8ca:	d9 f0       	breq	.+54     	; 0x902 <move_window+0x60>
     8cc:	ce 01       	movw	r24, r28
     8ce:	91 df       	rcall	.-222    	; 0x7f2 <sync_window>
     8d0:	f8 2e       	mov	r15, r24
     8d2:	81 11       	cpse	r24, r1
     8d4:	17 c0       	rjmp	.+46     	; 0x904 <move_window+0x62>
     8d6:	01 e0       	ldi	r16, 0x01	; 1
     8d8:	10 e0       	ldi	r17, 0x00	; 0
     8da:	a5 01       	movw	r20, r10
     8dc:	94 01       	movw	r18, r8
     8de:	be 01       	movw	r22, r28
     8e0:	61 5d       	subi	r22, 0xD1	; 209
     8e2:	7f 4f       	sbci	r23, 0xFF	; 255
     8e4:	89 81       	ldd	r24, Y+1	; 0x01
     8e6:	52 de       	rcall	.-860    	; 0x58c <disk_read>
     8e8:	88 23       	and	r24, r24
     8ea:	31 f0       	breq	.+12     	; 0x8f8 <move_window+0x56>
     8ec:	ff 24       	eor	r15, r15
     8ee:	f3 94       	inc	r15
     8f0:	88 24       	eor	r8, r8
     8f2:	8a 94       	dec	r8
     8f4:	98 2c       	mov	r9, r8
     8f6:	54 01       	movw	r10, r8
     8f8:	8b a6       	std	Y+43, r8	; 0x2b
     8fa:	9c a6       	std	Y+44, r9	; 0x2c
     8fc:	ad a6       	std	Y+45, r10	; 0x2d
     8fe:	be a6       	std	Y+46, r11	; 0x2e
     900:	01 c0       	rjmp	.+2      	; 0x904 <move_window+0x62>
     902:	f1 2c       	mov	r15, r1
     904:	8f 2d       	mov	r24, r15
     906:	df 91       	pop	r29
     908:	cf 91       	pop	r28
     90a:	1f 91       	pop	r17
     90c:	0f 91       	pop	r16
     90e:	ff 90       	pop	r15
     910:	bf 90       	pop	r11
     912:	af 90       	pop	r10
     914:	9f 90       	pop	r9
     916:	8f 90       	pop	r8
     918:	08 95       	ret

0000091a <dir_clear>:
     91a:	8f 92       	push	r8
     91c:	9f 92       	push	r9
     91e:	af 92       	push	r10
     920:	bf 92       	push	r11
     922:	cf 92       	push	r12
     924:	df 92       	push	r13
     926:	ef 92       	push	r14
     928:	ff 92       	push	r15
     92a:	0f 93       	push	r16
     92c:	1f 93       	push	r17
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	7c 01       	movw	r14, r24
     934:	4a 01       	movw	r8, r20
     936:	5b 01       	movw	r10, r22
     938:	5c df       	rcall	.-328    	; 0x7f2 <sync_window>
     93a:	81 11       	cpse	r24, r1
     93c:	40 c0       	rjmp	.+128    	; 0x9be <dir_clear+0xa4>
     93e:	b5 01       	movw	r22, r10
     940:	a4 01       	movw	r20, r8
     942:	c7 01       	movw	r24, r14
     944:	cc de       	rcall	.-616    	; 0x6de <clst2sect>
     946:	4b 01       	movw	r8, r22
     948:	5c 01       	movw	r10, r24
     94a:	f7 01       	movw	r30, r14
     94c:	63 a7       	std	Z+43, r22	; 0x2b
     94e:	74 a7       	std	Z+44, r23	; 0x2c
     950:	85 a7       	std	Z+45, r24	; 0x2d
     952:	96 a7       	std	Z+46, r25	; 0x2e
     954:	67 01       	movw	r12, r14
     956:	ff e2       	ldi	r31, 0x2F	; 47
     958:	cf 0e       	add	r12, r31
     95a:	d1 1c       	adc	r13, r1
     95c:	f6 01       	movw	r30, r12
     95e:	c7 01       	movw	r24, r14
     960:	81 5d       	subi	r24, 0xD1	; 209
     962:	9d 4f       	sbci	r25, 0xFD	; 253
     964:	11 92       	st	Z+, r1
     966:	e8 17       	cp	r30, r24
     968:	f9 07       	cpc	r31, r25
     96a:	e1 f7       	brne	.-8      	; 0x964 <dir_clear+0x4a>
     96c:	f7 01       	movw	r30, r14
     96e:	81 85       	ldd	r24, Z+9	; 0x09
     970:	92 85       	ldd	r25, Z+10	; 0x0a
     972:	89 2b       	or	r24, r25
     974:	59 f4       	brne	.+22     	; 0x98c <dir_clear+0x72>
     976:	c0 e0       	ldi	r28, 0x00	; 0
     978:	d0 e0       	ldi	r29, 0x00	; 0
     97a:	18 c0       	rjmp	.+48     	; 0x9ac <dir_clear+0x92>
     97c:	21 96       	adiw	r28, 0x01	; 1
     97e:	f7 01       	movw	r30, r14
     980:	81 85       	ldd	r24, Z+9	; 0x09
     982:	92 85       	ldd	r25, Z+10	; 0x0a
     984:	c8 17       	cp	r28, r24
     986:	d9 07       	cpc	r29, r25
     988:	18 f0       	brcs	.+6      	; 0x990 <dir_clear+0x76>
     98a:	10 c0       	rjmp	.+32     	; 0x9ac <dir_clear+0x92>
     98c:	c0 e0       	ldi	r28, 0x00	; 0
     98e:	d0 e0       	ldi	r29, 0x00	; 0
     990:	01 e0       	ldi	r16, 0x01	; 1
     992:	10 e0       	ldi	r17, 0x00	; 0
     994:	a5 01       	movw	r20, r10
     996:	94 01       	movw	r18, r8
     998:	2c 0f       	add	r18, r28
     99a:	3d 1f       	adc	r19, r29
     99c:	41 1d       	adc	r20, r1
     99e:	51 1d       	adc	r21, r1
     9a0:	b6 01       	movw	r22, r12
     9a2:	f7 01       	movw	r30, r14
     9a4:	81 81       	ldd	r24, Z+1	; 0x01
     9a6:	31 de       	rcall	.-926    	; 0x60a <disk_write>
     9a8:	88 23       	and	r24, r24
     9aa:	41 f3       	breq	.-48     	; 0x97c <dir_clear+0x62>
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	f7 01       	movw	r30, r14
     9b0:	21 85       	ldd	r18, Z+9	; 0x09
     9b2:	32 85       	ldd	r19, Z+10	; 0x0a
     9b4:	2c 17       	cp	r18, r28
     9b6:	3d 07       	cpc	r19, r29
     9b8:	19 f4       	brne	.+6      	; 0x9c0 <dir_clear+0xa6>
     9ba:	80 e0       	ldi	r24, 0x00	; 0
     9bc:	01 c0       	rjmp	.+2      	; 0x9c0 <dir_clear+0xa6>
     9be:	81 e0       	ldi	r24, 0x01	; 1
     9c0:	df 91       	pop	r29
     9c2:	cf 91       	pop	r28
     9c4:	1f 91       	pop	r17
     9c6:	0f 91       	pop	r16
     9c8:	ff 90       	pop	r15
     9ca:	ef 90       	pop	r14
     9cc:	df 90       	pop	r13
     9ce:	cf 90       	pop	r12
     9d0:	bf 90       	pop	r11
     9d2:	af 90       	pop	r10
     9d4:	9f 90       	pop	r9
     9d6:	8f 90       	pop	r8
     9d8:	08 95       	ret

000009da <sync_fs>:
     9da:	0f 93       	push	r16
     9dc:	1f 93       	push	r17
     9de:	cf 93       	push	r28
     9e0:	df 93       	push	r29
     9e2:	ec 01       	movw	r28, r24
     9e4:	06 df       	rcall	.-500    	; 0x7f2 <sync_window>
     9e6:	98 2f       	mov	r25, r24
     9e8:	81 11       	cpse	r24, r1
     9ea:	5f c0       	rjmp	.+190    	; 0xaaa <sync_fs+0xd0>
     9ec:	88 81       	ld	r24, Y
     9ee:	83 30       	cpi	r24, 0x03	; 3
     9f0:	09 f0       	breq	.+2      	; 0x9f4 <sync_fs+0x1a>
     9f2:	52 c0       	rjmp	.+164    	; 0xa98 <sync_fs+0xbe>
     9f4:	8c 81       	ldd	r24, Y+4	; 0x04
     9f6:	81 30       	cpi	r24, 0x01	; 1
     9f8:	09 f0       	breq	.+2      	; 0x9fc <sync_fs+0x22>
     9fa:	4e c0       	rjmp	.+156    	; 0xa98 <sync_fs+0xbe>
     9fc:	be 01       	movw	r22, r28
     9fe:	61 5d       	subi	r22, 0xD1	; 209
     a00:	7f 4f       	sbci	r23, 0xFF	; 255
     a02:	fb 01       	movw	r30, r22
     a04:	ce 01       	movw	r24, r28
     a06:	81 5d       	subi	r24, 0xD1	; 209
     a08:	9d 4f       	sbci	r25, 0xFD	; 253
     a0a:	11 92       	st	Z+, r1
     a0c:	e8 17       	cp	r30, r24
     a0e:	f9 07       	cpc	r31, r25
     a10:	e1 f7       	brne	.-8      	; 0xa0a <sync_fs+0x30>
     a12:	85 e5       	ldi	r24, 0x55	; 85
     a14:	fe 01       	movw	r30, r28
     a16:	e3 5d       	subi	r30, 0xD3	; 211
     a18:	fd 4f       	sbci	r31, 0xFD	; 253
     a1a:	80 83       	st	Z, r24
     a1c:	8a ea       	ldi	r24, 0xAA	; 170
     a1e:	31 96       	adiw	r30, 0x01	; 1
     a20:	80 83       	st	Z, r24
     a22:	82 e5       	ldi	r24, 0x52	; 82
     a24:	8f a7       	std	Y+47, r24	; 0x2f
     a26:	88 ab       	std	Y+48, r24	; 0x30
     a28:	81 e6       	ldi	r24, 0x61	; 97
     a2a:	89 ab       	std	Y+49, r24	; 0x31
     a2c:	91 e4       	ldi	r25, 0x41	; 65
     a2e:	9a ab       	std	Y+50, r25	; 0x32
     a30:	22 e7       	ldi	r18, 0x72	; 114
     a32:	7b 97       	sbiw	r30, 0x1b	; 27
     a34:	20 83       	st	Z, r18
     a36:	31 96       	adiw	r30, 0x01	; 1
     a38:	20 83       	st	Z, r18
     a3a:	31 96       	adiw	r30, 0x01	; 1
     a3c:	90 83       	st	Z, r25
     a3e:	31 96       	adiw	r30, 0x01	; 1
     a40:	80 83       	st	Z, r24
     a42:	3f 85       	ldd	r19, Y+15	; 0x0f
     a44:	28 89       	ldd	r18, Y+16	; 0x10
     a46:	99 89       	ldd	r25, Y+17	; 0x11
     a48:	8a 89       	ldd	r24, Y+18	; 0x12
     a4a:	31 96       	adiw	r30, 0x01	; 1
     a4c:	30 83       	st	Z, r19
     a4e:	31 96       	adiw	r30, 0x01	; 1
     a50:	20 83       	st	Z, r18
     a52:	31 96       	adiw	r30, 0x01	; 1
     a54:	90 83       	st	Z, r25
     a56:	31 96       	adiw	r30, 0x01	; 1
     a58:	80 83       	st	Z, r24
     a5a:	3b 85       	ldd	r19, Y+11	; 0x0b
     a5c:	2c 85       	ldd	r18, Y+12	; 0x0c
     a5e:	9d 85       	ldd	r25, Y+13	; 0x0d
     a60:	8e 85       	ldd	r24, Y+14	; 0x0e
     a62:	31 96       	adiw	r30, 0x01	; 1
     a64:	30 83       	st	Z, r19
     a66:	31 96       	adiw	r30, 0x01	; 1
     a68:	20 83       	st	Z, r18
     a6a:	31 96       	adiw	r30, 0x01	; 1
     a6c:	90 83       	st	Z, r25
     a6e:	31 96       	adiw	r30, 0x01	; 1
     a70:	80 83       	st	Z, r24
     a72:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a74:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a76:	ad 8d       	ldd	r26, Y+29	; 0x1d
     a78:	be 8d       	ldd	r27, Y+30	; 0x1e
     a7a:	9c 01       	movw	r18, r24
     a7c:	ad 01       	movw	r20, r26
     a7e:	2f 5f       	subi	r18, 0xFF	; 255
     a80:	3f 4f       	sbci	r19, 0xFF	; 255
     a82:	4f 4f       	sbci	r20, 0xFF	; 255
     a84:	5f 4f       	sbci	r21, 0xFF	; 255
     a86:	2b a7       	std	Y+43, r18	; 0x2b
     a88:	3c a7       	std	Y+44, r19	; 0x2c
     a8a:	4d a7       	std	Y+45, r20	; 0x2d
     a8c:	5e a7       	std	Y+46, r21	; 0x2e
     a8e:	01 e0       	ldi	r16, 0x01	; 1
     a90:	10 e0       	ldi	r17, 0x00	; 0
     a92:	89 81       	ldd	r24, Y+1	; 0x01
     a94:	ba dd       	rcall	.-1164   	; 0x60a <disk_write>
     a96:	1c 82       	std	Y+4, r1	; 0x04
     a98:	40 e0       	ldi	r20, 0x00	; 0
     a9a:	50 e0       	ldi	r21, 0x00	; 0
     a9c:	60 e0       	ldi	r22, 0x00	; 0
     a9e:	89 81       	ldd	r24, Y+1	; 0x01
     aa0:	f3 dd       	rcall	.-1050   	; 0x688 <disk_ioctl>
     aa2:	91 e0       	ldi	r25, 0x01	; 1
     aa4:	81 11       	cpse	r24, r1
     aa6:	01 c0       	rjmp	.+2      	; 0xaaa <sync_fs+0xd0>
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	89 2f       	mov	r24, r25
     aac:	df 91       	pop	r29
     aae:	cf 91       	pop	r28
     ab0:	1f 91       	pop	r17
     ab2:	0f 91       	pop	r16
     ab4:	08 95       	ret

00000ab6 <put_fat>:
     ab6:	2f 92       	push	r2
     ab8:	3f 92       	push	r3
     aba:	4f 92       	push	r4
     abc:	5f 92       	push	r5
     abe:	6f 92       	push	r6
     ac0:	7f 92       	push	r7
     ac2:	8f 92       	push	r8
     ac4:	9f 92       	push	r9
     ac6:	af 92       	push	r10
     ac8:	bf 92       	push	r11
     aca:	cf 92       	push	r12
     acc:	df 92       	push	r13
     ace:	ef 92       	push	r14
     ad0:	ff 92       	push	r15
     ad2:	0f 93       	push	r16
     ad4:	1f 93       	push	r17
     ad6:	cf 93       	push	r28
     ad8:	df 93       	push	r29
     ada:	42 30       	cpi	r20, 0x02	; 2
     adc:	51 05       	cpc	r21, r1
     ade:	61 05       	cpc	r22, r1
     ae0:	71 05       	cpc	r23, r1
     ae2:	08 f4       	brcc	.+2      	; 0xae6 <put_fat+0x30>
     ae4:	cc c0       	rjmp	.+408    	; 0xc7e <put_fat+0x1c8>
     ae6:	fc 01       	movw	r30, r24
     ae8:	c3 88       	ldd	r12, Z+19	; 0x13
     aea:	d4 88       	ldd	r13, Z+20	; 0x14
     aec:	e5 88       	ldd	r14, Z+21	; 0x15
     aee:	f6 88       	ldd	r15, Z+22	; 0x16
     af0:	4c 15       	cp	r20, r12
     af2:	5d 05       	cpc	r21, r13
     af4:	6e 05       	cpc	r22, r14
     af6:	7f 05       	cpc	r23, r15
     af8:	08 f0       	brcs	.+2      	; 0xafc <put_fat+0x46>
     afa:	c3 c0       	rjmp	.+390    	; 0xc82 <put_fat+0x1cc>
     afc:	28 01       	movw	r4, r16
     afe:	39 01       	movw	r6, r18
     b00:	6a 01       	movw	r12, r20
     b02:	7b 01       	movw	r14, r22
     b04:	ec 01       	movw	r28, r24
     b06:	80 81       	ld	r24, Z
     b08:	82 30       	cpi	r24, 0x02	; 2
     b0a:	09 f4       	brne	.+2      	; 0xb0e <put_fat+0x58>
     b0c:	61 c0       	rjmp	.+194    	; 0xbd0 <put_fat+0x11a>
     b0e:	83 30       	cpi	r24, 0x03	; 3
     b10:	09 f4       	brne	.+2      	; 0xb14 <put_fat+0x5e>
     b12:	7e c0       	rjmp	.+252    	; 0xc10 <put_fat+0x15a>
     b14:	81 30       	cpi	r24, 0x01	; 1
     b16:	09 f0       	breq	.+2      	; 0xb1a <put_fat+0x64>
     b18:	b6 c0       	rjmp	.+364    	; 0xc86 <put_fat+0x1d0>
     b1a:	5a 01       	movw	r10, r20
     b1c:	b6 94       	lsr	r11
     b1e:	a7 94       	ror	r10
     b20:	a4 0e       	add	r10, r20
     b22:	b5 1e       	adc	r11, r21
     b24:	c5 01       	movw	r24, r10
     b26:	89 2f       	mov	r24, r25
     b28:	99 27       	eor	r25, r25
     b2a:	86 95       	lsr	r24
     b2c:	47 8d       	ldd	r20, Z+31	; 0x1f
     b2e:	50 a1       	ldd	r21, Z+32	; 0x20
     b30:	61 a1       	ldd	r22, Z+33	; 0x21
     b32:	72 a1       	ldd	r23, Z+34	; 0x22
     b34:	48 0f       	add	r20, r24
     b36:	59 1f       	adc	r21, r25
     b38:	61 1d       	adc	r22, r1
     b3a:	71 1d       	adc	r23, r1
     b3c:	cf 01       	movw	r24, r30
     b3e:	b1 de       	rcall	.-670    	; 0x8a2 <move_window>
     b40:	18 2f       	mov	r17, r24
     b42:	81 11       	cpse	r24, r1
     b44:	c0 c0       	rjmp	.+384    	; 0xcc6 <put_fat+0x210>
     b46:	1e 01       	movw	r2, r28
     b48:	ff e2       	ldi	r31, 0x2F	; 47
     b4a:	2f 0e       	add	r2, r31
     b4c:	31 1c       	adc	r3, r1
     b4e:	45 01       	movw	r8, r10
     b50:	2f ef       	ldi	r18, 0xFF	; 255
     b52:	82 1a       	sub	r8, r18
     b54:	92 0a       	sbc	r9, r18
     b56:	31 e0       	ldi	r19, 0x01	; 1
     b58:	b3 22       	and	r11, r19
     b5a:	f1 01       	movw	r30, r2
     b5c:	ea 0d       	add	r30, r10
     b5e:	fb 1d       	adc	r31, r11
     b60:	c0 fe       	sbrs	r12, 0
     b62:	1d c0       	rjmp	.+58     	; 0xb9e <put_fat+0xe8>
     b64:	80 81       	ld	r24, Z
     b66:	28 2f       	mov	r18, r24
     b68:	2f 70       	andi	r18, 0x0F	; 15
     b6a:	30 e1       	ldi	r19, 0x10	; 16
     b6c:	43 9e       	mul	r4, r19
     b6e:	c0 01       	movw	r24, r0
     b70:	11 24       	eor	r1, r1
     b72:	82 2b       	or	r24, r18
     b74:	80 83       	st	Z, r24
     b76:	81 e0       	ldi	r24, 0x01	; 1
     b78:	8b 83       	std	Y+3, r24	; 0x03
     b7a:	4f 8d       	ldd	r20, Y+31	; 0x1f
     b7c:	58 a1       	ldd	r21, Y+32	; 0x20
     b7e:	69 a1       	ldd	r22, Y+33	; 0x21
     b80:	7a a1       	ldd	r23, Y+34	; 0x22
     b82:	c4 01       	movw	r24, r8
     b84:	89 2f       	mov	r24, r25
     b86:	99 27       	eor	r25, r25
     b88:	86 95       	lsr	r24
     b8a:	48 0f       	add	r20, r24
     b8c:	59 1f       	adc	r21, r25
     b8e:	61 1d       	adc	r22, r1
     b90:	71 1d       	adc	r23, r1
     b92:	ce 01       	movw	r24, r28
     b94:	86 de       	rcall	.-756    	; 0x8a2 <move_window>
     b96:	88 23       	and	r24, r24
     b98:	09 f4       	brne	.+2      	; 0xb9c <put_fat+0xe6>
     b9a:	7b c0       	rjmp	.+246    	; 0xc92 <put_fat+0x1dc>
     b9c:	76 c0       	rjmp	.+236    	; 0xc8a <put_fat+0x1d4>
     b9e:	40 82       	st	Z, r4
     ba0:	81 e0       	ldi	r24, 0x01	; 1
     ba2:	8b 83       	std	Y+3, r24	; 0x03
     ba4:	4f 8d       	ldd	r20, Y+31	; 0x1f
     ba6:	58 a1       	ldd	r21, Y+32	; 0x20
     ba8:	69 a1       	ldd	r22, Y+33	; 0x21
     baa:	7a a1       	ldd	r23, Y+34	; 0x22
     bac:	c4 01       	movw	r24, r8
     bae:	89 2f       	mov	r24, r25
     bb0:	99 27       	eor	r25, r25
     bb2:	86 95       	lsr	r24
     bb4:	48 0f       	add	r20, r24
     bb6:	59 1f       	adc	r21, r25
     bb8:	61 1d       	adc	r22, r1
     bba:	71 1d       	adc	r23, r1
     bbc:	ce 01       	movw	r24, r28
     bbe:	71 de       	rcall	.-798    	; 0x8a2 <move_window>
     bc0:	88 23       	and	r24, r24
     bc2:	09 f4       	brne	.+2      	; 0xbc6 <put_fat+0x110>
     bc4:	74 c0       	rjmp	.+232    	; 0xcae <put_fat+0x1f8>
     bc6:	63 c0       	rjmp	.+198    	; 0xc8e <put_fat+0x1d8>
     bc8:	40 82       	st	Z, r4
     bca:	81 e0       	ldi	r24, 0x01	; 1
     bcc:	8b 83       	std	Y+3, r24	; 0x03
     bce:	7b c0       	rjmp	.+246    	; 0xcc6 <put_fat+0x210>
     bd0:	45 2f       	mov	r20, r21
     bd2:	56 2f       	mov	r21, r22
     bd4:	67 2f       	mov	r22, r23
     bd6:	77 27       	eor	r23, r23
     bd8:	87 8d       	ldd	r24, Z+31	; 0x1f
     bda:	90 a1       	ldd	r25, Z+32	; 0x20
     bdc:	a1 a1       	ldd	r26, Z+33	; 0x21
     bde:	b2 a1       	ldd	r27, Z+34	; 0x22
     be0:	48 0f       	add	r20, r24
     be2:	59 1f       	adc	r21, r25
     be4:	6a 1f       	adc	r22, r26
     be6:	7b 1f       	adc	r23, r27
     be8:	cf 01       	movw	r24, r30
     bea:	5b de       	rcall	.-842    	; 0x8a2 <move_window>
     bec:	18 2f       	mov	r17, r24
     bee:	81 11       	cpse	r24, r1
     bf0:	6a c0       	rjmp	.+212    	; 0xcc6 <put_fat+0x210>
     bf2:	fe 01       	movw	r30, r28
     bf4:	bf 96       	adiw	r30, 0x2f	; 47
     bf6:	cc 0c       	add	r12, r12
     bf8:	dd 1c       	adc	r13, r13
     bfa:	e8 94       	clt
     bfc:	c0 f8       	bld	r12, 0
     bfe:	81 e0       	ldi	r24, 0x01	; 1
     c00:	d8 22       	and	r13, r24
     c02:	ec 0d       	add	r30, r12
     c04:	fd 1d       	adc	r31, r13
     c06:	40 82       	st	Z, r4
     c08:	51 82       	std	Z+1, r5	; 0x01
     c0a:	81 e0       	ldi	r24, 0x01	; 1
     c0c:	8b 83       	std	Y+3, r24	; 0x03
     c0e:	5b c0       	rjmp	.+182    	; 0xcc6 <put_fat+0x210>
     c10:	87 8d       	ldd	r24, Z+31	; 0x1f
     c12:	90 a1       	ldd	r25, Z+32	; 0x20
     c14:	a1 a1       	ldd	r26, Z+33	; 0x21
     c16:	b2 a1       	ldd	r27, Z+34	; 0x22
     c18:	68 94       	set
     c1a:	16 f8       	bld	r1, 6
     c1c:	76 95       	lsr	r23
     c1e:	67 95       	ror	r22
     c20:	57 95       	ror	r21
     c22:	47 95       	ror	r20
     c24:	16 94       	lsr	r1
     c26:	d1 f7       	brne	.-12     	; 0xc1c <put_fat+0x166>
     c28:	48 0f       	add	r20, r24
     c2a:	59 1f       	adc	r21, r25
     c2c:	6a 1f       	adc	r22, r26
     c2e:	7b 1f       	adc	r23, r27
     c30:	cf 01       	movw	r24, r30
     c32:	37 de       	rcall	.-914    	; 0x8a2 <move_window>
     c34:	18 2f       	mov	r17, r24
     c36:	81 11       	cpse	r24, r1
     c38:	46 c0       	rjmp	.+140    	; 0xcc6 <put_fat+0x210>
     c3a:	ef e0       	ldi	r30, 0x0F	; 15
     c3c:	7e 22       	and	r7, r30
     c3e:	ce 01       	movw	r24, r28
     c40:	8f 96       	adiw	r24, 0x2f	; 47
     c42:	cc 0c       	add	r12, r12
     c44:	dd 1c       	adc	r13, r13
     c46:	cc 0c       	add	r12, r12
     c48:	dd 1c       	adc	r13, r13
     c4a:	fc ef       	ldi	r31, 0xFC	; 252
     c4c:	cf 22       	and	r12, r31
     c4e:	f1 e0       	ldi	r31, 0x01	; 1
     c50:	df 22       	and	r13, r31
     c52:	c8 0e       	add	r12, r24
     c54:	d9 1e       	adc	r13, r25
     c56:	c6 01       	movw	r24, r12
     c58:	19 dd       	rcall	.-1486   	; 0x68c <ld_dword>
     c5a:	dc 01       	movw	r26, r24
     c5c:	cb 01       	movw	r24, r22
     c5e:	88 27       	eor	r24, r24
     c60:	99 27       	eor	r25, r25
     c62:	aa 27       	eor	r26, r26
     c64:	b0 7f       	andi	r27, 0xF0	; 240
     c66:	48 2a       	or	r4, r24
     c68:	59 2a       	or	r5, r25
     c6a:	6a 2a       	or	r6, r26
     c6c:	7b 2a       	or	r7, r27
     c6e:	f6 01       	movw	r30, r12
     c70:	40 82       	st	Z, r4
     c72:	51 82       	std	Z+1, r5	; 0x01
     c74:	62 82       	std	Z+2, r6	; 0x02
     c76:	73 82       	std	Z+3, r7	; 0x03
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	8b 83       	std	Y+3, r24	; 0x03
     c7c:	24 c0       	rjmp	.+72     	; 0xcc6 <put_fat+0x210>
     c7e:	12 e0       	ldi	r17, 0x02	; 2
     c80:	22 c0       	rjmp	.+68     	; 0xcc6 <put_fat+0x210>
     c82:	12 e0       	ldi	r17, 0x02	; 2
     c84:	20 c0       	rjmp	.+64     	; 0xcc6 <put_fat+0x210>
     c86:	12 e0       	ldi	r17, 0x02	; 2
     c88:	1e c0       	rjmp	.+60     	; 0xcc6 <put_fat+0x210>
     c8a:	18 2f       	mov	r17, r24
     c8c:	1c c0       	rjmp	.+56     	; 0xcc6 <put_fat+0x210>
     c8e:	18 2f       	mov	r17, r24
     c90:	1a c0       	rjmp	.+52     	; 0xcc6 <put_fat+0x210>
     c92:	f1 e0       	ldi	r31, 0x01	; 1
     c94:	9f 22       	and	r9, r31
     c96:	f1 01       	movw	r30, r2
     c98:	e8 0d       	add	r30, r8
     c9a:	f9 1d       	adc	r31, r9
     c9c:	68 94       	set
     c9e:	13 f8       	bld	r1, 3
     ca0:	76 94       	lsr	r7
     ca2:	67 94       	ror	r6
     ca4:	57 94       	ror	r5
     ca6:	47 94       	ror	r4
     ca8:	16 94       	lsr	r1
     caa:	d1 f7       	brne	.-12     	; 0xca0 <put_fat+0x1ea>
     cac:	8d cf       	rjmp	.-230    	; 0xbc8 <put_fat+0x112>
     cae:	21 e0       	ldi	r18, 0x01	; 1
     cb0:	92 22       	and	r9, r18
     cb2:	f1 01       	movw	r30, r2
     cb4:	e8 0d       	add	r30, r8
     cb6:	f9 1d       	adc	r31, r9
     cb8:	90 81       	ld	r25, Z
     cba:	90 7f       	andi	r25, 0xF0	; 240
     cbc:	85 2d       	mov	r24, r5
     cbe:	8f 70       	andi	r24, 0x0F	; 15
     cc0:	49 2e       	mov	r4, r25
     cc2:	48 2a       	or	r4, r24
     cc4:	81 cf       	rjmp	.-254    	; 0xbc8 <put_fat+0x112>
     cc6:	81 2f       	mov	r24, r17
     cc8:	df 91       	pop	r29
     cca:	cf 91       	pop	r28
     ccc:	1f 91       	pop	r17
     cce:	0f 91       	pop	r16
     cd0:	ff 90       	pop	r15
     cd2:	ef 90       	pop	r14
     cd4:	df 90       	pop	r13
     cd6:	cf 90       	pop	r12
     cd8:	bf 90       	pop	r11
     cda:	af 90       	pop	r10
     cdc:	9f 90       	pop	r9
     cde:	8f 90       	pop	r8
     ce0:	7f 90       	pop	r7
     ce2:	6f 90       	pop	r6
     ce4:	5f 90       	pop	r5
     ce6:	4f 90       	pop	r4
     ce8:	3f 90       	pop	r3
     cea:	2f 90       	pop	r2
     cec:	08 95       	ret

00000cee <st_clust>:
     cee:	fb 01       	movw	r30, r22
     cf0:	22 8f       	std	Z+26, r18	; 0x1a
     cf2:	33 8f       	std	Z+27, r19	; 0x1b
     cf4:	dc 01       	movw	r26, r24
     cf6:	8c 91       	ld	r24, X
     cf8:	83 30       	cpi	r24, 0x03	; 3
     cfa:	29 f4       	brne	.+10     	; 0xd06 <st_clust+0x18>
     cfc:	ca 01       	movw	r24, r20
     cfe:	aa 27       	eor	r26, r26
     d00:	bb 27       	eor	r27, r27
     d02:	84 8b       	std	Z+20, r24	; 0x14
     d04:	95 8b       	std	Z+21, r25	; 0x15
     d06:	08 95       	ret

00000d08 <get_fat>:
     d08:	af 92       	push	r10
     d0a:	bf 92       	push	r11
     d0c:	cf 92       	push	r12
     d0e:	df 92       	push	r13
     d10:	ef 92       	push	r14
     d12:	ff 92       	push	r15
     d14:	0f 93       	push	r16
     d16:	1f 93       	push	r17
     d18:	cf 93       	push	r28
     d1a:	df 93       	push	r29
     d1c:	42 30       	cpi	r20, 0x02	; 2
     d1e:	51 05       	cpc	r21, r1
     d20:	61 05       	cpc	r22, r1
     d22:	71 05       	cpc	r23, r1
     d24:	08 f4       	brcc	.+2      	; 0xd28 <get_fat+0x20>
     d26:	a1 c0       	rjmp	.+322    	; 0xe6a <get_fat+0x162>
     d28:	fc 01       	movw	r30, r24
     d2a:	c0 81       	ld	r28, Z
     d2c:	d1 81       	ldd	r29, Z+1	; 0x01
     d2e:	8b 89       	ldd	r24, Y+19	; 0x13
     d30:	9c 89       	ldd	r25, Y+20	; 0x14
     d32:	ad 89       	ldd	r26, Y+21	; 0x15
     d34:	be 89       	ldd	r27, Y+22	; 0x16
     d36:	48 17       	cp	r20, r24
     d38:	59 07       	cpc	r21, r25
     d3a:	6a 07       	cpc	r22, r26
     d3c:	7b 07       	cpc	r23, r27
     d3e:	08 f0       	brcs	.+2      	; 0xd42 <get_fat+0x3a>
     d40:	99 c0       	rjmp	.+306    	; 0xe74 <get_fat+0x16c>
     d42:	6a 01       	movw	r12, r20
     d44:	7b 01       	movw	r14, r22
     d46:	88 81       	ld	r24, Y
     d48:	82 30       	cpi	r24, 0x02	; 2
     d4a:	09 f4       	brne	.+2      	; 0xd4e <get_fat+0x46>
     d4c:	4b c0       	rjmp	.+150    	; 0xde4 <get_fat+0xdc>
     d4e:	83 30       	cpi	r24, 0x03	; 3
     d50:	09 f4       	brne	.+2      	; 0xd54 <get_fat+0x4c>
     d52:	69 c0       	rjmp	.+210    	; 0xe26 <get_fat+0x11e>
     d54:	81 30       	cpi	r24, 0x01	; 1
     d56:	09 f0       	breq	.+2      	; 0xd5a <get_fat+0x52>
     d58:	92 c0       	rjmp	.+292    	; 0xe7e <get_fat+0x176>
     d5a:	8a 01       	movw	r16, r20
     d5c:	16 95       	lsr	r17
     d5e:	07 95       	ror	r16
     d60:	04 0f       	add	r16, r20
     d62:	15 1f       	adc	r17, r21
     d64:	c8 01       	movw	r24, r16
     d66:	89 2f       	mov	r24, r25
     d68:	99 27       	eor	r25, r25
     d6a:	86 95       	lsr	r24
     d6c:	4f 8d       	ldd	r20, Y+31	; 0x1f
     d6e:	58 a1       	ldd	r21, Y+32	; 0x20
     d70:	69 a1       	ldd	r22, Y+33	; 0x21
     d72:	7a a1       	ldd	r23, Y+34	; 0x22
     d74:	48 0f       	add	r20, r24
     d76:	59 1f       	adc	r21, r25
     d78:	61 1d       	adc	r22, r1
     d7a:	71 1d       	adc	r23, r1
     d7c:	ce 01       	movw	r24, r28
     d7e:	91 dd       	rcall	.-1246   	; 0x8a2 <move_window>
     d80:	81 11       	cpse	r24, r1
     d82:	82 c0       	rjmp	.+260    	; 0xe88 <get_fat+0x180>
     d84:	58 01       	movw	r10, r16
     d86:	ff ef       	ldi	r31, 0xFF	; 255
     d88:	af 1a       	sub	r10, r31
     d8a:	bf 0a       	sbc	r11, r31
     d8c:	11 70       	andi	r17, 0x01	; 1
     d8e:	fe 01       	movw	r30, r28
     d90:	e0 0f       	add	r30, r16
     d92:	f1 1f       	adc	r31, r17
     d94:	17 a5       	ldd	r17, Z+47	; 0x2f
     d96:	c5 01       	movw	r24, r10
     d98:	89 2f       	mov	r24, r25
     d9a:	99 27       	eor	r25, r25
     d9c:	86 95       	lsr	r24
     d9e:	4f 8d       	ldd	r20, Y+31	; 0x1f
     da0:	58 a1       	ldd	r21, Y+32	; 0x20
     da2:	69 a1       	ldd	r22, Y+33	; 0x21
     da4:	7a a1       	ldd	r23, Y+34	; 0x22
     da6:	48 0f       	add	r20, r24
     da8:	59 1f       	adc	r21, r25
     daa:	61 1d       	adc	r22, r1
     dac:	71 1d       	adc	r23, r1
     dae:	ce 01       	movw	r24, r28
     db0:	78 dd       	rcall	.-1296   	; 0x8a2 <move_window>
     db2:	81 11       	cpse	r24, r1
     db4:	6d c0       	rjmp	.+218    	; 0xe90 <get_fat+0x188>
     db6:	81 e0       	ldi	r24, 0x01	; 1
     db8:	b8 22       	and	r11, r24
     dba:	ca 0d       	add	r28, r10
     dbc:	db 1d       	adc	r29, r11
     dbe:	8f a5       	ldd	r24, Y+47	; 0x2f
     dc0:	61 2f       	mov	r22, r17
     dc2:	70 e0       	ldi	r23, 0x00	; 0
     dc4:	78 2b       	or	r23, r24
     dc6:	c0 fe       	sbrs	r12, 0
     dc8:	09 c0       	rjmp	.+18     	; 0xddc <get_fat+0xd4>
     dca:	72 95       	swap	r23
     dcc:	62 95       	swap	r22
     dce:	6f 70       	andi	r22, 0x0F	; 15
     dd0:	67 27       	eor	r22, r23
     dd2:	7f 70       	andi	r23, 0x0F	; 15
     dd4:	67 27       	eor	r22, r23
     dd6:	80 e0       	ldi	r24, 0x00	; 0
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	65 c0       	rjmp	.+202    	; 0xea6 <get_fat+0x19e>
     ddc:	7f 70       	andi	r23, 0x0F	; 15
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	61 c0       	rjmp	.+194    	; 0xea6 <get_fat+0x19e>
     de4:	45 2f       	mov	r20, r21
     de6:	56 2f       	mov	r21, r22
     de8:	67 2f       	mov	r22, r23
     dea:	77 27       	eor	r23, r23
     dec:	8f 8d       	ldd	r24, Y+31	; 0x1f
     dee:	98 a1       	ldd	r25, Y+32	; 0x20
     df0:	a9 a1       	ldd	r26, Y+33	; 0x21
     df2:	ba a1       	ldd	r27, Y+34	; 0x22
     df4:	48 0f       	add	r20, r24
     df6:	59 1f       	adc	r21, r25
     df8:	6a 1f       	adc	r22, r26
     dfa:	7b 1f       	adc	r23, r27
     dfc:	ce 01       	movw	r24, r28
     dfe:	51 dd       	rcall	.-1374   	; 0x8a2 <move_window>
     e00:	81 11       	cpse	r24, r1
     e02:	4a c0       	rjmp	.+148    	; 0xe98 <get_fat+0x190>
     e04:	af 96       	adiw	r28, 0x2f	; 47
     e06:	a6 01       	movw	r20, r12
     e08:	44 0f       	add	r20, r20
     e0a:	55 1f       	adc	r21, r21
     e0c:	4e 7f       	andi	r20, 0xFE	; 254
     e0e:	51 70       	andi	r21, 0x01	; 1
     e10:	c4 0f       	add	r28, r20
     e12:	d5 1f       	adc	r29, r21
     e14:	69 81       	ldd	r22, Y+1	; 0x01
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	76 2f       	mov	r23, r22
     e1a:	66 27       	eor	r22, r22
     e1c:	88 81       	ld	r24, Y
     e1e:	68 2b       	or	r22, r24
     e20:	80 e0       	ldi	r24, 0x00	; 0
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	40 c0       	rjmp	.+128    	; 0xea6 <get_fat+0x19e>
     e26:	8f 8d       	ldd	r24, Y+31	; 0x1f
     e28:	98 a1       	ldd	r25, Y+32	; 0x20
     e2a:	a9 a1       	ldd	r26, Y+33	; 0x21
     e2c:	ba a1       	ldd	r27, Y+34	; 0x22
     e2e:	68 94       	set
     e30:	16 f8       	bld	r1, 6
     e32:	76 95       	lsr	r23
     e34:	67 95       	ror	r22
     e36:	57 95       	ror	r21
     e38:	47 95       	ror	r20
     e3a:	16 94       	lsr	r1
     e3c:	d1 f7       	brne	.-12     	; 0xe32 <get_fat+0x12a>
     e3e:	48 0f       	add	r20, r24
     e40:	59 1f       	adc	r21, r25
     e42:	6a 1f       	adc	r22, r26
     e44:	7b 1f       	adc	r23, r27
     e46:	ce 01       	movw	r24, r28
     e48:	2c dd       	rcall	.-1448   	; 0x8a2 <move_window>
     e4a:	81 11       	cpse	r24, r1
     e4c:	29 c0       	rjmp	.+82     	; 0xea0 <get_fat+0x198>
     e4e:	af 96       	adiw	r28, 0x2f	; 47
     e50:	a6 01       	movw	r20, r12
     e52:	44 0f       	add	r20, r20
     e54:	55 1f       	adc	r21, r21
     e56:	44 0f       	add	r20, r20
     e58:	55 1f       	adc	r21, r21
     e5a:	ca 01       	movw	r24, r20
     e5c:	8c 7f       	andi	r24, 0xFC	; 252
     e5e:	91 70       	andi	r25, 0x01	; 1
     e60:	8c 0f       	add	r24, r28
     e62:	9d 1f       	adc	r25, r29
     e64:	13 dc       	rcall	.-2010   	; 0x68c <ld_dword>
     e66:	9f 70       	andi	r25, 0x0F	; 15
     e68:	1e c0       	rjmp	.+60     	; 0xea6 <get_fat+0x19e>
     e6a:	61 e0       	ldi	r22, 0x01	; 1
     e6c:	70 e0       	ldi	r23, 0x00	; 0
     e6e:	80 e0       	ldi	r24, 0x00	; 0
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	19 c0       	rjmp	.+50     	; 0xea6 <get_fat+0x19e>
     e74:	61 e0       	ldi	r22, 0x01	; 1
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	80 e0       	ldi	r24, 0x00	; 0
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	14 c0       	rjmp	.+40     	; 0xea6 <get_fat+0x19e>
     e7e:	61 e0       	ldi	r22, 0x01	; 1
     e80:	70 e0       	ldi	r23, 0x00	; 0
     e82:	80 e0       	ldi	r24, 0x00	; 0
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	0f c0       	rjmp	.+30     	; 0xea6 <get_fat+0x19e>
     e88:	6f ef       	ldi	r22, 0xFF	; 255
     e8a:	7f ef       	ldi	r23, 0xFF	; 255
     e8c:	cb 01       	movw	r24, r22
     e8e:	0b c0       	rjmp	.+22     	; 0xea6 <get_fat+0x19e>
     e90:	6f ef       	ldi	r22, 0xFF	; 255
     e92:	7f ef       	ldi	r23, 0xFF	; 255
     e94:	cb 01       	movw	r24, r22
     e96:	07 c0       	rjmp	.+14     	; 0xea6 <get_fat+0x19e>
     e98:	6f ef       	ldi	r22, 0xFF	; 255
     e9a:	7f ef       	ldi	r23, 0xFF	; 255
     e9c:	cb 01       	movw	r24, r22
     e9e:	03 c0       	rjmp	.+6      	; 0xea6 <get_fat+0x19e>
     ea0:	6f ef       	ldi	r22, 0xFF	; 255
     ea2:	7f ef       	ldi	r23, 0xFF	; 255
     ea4:	cb 01       	movw	r24, r22
     ea6:	df 91       	pop	r29
     ea8:	cf 91       	pop	r28
     eaa:	1f 91       	pop	r17
     eac:	0f 91       	pop	r16
     eae:	ff 90       	pop	r15
     eb0:	ef 90       	pop	r14
     eb2:	df 90       	pop	r13
     eb4:	cf 90       	pop	r12
     eb6:	bf 90       	pop	r11
     eb8:	af 90       	pop	r10
     eba:	08 95       	ret

00000ebc <dir_sdi>:
     ebc:	4f 92       	push	r4
     ebe:	5f 92       	push	r5
     ec0:	6f 92       	push	r6
     ec2:	7f 92       	push	r7
     ec4:	8f 92       	push	r8
     ec6:	9f 92       	push	r9
     ec8:	af 92       	push	r10
     eca:	bf 92       	push	r11
     ecc:	cf 92       	push	r12
     ece:	df 92       	push	r13
     ed0:	ef 92       	push	r14
     ed2:	ff 92       	push	r15
     ed4:	0f 93       	push	r16
     ed6:	1f 93       	push	r17
     ed8:	cf 93       	push	r28
     eda:	df 93       	push	r29
     edc:	ec 01       	movw	r28, r24
     ede:	6a 01       	movw	r12, r20
     ee0:	7b 01       	movw	r14, r22
     ee2:	41 15       	cp	r20, r1
     ee4:	51 05       	cpc	r21, r1
     ee6:	80 e2       	ldi	r24, 0x20	; 32
     ee8:	68 07       	cpc	r22, r24
     eea:	71 05       	cpc	r23, r1
     eec:	08 f0       	brcs	.+2      	; 0xef0 <dir_sdi+0x34>
     eee:	b1 c0       	rjmp	.+354    	; 0x1052 <__EEPROM_REGION_LENGTH__+0x52>
     ef0:	db 01       	movw	r26, r22
     ef2:	ca 01       	movw	r24, r20
     ef4:	8f 71       	andi	r24, 0x1F	; 31
     ef6:	99 27       	eor	r25, r25
     ef8:	aa 27       	eor	r26, r26
     efa:	bb 27       	eor	r27, r27
     efc:	89 2b       	or	r24, r25
     efe:	8a 2b       	or	r24, r26
     f00:	8b 2b       	or	r24, r27
     f02:	09 f0       	breq	.+2      	; 0xf06 <dir_sdi+0x4a>
     f04:	a8 c0       	rjmp	.+336    	; 0x1056 <__EEPROM_REGION_LENGTH__+0x56>
     f06:	08 81       	ld	r16, Y
     f08:	19 81       	ldd	r17, Y+1	; 0x01
     f0a:	4e 87       	std	Y+14, r20	; 0x0e
     f0c:	5f 87       	std	Y+15, r21	; 0x0f
     f0e:	68 8b       	std	Y+16, r22	; 0x10
     f10:	79 8b       	std	Y+17, r23	; 0x11
     f12:	8e 80       	ldd	r8, Y+6	; 0x06
     f14:	9f 80       	ldd	r9, Y+7	; 0x07
     f16:	a8 84       	ldd	r10, Y+8	; 0x08
     f18:	b9 84       	ldd	r11, Y+9	; 0x09
     f1a:	81 14       	cp	r8, r1
     f1c:	91 04       	cpc	r9, r1
     f1e:	a1 04       	cpc	r10, r1
     f20:	b1 04       	cpc	r11, r1
     f22:	61 f5       	brne	.+88     	; 0xf7c <dir_sdi+0xc0>
     f24:	f8 01       	movw	r30, r16
     f26:	80 81       	ld	r24, Z
     f28:	83 30       	cpi	r24, 0x03	; 3
     f2a:	40 f0       	brcs	.+16     	; 0xf3c <dir_sdi+0x80>
     f2c:	83 a1       	ldd	r24, Z+35	; 0x23
     f2e:	94 a1       	ldd	r25, Z+36	; 0x24
     f30:	a5 a1       	ldd	r26, Z+37	; 0x25
     f32:	b6 a1       	ldd	r27, Z+38	; 0x26
     f34:	00 97       	sbiw	r24, 0x00	; 0
     f36:	a1 05       	cpc	r26, r1
     f38:	b1 05       	cpc	r27, r1
     f3a:	f1 f4       	brne	.+60     	; 0xf78 <dir_sdi+0xbc>
     f3c:	f8 01       	movw	r30, r16
     f3e:	87 81       	ldd	r24, Z+7	; 0x07
     f40:	90 85       	ldd	r25, Z+8	; 0x08
     f42:	a0 e0       	ldi	r26, 0x00	; 0
     f44:	b0 e0       	ldi	r27, 0x00	; 0
     f46:	b7 01       	movw	r22, r14
     f48:	a6 01       	movw	r20, r12
     f4a:	68 94       	set
     f4c:	14 f8       	bld	r1, 4
     f4e:	76 95       	lsr	r23
     f50:	67 95       	ror	r22
     f52:	57 95       	ror	r21
     f54:	47 95       	ror	r20
     f56:	16 94       	lsr	r1
     f58:	d1 f7       	brne	.-12     	; 0xf4e <dir_sdi+0x92>
     f5a:	48 17       	cp	r20, r24
     f5c:	59 07       	cpc	r21, r25
     f5e:	6a 07       	cpc	r22, r26
     f60:	7b 07       	cpc	r23, r27
     f62:	08 f0       	brcs	.+2      	; 0xf66 <dir_sdi+0xaa>
     f64:	7a c0       	rjmp	.+244    	; 0x105a <__EEPROM_REGION_LENGTH__+0x5a>
     f66:	83 a1       	ldd	r24, Z+35	; 0x23
     f68:	94 a1       	ldd	r25, Z+36	; 0x24
     f6a:	a5 a1       	ldd	r26, Z+37	; 0x25
     f6c:	b6 a1       	ldd	r27, Z+38	; 0x26
     f6e:	8e 8b       	std	Y+22, r24	; 0x16
     f70:	9f 8b       	std	Y+23, r25	; 0x17
     f72:	a8 8f       	std	Y+24, r26	; 0x18
     f74:	b9 8f       	std	Y+25, r27	; 0x19
     f76:	44 c0       	rjmp	.+136    	; 0x1000 <__EEPROM_REGION_LENGTH__>
     f78:	4c 01       	movw	r8, r24
     f7a:	5d 01       	movw	r10, r26
     f7c:	f8 01       	movw	r30, r16
     f7e:	41 84       	ldd	r4, Z+9	; 0x09
     f80:	52 84       	ldd	r5, Z+10	; 0x0a
     f82:	61 2c       	mov	r6, r1
     f84:	71 2c       	mov	r7, r1
     f86:	03 2e       	mov	r0, r19
     f88:	39 e0       	ldi	r19, 0x09	; 9
     f8a:	44 0c       	add	r4, r4
     f8c:	55 1c       	adc	r5, r5
     f8e:	66 1c       	adc	r6, r6
     f90:	77 1c       	adc	r7, r7
     f92:	3a 95       	dec	r19
     f94:	d1 f7       	brne	.-12     	; 0xf8a <dir_sdi+0xce>
     f96:	30 2d       	mov	r19, r0
     f98:	c4 14       	cp	r12, r4
     f9a:	d5 04       	cpc	r13, r5
     f9c:	e6 04       	cpc	r14, r6
     f9e:	f7 04       	cpc	r15, r7
     fa0:	38 f1       	brcs	.+78     	; 0xff0 <dir_sdi+0x134>
     fa2:	b5 01       	movw	r22, r10
     fa4:	a4 01       	movw	r20, r8
     fa6:	ce 01       	movw	r24, r28
     fa8:	af de       	rcall	.-674    	; 0xd08 <get_fat>
     faa:	4b 01       	movw	r8, r22
     fac:	5c 01       	movw	r10, r24
     fae:	6f 3f       	cpi	r22, 0xFF	; 255
     fb0:	7f 4f       	sbci	r23, 0xFF	; 255
     fb2:	8f 4f       	sbci	r24, 0xFF	; 255
     fb4:	9f 4f       	sbci	r25, 0xFF	; 255
     fb6:	09 f4       	brne	.+2      	; 0xfba <dir_sdi+0xfe>
     fb8:	52 c0       	rjmp	.+164    	; 0x105e <__EEPROM_REGION_LENGTH__+0x5e>
     fba:	82 e0       	ldi	r24, 0x02	; 2
     fbc:	88 16       	cp	r8, r24
     fbe:	91 04       	cpc	r9, r1
     fc0:	a1 04       	cpc	r10, r1
     fc2:	b1 04       	cpc	r11, r1
     fc4:	08 f4       	brcc	.+2      	; 0xfc8 <dir_sdi+0x10c>
     fc6:	4d c0       	rjmp	.+154    	; 0x1062 <__EEPROM_REGION_LENGTH__+0x62>
     fc8:	f8 01       	movw	r30, r16
     fca:	83 89       	ldd	r24, Z+19	; 0x13
     fcc:	94 89       	ldd	r25, Z+20	; 0x14
     fce:	a5 89       	ldd	r26, Z+21	; 0x15
     fd0:	b6 89       	ldd	r27, Z+22	; 0x16
     fd2:	88 16       	cp	r8, r24
     fd4:	99 06       	cpc	r9, r25
     fd6:	aa 06       	cpc	r10, r26
     fd8:	bb 06       	cpc	r11, r27
     fda:	08 f0       	brcs	.+2      	; 0xfde <dir_sdi+0x122>
     fdc:	44 c0       	rjmp	.+136    	; 0x1066 <__EEPROM_REGION_LENGTH__+0x66>
     fde:	c4 18       	sub	r12, r4
     fe0:	d5 08       	sbc	r13, r5
     fe2:	e6 08       	sbc	r14, r6
     fe4:	f7 08       	sbc	r15, r7
     fe6:	c4 14       	cp	r12, r4
     fe8:	d5 04       	cpc	r13, r5
     fea:	e6 04       	cpc	r14, r6
     fec:	f7 04       	cpc	r15, r7
     fee:	c8 f6       	brcc	.-78     	; 0xfa2 <dir_sdi+0xe6>
     ff0:	b5 01       	movw	r22, r10
     ff2:	a4 01       	movw	r20, r8
     ff4:	c8 01       	movw	r24, r16
     ff6:	73 db       	rcall	.-2330   	; 0x6de <clst2sect>
     ff8:	6e 8b       	std	Y+22, r22	; 0x16
     ffa:	7f 8b       	std	Y+23, r23	; 0x17
     ffc:	88 8f       	std	Y+24, r24	; 0x18
     ffe:	99 8f       	std	Y+25, r25	; 0x19
    1000:	8a 8a       	std	Y+18, r8	; 0x12
    1002:	9b 8a       	std	Y+19, r9	; 0x13
    1004:	ac 8a       	std	Y+20, r10	; 0x14
    1006:	bd 8a       	std	Y+21, r11	; 0x15
    1008:	8e 89       	ldd	r24, Y+22	; 0x16
    100a:	9f 89       	ldd	r25, Y+23	; 0x17
    100c:	a8 8d       	ldd	r26, Y+24	; 0x18
    100e:	b9 8d       	ldd	r27, Y+25	; 0x19
    1010:	00 97       	sbiw	r24, 0x00	; 0
    1012:	a1 05       	cpc	r26, r1
    1014:	b1 05       	cpc	r27, r1
    1016:	49 f1       	breq	.+82     	; 0x106a <__EEPROM_REGION_LENGTH__+0x6a>
    1018:	b7 01       	movw	r22, r14
    101a:	a6 01       	movw	r20, r12
    101c:	03 2e       	mov	r0, r19
    101e:	39 e0       	ldi	r19, 0x09	; 9
    1020:	76 95       	lsr	r23
    1022:	67 95       	ror	r22
    1024:	57 95       	ror	r21
    1026:	47 95       	ror	r20
    1028:	3a 95       	dec	r19
    102a:	d1 f7       	brne	.-12     	; 0x1020 <__EEPROM_REGION_LENGTH__+0x20>
    102c:	30 2d       	mov	r19, r0
    102e:	84 0f       	add	r24, r20
    1030:	95 1f       	adc	r25, r21
    1032:	a6 1f       	adc	r26, r22
    1034:	b7 1f       	adc	r27, r23
    1036:	8e 8b       	std	Y+22, r24	; 0x16
    1038:	9f 8b       	std	Y+23, r25	; 0x17
    103a:	a8 8f       	std	Y+24, r26	; 0x18
    103c:	b9 8f       	std	Y+25, r27	; 0x19
    103e:	01 5d       	subi	r16, 0xD1	; 209
    1040:	1f 4f       	sbci	r17, 0xFF	; 255
    1042:	f1 e0       	ldi	r31, 0x01	; 1
    1044:	df 22       	and	r13, r31
    1046:	c0 0e       	add	r12, r16
    1048:	d1 1e       	adc	r13, r17
    104a:	db 8e       	std	Y+27, r13	; 0x1b
    104c:	ca 8e       	std	Y+26, r12	; 0x1a
    104e:	80 e0       	ldi	r24, 0x00	; 0
    1050:	0d c0       	rjmp	.+26     	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    1052:	82 e0       	ldi	r24, 0x02	; 2
    1054:	0b c0       	rjmp	.+22     	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    1056:	82 e0       	ldi	r24, 0x02	; 2
    1058:	09 c0       	rjmp	.+18     	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    105a:	82 e0       	ldi	r24, 0x02	; 2
    105c:	07 c0       	rjmp	.+14     	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    105e:	81 e0       	ldi	r24, 0x01	; 1
    1060:	05 c0       	rjmp	.+10     	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    1062:	82 e0       	ldi	r24, 0x02	; 2
    1064:	03 c0       	rjmp	.+6      	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    1066:	82 e0       	ldi	r24, 0x02	; 2
    1068:	01 c0       	rjmp	.+2      	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    106a:	82 e0       	ldi	r24, 0x02	; 2
    106c:	df 91       	pop	r29
    106e:	cf 91       	pop	r28
    1070:	1f 91       	pop	r17
    1072:	0f 91       	pop	r16
    1074:	ff 90       	pop	r15
    1076:	ef 90       	pop	r14
    1078:	df 90       	pop	r13
    107a:	cf 90       	pop	r12
    107c:	bf 90       	pop	r11
    107e:	af 90       	pop	r10
    1080:	9f 90       	pop	r9
    1082:	8f 90       	pop	r8
    1084:	7f 90       	pop	r7
    1086:	6f 90       	pop	r6
    1088:	5f 90       	pop	r5
    108a:	4f 90       	pop	r4
    108c:	08 95       	ret

0000108e <create_chain>:
    108e:	4f 92       	push	r4
    1090:	5f 92       	push	r5
    1092:	6f 92       	push	r6
    1094:	7f 92       	push	r7
    1096:	8f 92       	push	r8
    1098:	9f 92       	push	r9
    109a:	af 92       	push	r10
    109c:	bf 92       	push	r11
    109e:	cf 92       	push	r12
    10a0:	df 92       	push	r13
    10a2:	ef 92       	push	r14
    10a4:	ff 92       	push	r15
    10a6:	0f 93       	push	r16
    10a8:	1f 93       	push	r17
    10aa:	cf 93       	push	r28
    10ac:	df 93       	push	r29
    10ae:	8c 01       	movw	r16, r24
    10b0:	2a 01       	movw	r4, r20
    10b2:	3b 01       	movw	r6, r22
    10b4:	fc 01       	movw	r30, r24
    10b6:	c0 81       	ld	r28, Z
    10b8:	d1 81       	ldd	r29, Z+1	; 0x01
    10ba:	41 15       	cp	r20, r1
    10bc:	51 05       	cpc	r21, r1
    10be:	61 05       	cpc	r22, r1
    10c0:	71 05       	cpc	r23, r1
    10c2:	c9 f4       	brne	.+50     	; 0x10f6 <create_chain+0x68>
    10c4:	8b 84       	ldd	r8, Y+11	; 0x0b
    10c6:	9c 84       	ldd	r9, Y+12	; 0x0c
    10c8:	ad 84       	ldd	r10, Y+13	; 0x0d
    10ca:	be 84       	ldd	r11, Y+14	; 0x0e
    10cc:	81 14       	cp	r8, r1
    10ce:	91 04       	cpc	r9, r1
    10d0:	a1 04       	cpc	r10, r1
    10d2:	b1 04       	cpc	r11, r1
    10d4:	09 f4       	brne	.+2      	; 0x10d8 <create_chain+0x4a>
    10d6:	1d c1       	rjmp	.+570    	; 0x1312 <create_chain+0x284>
    10d8:	8b 89       	ldd	r24, Y+19	; 0x13
    10da:	9c 89       	ldd	r25, Y+20	; 0x14
    10dc:	ad 89       	ldd	r26, Y+21	; 0x15
    10de:	be 89       	ldd	r27, Y+22	; 0x16
    10e0:	88 16       	cp	r8, r24
    10e2:	99 06       	cpc	r9, r25
    10e4:	aa 06       	cpc	r10, r26
    10e6:	bb 06       	cpc	r11, r27
    10e8:	08 f4       	brcc	.+2      	; 0x10ec <create_chain+0x5e>
    10ea:	17 c1       	rjmp	.+558    	; 0x131a <create_chain+0x28c>
    10ec:	81 2c       	mov	r8, r1
    10ee:	91 2c       	mov	r9, r1
    10f0:	54 01       	movw	r10, r8
    10f2:	83 94       	inc	r8
    10f4:	12 c1       	rjmp	.+548    	; 0x131a <create_chain+0x28c>
    10f6:	08 de       	rcall	.-1008   	; 0xd08 <get_fat>
    10f8:	62 30       	cpi	r22, 0x02	; 2
    10fa:	71 05       	cpc	r23, r1
    10fc:	81 05       	cpc	r24, r1
    10fe:	91 05       	cpc	r25, r1
    1100:	08 f4       	brcc	.+2      	; 0x1104 <create_chain+0x76>
    1102:	cf c0       	rjmp	.+414    	; 0x12a2 <create_chain+0x214>
    1104:	6f 3f       	cpi	r22, 0xFF	; 255
    1106:	ff ef       	ldi	r31, 0xFF	; 255
    1108:	7f 07       	cpc	r23, r31
    110a:	8f 07       	cpc	r24, r31
    110c:	9f 07       	cpc	r25, r31
    110e:	09 f4       	brne	.+2      	; 0x1112 <create_chain+0x84>
    1110:	cd c0       	rjmp	.+410    	; 0x12ac <create_chain+0x21e>
    1112:	cb 88       	ldd	r12, Y+19	; 0x13
    1114:	dc 88       	ldd	r13, Y+20	; 0x14
    1116:	ed 88       	ldd	r14, Y+21	; 0x15
    1118:	fe 88       	ldd	r15, Y+22	; 0x16
    111a:	6c 15       	cp	r22, r12
    111c:	7d 05       	cpc	r23, r13
    111e:	8e 05       	cpc	r24, r14
    1120:	9f 05       	cpc	r25, r15
    1122:	08 f0       	brcs	.+2      	; 0x1126 <create_chain+0x98>
    1124:	e5 c0       	rjmp	.+458    	; 0x12f0 <create_chain+0x262>
    1126:	03 c1       	rjmp	.+518    	; 0x132e <create_chain+0x2a0>
    1128:	73 01       	movw	r14, r6
    112a:	62 01       	movw	r12, r4
    112c:	2f ef       	ldi	r18, 0xFF	; 255
    112e:	c2 1a       	sub	r12, r18
    1130:	d2 0a       	sbc	r13, r18
    1132:	e2 0a       	sbc	r14, r18
    1134:	f2 0a       	sbc	r15, r18
    1136:	8b 89       	ldd	r24, Y+19	; 0x13
    1138:	9c 89       	ldd	r25, Y+20	; 0x14
    113a:	ad 89       	ldd	r26, Y+21	; 0x15
    113c:	be 89       	ldd	r27, Y+22	; 0x16
    113e:	c8 16       	cp	r12, r24
    1140:	d9 06       	cpc	r13, r25
    1142:	ea 06       	cpc	r14, r26
    1144:	fb 06       	cpc	r15, r27
    1146:	28 f0       	brcs	.+10     	; 0x1152 <create_chain+0xc4>
    1148:	c1 2c       	mov	r12, r1
    114a:	d1 2c       	mov	r13, r1
    114c:	76 01       	movw	r14, r12
    114e:	68 94       	set
    1150:	c1 f8       	bld	r12, 1
    1152:	b7 01       	movw	r22, r14
    1154:	a6 01       	movw	r20, r12
    1156:	c8 01       	movw	r24, r16
    1158:	d7 dd       	rcall	.-1106   	; 0xd08 <get_fat>
    115a:	61 30       	cpi	r22, 0x01	; 1
    115c:	71 05       	cpc	r23, r1
    115e:	81 05       	cpc	r24, r1
    1160:	91 05       	cpc	r25, r1
    1162:	09 f4       	brne	.+2      	; 0x1166 <create_chain+0xd8>
    1164:	a7 c0       	rjmp	.+334    	; 0x12b4 <create_chain+0x226>
    1166:	6f 3f       	cpi	r22, 0xFF	; 255
    1168:	ef ef       	ldi	r30, 0xFF	; 255
    116a:	7e 07       	cpc	r23, r30
    116c:	8e 07       	cpc	r24, r30
    116e:	9e 07       	cpc	r25, r30
    1170:	09 f4       	brne	.+2      	; 0x1174 <create_chain+0xe6>
    1172:	a5 c0       	rjmp	.+330    	; 0x12be <create_chain+0x230>
    1174:	67 2b       	or	r22, r23
    1176:	68 2b       	or	r22, r24
    1178:	69 2b       	or	r22, r25
    117a:	b1 f0       	breq	.+44     	; 0x11a8 <create_chain+0x11a>
    117c:	8b 84       	ldd	r8, Y+11	; 0x0b
    117e:	9c 84       	ldd	r9, Y+12	; 0x0c
    1180:	ad 84       	ldd	r10, Y+13	; 0x0d
    1182:	be 84       	ldd	r11, Y+14	; 0x0e
    1184:	f2 e0       	ldi	r31, 0x02	; 2
    1186:	8f 16       	cp	r8, r31
    1188:	91 04       	cpc	r9, r1
    118a:	a1 04       	cpc	r10, r1
    118c:	b1 04       	cpc	r11, r1
    118e:	08 f4       	brcc	.+2      	; 0x1192 <create_chain+0x104>
    1190:	ba c0       	rjmp	.+372    	; 0x1306 <create_chain+0x278>
    1192:	8b 89       	ldd	r24, Y+19	; 0x13
    1194:	9c 89       	ldd	r25, Y+20	; 0x14
    1196:	ad 89       	ldd	r26, Y+21	; 0x15
    1198:	be 89       	ldd	r27, Y+22	; 0x16
    119a:	88 16       	cp	r8, r24
    119c:	99 06       	cpc	r9, r25
    119e:	aa 06       	cpc	r10, r26
    11a0:	bb 06       	cpc	r11, r27
    11a2:	08 f0       	brcs	.+2      	; 0x11a6 <create_chain+0x118>
    11a4:	b3 c0       	rjmp	.+358    	; 0x130c <create_chain+0x27e>
    11a6:	07 c0       	rjmp	.+14     	; 0x11b6 <create_chain+0x128>
    11a8:	c1 14       	cp	r12, r1
    11aa:	d1 04       	cpc	r13, r1
    11ac:	e1 04       	cpc	r14, r1
    11ae:	f1 04       	cpc	r15, r1
    11b0:	c9 f5       	brne	.+114    	; 0x1224 <create_chain+0x196>
    11b2:	53 01       	movw	r10, r6
    11b4:	42 01       	movw	r8, r4
    11b6:	75 01       	movw	r14, r10
    11b8:	64 01       	movw	r12, r8
    11ba:	2f ef       	ldi	r18, 0xFF	; 255
    11bc:	c2 1a       	sub	r12, r18
    11be:	d2 0a       	sbc	r13, r18
    11c0:	e2 0a       	sbc	r14, r18
    11c2:	f2 0a       	sbc	r15, r18
    11c4:	8b 89       	ldd	r24, Y+19	; 0x13
    11c6:	9c 89       	ldd	r25, Y+20	; 0x14
    11c8:	ad 89       	ldd	r26, Y+21	; 0x15
    11ca:	be 89       	ldd	r27, Y+22	; 0x16
    11cc:	c8 16       	cp	r12, r24
    11ce:	d9 06       	cpc	r13, r25
    11d0:	ea 06       	cpc	r14, r26
    11d2:	fb 06       	cpc	r15, r27
    11d4:	60 f0       	brcs	.+24     	; 0x11ee <create_chain+0x160>
    11d6:	82 e0       	ldi	r24, 0x02	; 2
    11d8:	88 16       	cp	r8, r24
    11da:	91 04       	cpc	r9, r1
    11dc:	a1 04       	cpc	r10, r1
    11de:	b1 04       	cpc	r11, r1
    11e0:	08 f4       	brcc	.+2      	; 0x11e4 <create_chain+0x156>
    11e2:	71 c0       	rjmp	.+226    	; 0x12c6 <create_chain+0x238>
    11e4:	c1 2c       	mov	r12, r1
    11e6:	d1 2c       	mov	r13, r1
    11e8:	76 01       	movw	r14, r12
    11ea:	68 94       	set
    11ec:	c1 f8       	bld	r12, 1
    11ee:	b7 01       	movw	r22, r14
    11f0:	a6 01       	movw	r20, r12
    11f2:	c8 01       	movw	r24, r16
    11f4:	89 dd       	rcall	.-1262   	; 0xd08 <get_fat>
    11f6:	61 15       	cp	r22, r1
    11f8:	71 05       	cpc	r23, r1
    11fa:	81 05       	cpc	r24, r1
    11fc:	91 05       	cpc	r25, r1
    11fe:	91 f0       	breq	.+36     	; 0x1224 <create_chain+0x196>
    1200:	61 30       	cpi	r22, 0x01	; 1
    1202:	71 05       	cpc	r23, r1
    1204:	81 05       	cpc	r24, r1
    1206:	91 05       	cpc	r25, r1
    1208:	09 f4       	brne	.+2      	; 0x120c <create_chain+0x17e>
    120a:	61 c0       	rjmp	.+194    	; 0x12ce <create_chain+0x240>
    120c:	6f 3f       	cpi	r22, 0xFF	; 255
    120e:	7f 4f       	sbci	r23, 0xFF	; 255
    1210:	8f 4f       	sbci	r24, 0xFF	; 255
    1212:	9f 4f       	sbci	r25, 0xFF	; 255
    1214:	09 f4       	brne	.+2      	; 0x1218 <create_chain+0x18a>
    1216:	60 c0       	rjmp	.+192    	; 0x12d8 <create_chain+0x24a>
    1218:	c8 14       	cp	r12, r8
    121a:	d9 04       	cpc	r13, r9
    121c:	ea 04       	cpc	r14, r10
    121e:	fb 04       	cpc	r15, r11
    1220:	61 f6       	brne	.-104    	; 0x11ba <create_chain+0x12c>
    1222:	5e c0       	rjmp	.+188    	; 0x12e0 <create_chain+0x252>
    1224:	0f ef       	ldi	r16, 0xFF	; 255
    1226:	1f ef       	ldi	r17, 0xFF	; 255
    1228:	98 01       	movw	r18, r16
    122a:	b7 01       	movw	r22, r14
    122c:	a6 01       	movw	r20, r12
    122e:	ce 01       	movw	r24, r28
    1230:	42 dc       	rcall	.-1916   	; 0xab6 <put_fat>
    1232:	81 11       	cpse	r24, r1
    1234:	2f c0       	rjmp	.+94     	; 0x1294 <create_chain+0x206>
    1236:	41 14       	cp	r4, r1
    1238:	51 04       	cpc	r5, r1
    123a:	61 04       	cpc	r6, r1
    123c:	71 04       	cpc	r7, r1
    123e:	41 f0       	breq	.+16     	; 0x1250 <create_chain+0x1c2>
    1240:	97 01       	movw	r18, r14
    1242:	86 01       	movw	r16, r12
    1244:	b3 01       	movw	r22, r6
    1246:	a2 01       	movw	r20, r4
    1248:	ce 01       	movw	r24, r28
    124a:	35 dc       	rcall	.-1942   	; 0xab6 <put_fat>
    124c:	81 11       	cpse	r24, r1
    124e:	22 c0       	rjmp	.+68     	; 0x1294 <create_chain+0x206>
    1250:	cb 86       	std	Y+11, r12	; 0x0b
    1252:	dc 86       	std	Y+12, r13	; 0x0c
    1254:	ed 86       	std	Y+13, r14	; 0x0d
    1256:	fe 86       	std	Y+14, r15	; 0x0e
    1258:	4f 85       	ldd	r20, Y+15	; 0x0f
    125a:	58 89       	ldd	r21, Y+16	; 0x10
    125c:	69 89       	ldd	r22, Y+17	; 0x11
    125e:	7a 89       	ldd	r23, Y+18	; 0x12
    1260:	8b 89       	ldd	r24, Y+19	; 0x13
    1262:	9c 89       	ldd	r25, Y+20	; 0x14
    1264:	ad 89       	ldd	r26, Y+21	; 0x15
    1266:	be 89       	ldd	r27, Y+22	; 0x16
    1268:	02 97       	sbiw	r24, 0x02	; 2
    126a:	a1 09       	sbc	r26, r1
    126c:	b1 09       	sbc	r27, r1
    126e:	84 17       	cp	r24, r20
    1270:	95 07       	cpc	r25, r21
    1272:	a6 07       	cpc	r26, r22
    1274:	b7 07       	cpc	r27, r23
    1276:	40 f0       	brcs	.+16     	; 0x1288 <create_chain+0x1fa>
    1278:	41 50       	subi	r20, 0x01	; 1
    127a:	51 09       	sbc	r21, r1
    127c:	61 09       	sbc	r22, r1
    127e:	71 09       	sbc	r23, r1
    1280:	4f 87       	std	Y+15, r20	; 0x0f
    1282:	58 8b       	std	Y+16, r21	; 0x10
    1284:	69 8b       	std	Y+17, r22	; 0x11
    1286:	7a 8b       	std	Y+18, r23	; 0x12
    1288:	8c 81       	ldd	r24, Y+4	; 0x04
    128a:	81 60       	ori	r24, 0x01	; 1
    128c:	8c 83       	std	Y+4, r24	; 0x04
    128e:	c7 01       	movw	r24, r14
    1290:	b6 01       	movw	r22, r12
    1292:	4d c0       	rjmp	.+154    	; 0x132e <create_chain+0x2a0>
    1294:	81 30       	cpi	r24, 0x01	; 1
    1296:	41 f1       	breq	.+80     	; 0x12e8 <create_chain+0x25a>
    1298:	61 e0       	ldi	r22, 0x01	; 1
    129a:	70 e0       	ldi	r23, 0x00	; 0
    129c:	80 e0       	ldi	r24, 0x00	; 0
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	46 c0       	rjmp	.+140    	; 0x132e <create_chain+0x2a0>
    12a2:	61 e0       	ldi	r22, 0x01	; 1
    12a4:	70 e0       	ldi	r23, 0x00	; 0
    12a6:	80 e0       	ldi	r24, 0x00	; 0
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	41 c0       	rjmp	.+130    	; 0x132e <create_chain+0x2a0>
    12ac:	6f ef       	ldi	r22, 0xFF	; 255
    12ae:	7f ef       	ldi	r23, 0xFF	; 255
    12b0:	cb 01       	movw	r24, r22
    12b2:	3d c0       	rjmp	.+122    	; 0x132e <create_chain+0x2a0>
    12b4:	61 e0       	ldi	r22, 0x01	; 1
    12b6:	70 e0       	ldi	r23, 0x00	; 0
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	38 c0       	rjmp	.+112    	; 0x132e <create_chain+0x2a0>
    12be:	6f ef       	ldi	r22, 0xFF	; 255
    12c0:	7f ef       	ldi	r23, 0xFF	; 255
    12c2:	cb 01       	movw	r24, r22
    12c4:	34 c0       	rjmp	.+104    	; 0x132e <create_chain+0x2a0>
    12c6:	60 e0       	ldi	r22, 0x00	; 0
    12c8:	70 e0       	ldi	r23, 0x00	; 0
    12ca:	cb 01       	movw	r24, r22
    12cc:	30 c0       	rjmp	.+96     	; 0x132e <create_chain+0x2a0>
    12ce:	61 e0       	ldi	r22, 0x01	; 1
    12d0:	70 e0       	ldi	r23, 0x00	; 0
    12d2:	80 e0       	ldi	r24, 0x00	; 0
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	2b c0       	rjmp	.+86     	; 0x132e <create_chain+0x2a0>
    12d8:	6f ef       	ldi	r22, 0xFF	; 255
    12da:	7f ef       	ldi	r23, 0xFF	; 255
    12dc:	cb 01       	movw	r24, r22
    12de:	27 c0       	rjmp	.+78     	; 0x132e <create_chain+0x2a0>
    12e0:	60 e0       	ldi	r22, 0x00	; 0
    12e2:	70 e0       	ldi	r23, 0x00	; 0
    12e4:	cb 01       	movw	r24, r22
    12e6:	23 c0       	rjmp	.+70     	; 0x132e <create_chain+0x2a0>
    12e8:	6f ef       	ldi	r22, 0xFF	; 255
    12ea:	7f ef       	ldi	r23, 0xFF	; 255
    12ec:	cb 01       	movw	r24, r22
    12ee:	1f c0       	rjmp	.+62     	; 0x132e <create_chain+0x2a0>
    12f0:	6f 85       	ldd	r22, Y+15	; 0x0f
    12f2:	78 89       	ldd	r23, Y+16	; 0x10
    12f4:	89 89       	ldd	r24, Y+17	; 0x11
    12f6:	9a 89       	ldd	r25, Y+18	; 0x12
    12f8:	61 15       	cp	r22, r1
    12fa:	71 05       	cpc	r23, r1
    12fc:	81 05       	cpc	r24, r1
    12fe:	91 05       	cpc	r25, r1
    1300:	09 f0       	breq	.+2      	; 0x1304 <create_chain+0x276>
    1302:	12 cf       	rjmp	.-476    	; 0x1128 <create_chain+0x9a>
    1304:	14 c0       	rjmp	.+40     	; 0x132e <create_chain+0x2a0>
    1306:	53 01       	movw	r10, r6
    1308:	42 01       	movw	r8, r4
    130a:	55 cf       	rjmp	.-342    	; 0x11b6 <create_chain+0x128>
    130c:	53 01       	movw	r10, r6
    130e:	42 01       	movw	r8, r4
    1310:	52 cf       	rjmp	.-348    	; 0x11b6 <create_chain+0x128>
    1312:	81 2c       	mov	r8, r1
    1314:	91 2c       	mov	r9, r1
    1316:	54 01       	movw	r10, r8
    1318:	83 94       	inc	r8
    131a:	6f 85       	ldd	r22, Y+15	; 0x0f
    131c:	78 89       	ldd	r23, Y+16	; 0x10
    131e:	89 89       	ldd	r24, Y+17	; 0x11
    1320:	9a 89       	ldd	r25, Y+18	; 0x12
    1322:	61 15       	cp	r22, r1
    1324:	71 05       	cpc	r23, r1
    1326:	81 05       	cpc	r24, r1
    1328:	91 05       	cpc	r25, r1
    132a:	09 f0       	breq	.+2      	; 0x132e <create_chain+0x2a0>
    132c:	44 cf       	rjmp	.-376    	; 0x11b6 <create_chain+0x128>
    132e:	df 91       	pop	r29
    1330:	cf 91       	pop	r28
    1332:	1f 91       	pop	r17
    1334:	0f 91       	pop	r16
    1336:	ff 90       	pop	r15
    1338:	ef 90       	pop	r14
    133a:	df 90       	pop	r13
    133c:	cf 90       	pop	r12
    133e:	bf 90       	pop	r11
    1340:	af 90       	pop	r10
    1342:	9f 90       	pop	r9
    1344:	8f 90       	pop	r8
    1346:	7f 90       	pop	r7
    1348:	6f 90       	pop	r6
    134a:	5f 90       	pop	r5
    134c:	4f 90       	pop	r4
    134e:	08 95       	ret

00001350 <remove_chain>:
    1350:	4f 92       	push	r4
    1352:	5f 92       	push	r5
    1354:	6f 92       	push	r6
    1356:	7f 92       	push	r7
    1358:	af 92       	push	r10
    135a:	bf 92       	push	r11
    135c:	cf 92       	push	r12
    135e:	df 92       	push	r13
    1360:	ef 92       	push	r14
    1362:	ff 92       	push	r15
    1364:	0f 93       	push	r16
    1366:	1f 93       	push	r17
    1368:	cf 93       	push	r28
    136a:	df 93       	push	r29
    136c:	5c 01       	movw	r10, r24
    136e:	6a 01       	movw	r12, r20
    1370:	7b 01       	movw	r14, r22
    1372:	b9 01       	movw	r22, r18
    1374:	a8 01       	movw	r20, r16
    1376:	22 e0       	ldi	r18, 0x02	; 2
    1378:	c2 16       	cp	r12, r18
    137a:	d1 04       	cpc	r13, r1
    137c:	e1 04       	cpc	r14, r1
    137e:	f1 04       	cpc	r15, r1
    1380:	08 f4       	brcc	.+2      	; 0x1384 <remove_chain+0x34>
    1382:	60 c0       	rjmp	.+192    	; 0x1444 <remove_chain+0xf4>
    1384:	fc 01       	movw	r30, r24
    1386:	c0 81       	ld	r28, Z
    1388:	d1 81       	ldd	r29, Z+1	; 0x01
    138a:	8b 89       	ldd	r24, Y+19	; 0x13
    138c:	9c 89       	ldd	r25, Y+20	; 0x14
    138e:	ad 89       	ldd	r26, Y+21	; 0x15
    1390:	be 89       	ldd	r27, Y+22	; 0x16
    1392:	c8 16       	cp	r12, r24
    1394:	d9 06       	cpc	r13, r25
    1396:	ea 06       	cpc	r14, r26
    1398:	fb 06       	cpc	r15, r27
    139a:	08 f0       	brcs	.+2      	; 0x139e <remove_chain+0x4e>
    139c:	55 c0       	rjmp	.+170    	; 0x1448 <remove_chain+0xf8>
    139e:	41 15       	cp	r20, r1
    13a0:	51 05       	cpc	r21, r1
    13a2:	61 05       	cpc	r22, r1
    13a4:	71 05       	cpc	r23, r1
    13a6:	39 f0       	breq	.+14     	; 0x13b6 <remove_chain+0x66>
    13a8:	0f ef       	ldi	r16, 0xFF	; 255
    13aa:	1f ef       	ldi	r17, 0xFF	; 255
    13ac:	98 01       	movw	r18, r16
    13ae:	ce 01       	movw	r24, r28
    13b0:	82 db       	rcall	.-2300   	; 0xab6 <put_fat>
    13b2:	81 11       	cpse	r24, r1
    13b4:	50 c0       	rjmp	.+160    	; 0x1456 <remove_chain+0x106>
    13b6:	b7 01       	movw	r22, r14
    13b8:	a6 01       	movw	r20, r12
    13ba:	c5 01       	movw	r24, r10
    13bc:	a5 dc       	rcall	.-1718   	; 0xd08 <get_fat>
    13be:	2b 01       	movw	r4, r22
    13c0:	3c 01       	movw	r6, r24
    13c2:	61 15       	cp	r22, r1
    13c4:	71 05       	cpc	r23, r1
    13c6:	81 05       	cpc	r24, r1
    13c8:	91 05       	cpc	r25, r1
    13ca:	09 f4       	brne	.+2      	; 0x13ce <remove_chain+0x7e>
    13cc:	3f c0       	rjmp	.+126    	; 0x144c <remove_chain+0xfc>
    13ce:	61 30       	cpi	r22, 0x01	; 1
    13d0:	71 05       	cpc	r23, r1
    13d2:	81 05       	cpc	r24, r1
    13d4:	91 05       	cpc	r25, r1
    13d6:	e1 f1       	breq	.+120    	; 0x1450 <remove_chain+0x100>
    13d8:	6f 3f       	cpi	r22, 0xFF	; 255
    13da:	7f 4f       	sbci	r23, 0xFF	; 255
    13dc:	8f 4f       	sbci	r24, 0xFF	; 255
    13de:	9f 4f       	sbci	r25, 0xFF	; 255
    13e0:	c9 f1       	breq	.+114    	; 0x1454 <remove_chain+0x104>
    13e2:	00 e0       	ldi	r16, 0x00	; 0
    13e4:	10 e0       	ldi	r17, 0x00	; 0
    13e6:	98 01       	movw	r18, r16
    13e8:	b7 01       	movw	r22, r14
    13ea:	a6 01       	movw	r20, r12
    13ec:	ce 01       	movw	r24, r28
    13ee:	63 db       	rcall	.-2362   	; 0xab6 <put_fat>
    13f0:	81 11       	cpse	r24, r1
    13f2:	31 c0       	rjmp	.+98     	; 0x1456 <remove_chain+0x106>
    13f4:	8f 85       	ldd	r24, Y+15	; 0x0f
    13f6:	98 89       	ldd	r25, Y+16	; 0x10
    13f8:	a9 89       	ldd	r26, Y+17	; 0x11
    13fa:	ba 89       	ldd	r27, Y+18	; 0x12
    13fc:	4b 89       	ldd	r20, Y+19	; 0x13
    13fe:	5c 89       	ldd	r21, Y+20	; 0x14
    1400:	6d 89       	ldd	r22, Y+21	; 0x15
    1402:	7e 89       	ldd	r23, Y+22	; 0x16
    1404:	6a 01       	movw	r12, r20
    1406:	7b 01       	movw	r14, r22
    1408:	e2 e0       	ldi	r30, 0x02	; 2
    140a:	ce 1a       	sub	r12, r30
    140c:	d1 08       	sbc	r13, r1
    140e:	e1 08       	sbc	r14, r1
    1410:	f1 08       	sbc	r15, r1
    1412:	8c 15       	cp	r24, r12
    1414:	9d 05       	cpc	r25, r13
    1416:	ae 05       	cpc	r26, r14
    1418:	bf 05       	cpc	r27, r15
    141a:	50 f4       	brcc	.+20     	; 0x1430 <remove_chain+0xe0>
    141c:	01 96       	adiw	r24, 0x01	; 1
    141e:	a1 1d       	adc	r26, r1
    1420:	b1 1d       	adc	r27, r1
    1422:	8f 87       	std	Y+15, r24	; 0x0f
    1424:	98 8b       	std	Y+16, r25	; 0x10
    1426:	a9 8b       	std	Y+17, r26	; 0x11
    1428:	ba 8b       	std	Y+18, r27	; 0x12
    142a:	8c 81       	ldd	r24, Y+4	; 0x04
    142c:	81 60       	ori	r24, 0x01	; 1
    142e:	8c 83       	std	Y+4, r24	; 0x04
    1430:	73 01       	movw	r14, r6
    1432:	62 01       	movw	r12, r4
    1434:	44 16       	cp	r4, r20
    1436:	55 06       	cpc	r5, r21
    1438:	66 06       	cpc	r6, r22
    143a:	77 06       	cpc	r7, r23
    143c:	08 f4       	brcc	.+2      	; 0x1440 <remove_chain+0xf0>
    143e:	bb cf       	rjmp	.-138    	; 0x13b6 <remove_chain+0x66>
    1440:	80 e0       	ldi	r24, 0x00	; 0
    1442:	09 c0       	rjmp	.+18     	; 0x1456 <remove_chain+0x106>
    1444:	82 e0       	ldi	r24, 0x02	; 2
    1446:	07 c0       	rjmp	.+14     	; 0x1456 <remove_chain+0x106>
    1448:	82 e0       	ldi	r24, 0x02	; 2
    144a:	05 c0       	rjmp	.+10     	; 0x1456 <remove_chain+0x106>
    144c:	80 e0       	ldi	r24, 0x00	; 0
    144e:	03 c0       	rjmp	.+6      	; 0x1456 <remove_chain+0x106>
    1450:	82 e0       	ldi	r24, 0x02	; 2
    1452:	01 c0       	rjmp	.+2      	; 0x1456 <remove_chain+0x106>
    1454:	81 e0       	ldi	r24, 0x01	; 1
    1456:	df 91       	pop	r29
    1458:	cf 91       	pop	r28
    145a:	1f 91       	pop	r17
    145c:	0f 91       	pop	r16
    145e:	ff 90       	pop	r15
    1460:	ef 90       	pop	r14
    1462:	df 90       	pop	r13
    1464:	cf 90       	pop	r12
    1466:	bf 90       	pop	r11
    1468:	af 90       	pop	r10
    146a:	7f 90       	pop	r7
    146c:	6f 90       	pop	r6
    146e:	5f 90       	pop	r5
    1470:	4f 90       	pop	r4
    1472:	08 95       	ret

00001474 <dir_next>:
    1474:	4f 92       	push	r4
    1476:	5f 92       	push	r5
    1478:	6f 92       	push	r6
    147a:	7f 92       	push	r7
    147c:	af 92       	push	r10
    147e:	bf 92       	push	r11
    1480:	cf 92       	push	r12
    1482:	df 92       	push	r13
    1484:	ef 92       	push	r14
    1486:	ff 92       	push	r15
    1488:	0f 93       	push	r16
    148a:	1f 93       	push	r17
    148c:	cf 93       	push	r28
    148e:	df 93       	push	r29
    1490:	8b 01       	movw	r16, r22
    1492:	fc 01       	movw	r30, r24
    1494:	c6 84       	ldd	r12, Z+14	; 0x0e
    1496:	d7 84       	ldd	r13, Z+15	; 0x0f
    1498:	e0 88       	ldd	r14, Z+16	; 0x10
    149a:	f1 88       	ldd	r15, Z+17	; 0x11
    149c:	f0 e2       	ldi	r31, 0x20	; 32
    149e:	cf 0e       	add	r12, r31
    14a0:	d1 1c       	adc	r13, r1
    14a2:	e1 1c       	adc	r14, r1
    14a4:	f1 1c       	adc	r15, r1
    14a6:	c1 14       	cp	r12, r1
    14a8:	d1 04       	cpc	r13, r1
    14aa:	20 e2       	ldi	r18, 0x20	; 32
    14ac:	e2 06       	cpc	r14, r18
    14ae:	f1 04       	cpc	r15, r1
    14b0:	38 f0       	brcs	.+14     	; 0x14c0 <dir_next+0x4c>
    14b2:	fc 01       	movw	r30, r24
    14b4:	16 8a       	std	Z+22, r1	; 0x16
    14b6:	17 8a       	std	Z+23, r1	; 0x17
    14b8:	10 8e       	std	Z+24, r1	; 0x18
    14ba:	11 8e       	std	Z+25, r1	; 0x19
    14bc:	84 e0       	ldi	r24, 0x04	; 4
    14be:	c6 c0       	rjmp	.+396    	; 0x164c <dir_next+0x1d8>
    14c0:	fc 01       	movw	r30, r24
    14c2:	46 89       	ldd	r20, Z+22	; 0x16
    14c4:	57 89       	ldd	r21, Z+23	; 0x17
    14c6:	60 8d       	ldd	r22, Z+24	; 0x18
    14c8:	71 8d       	ldd	r23, Z+25	; 0x19
    14ca:	41 15       	cp	r20, r1
    14cc:	51 05       	cpc	r21, r1
    14ce:	61 05       	cpc	r22, r1
    14d0:	71 05       	cpc	r23, r1
    14d2:	09 f4       	brne	.+2      	; 0x14d6 <dir_next+0x62>
    14d4:	ae c0       	rjmp	.+348    	; 0x1632 <dir_next+0x1be>
    14d6:	ec 01       	movw	r28, r24
    14d8:	a0 80       	ld	r10, Z
    14da:	b1 80       	ldd	r11, Z+1	; 0x01
    14dc:	d7 01       	movw	r26, r14
    14de:	c6 01       	movw	r24, r12
    14e0:	91 70       	andi	r25, 0x01	; 1
    14e2:	aa 27       	eor	r26, r26
    14e4:	bb 27       	eor	r27, r27
    14e6:	89 2b       	or	r24, r25
    14e8:	8a 2b       	or	r24, r26
    14ea:	8b 2b       	or	r24, r27
    14ec:	09 f0       	breq	.+2      	; 0x14f0 <dir_next+0x7c>
    14ee:	92 c0       	rjmp	.+292    	; 0x1614 <dir_next+0x1a0>
    14f0:	4f 5f       	subi	r20, 0xFF	; 255
    14f2:	5f 4f       	sbci	r21, 0xFF	; 255
    14f4:	6f 4f       	sbci	r22, 0xFF	; 255
    14f6:	7f 4f       	sbci	r23, 0xFF	; 255
    14f8:	46 8b       	std	Z+22, r20	; 0x16
    14fa:	57 8b       	std	Z+23, r21	; 0x17
    14fc:	60 8f       	std	Z+24, r22	; 0x18
    14fe:	71 8f       	std	Z+25, r23	; 0x19
    1500:	42 89       	ldd	r20, Z+18	; 0x12
    1502:	53 89       	ldd	r21, Z+19	; 0x13
    1504:	64 89       	ldd	r22, Z+20	; 0x14
    1506:	75 89       	ldd	r23, Z+21	; 0x15
    1508:	41 15       	cp	r20, r1
    150a:	51 05       	cpc	r21, r1
    150c:	61 05       	cpc	r22, r1
    150e:	71 05       	cpc	r23, r1
    1510:	d9 f4       	brne	.+54     	; 0x1548 <dir_next+0xd4>
    1512:	f5 01       	movw	r30, r10
    1514:	87 81       	ldd	r24, Z+7	; 0x07
    1516:	90 85       	ldd	r25, Z+8	; 0x08
    1518:	a0 e0       	ldi	r26, 0x00	; 0
    151a:	b0 e0       	ldi	r27, 0x00	; 0
    151c:	b7 01       	movw	r22, r14
    151e:	a6 01       	movw	r20, r12
    1520:	68 94       	set
    1522:	14 f8       	bld	r1, 4
    1524:	76 95       	lsr	r23
    1526:	67 95       	ror	r22
    1528:	57 95       	ror	r21
    152a:	47 95       	ror	r20
    152c:	16 94       	lsr	r1
    152e:	d1 f7       	brne	.-12     	; 0x1524 <dir_next+0xb0>
    1530:	48 17       	cp	r20, r24
    1532:	59 07       	cpc	r21, r25
    1534:	6a 07       	cpc	r22, r26
    1536:	7b 07       	cpc	r23, r27
    1538:	08 f4       	brcc	.+2      	; 0x153c <dir_next+0xc8>
    153a:	6c c0       	rjmp	.+216    	; 0x1614 <dir_next+0x1a0>
    153c:	1e 8a       	std	Y+22, r1	; 0x16
    153e:	1f 8a       	std	Y+23, r1	; 0x17
    1540:	18 8e       	std	Y+24, r1	; 0x18
    1542:	19 8e       	std	Y+25, r1	; 0x19
    1544:	84 e0       	ldi	r24, 0x04	; 4
    1546:	82 c0       	rjmp	.+260    	; 0x164c <dir_next+0x1d8>
    1548:	f5 01       	movw	r30, r10
    154a:	81 85       	ldd	r24, Z+9	; 0x09
    154c:	92 85       	ldd	r25, Z+10	; 0x0a
    154e:	01 97       	sbiw	r24, 0x01	; 1
    1550:	a0 e0       	ldi	r26, 0x00	; 0
    1552:	b0 e0       	ldi	r27, 0x00	; 0
    1554:	26 01       	movw	r4, r12
    1556:	37 01       	movw	r6, r14
    1558:	03 2e       	mov	r0, r19
    155a:	39 e0       	ldi	r19, 0x09	; 9
    155c:	76 94       	lsr	r7
    155e:	67 94       	ror	r6
    1560:	57 94       	ror	r5
    1562:	47 94       	ror	r4
    1564:	3a 95       	dec	r19
    1566:	d1 f7       	brne	.-12     	; 0x155c <dir_next+0xe8>
    1568:	30 2d       	mov	r19, r0
    156a:	84 21       	and	r24, r4
    156c:	95 21       	and	r25, r5
    156e:	a6 21       	and	r26, r6
    1570:	b7 21       	and	r27, r7
    1572:	89 2b       	or	r24, r25
    1574:	8a 2b       	or	r24, r26
    1576:	8b 2b       	or	r24, r27
    1578:	09 f0       	breq	.+2      	; 0x157c <dir_next+0x108>
    157a:	4c c0       	rjmp	.+152    	; 0x1614 <dir_next+0x1a0>
    157c:	ce 01       	movw	r24, r28
    157e:	c4 db       	rcall	.-2168   	; 0xd08 <get_fat>
    1580:	2b 01       	movw	r4, r22
    1582:	3c 01       	movw	r6, r24
    1584:	62 30       	cpi	r22, 0x02	; 2
    1586:	71 05       	cpc	r23, r1
    1588:	81 05       	cpc	r24, r1
    158a:	91 05       	cpc	r25, r1
    158c:	08 f4       	brcc	.+2      	; 0x1590 <dir_next+0x11c>
    158e:	53 c0       	rjmp	.+166    	; 0x1636 <dir_next+0x1c2>
    1590:	6f 3f       	cpi	r22, 0xFF	; 255
    1592:	7f 4f       	sbci	r23, 0xFF	; 255
    1594:	8f 4f       	sbci	r24, 0xFF	; 255
    1596:	9f 4f       	sbci	r25, 0xFF	; 255
    1598:	09 f4       	brne	.+2      	; 0x159c <dir_next+0x128>
    159a:	4f c0       	rjmp	.+158    	; 0x163a <dir_next+0x1c6>
    159c:	f5 01       	movw	r30, r10
    159e:	83 89       	ldd	r24, Z+19	; 0x13
    15a0:	94 89       	ldd	r25, Z+20	; 0x14
    15a2:	a5 89       	ldd	r26, Z+21	; 0x15
    15a4:	b6 89       	ldd	r27, Z+22	; 0x16
    15a6:	48 16       	cp	r4, r24
    15a8:	59 06       	cpc	r5, r25
    15aa:	6a 06       	cpc	r6, r26
    15ac:	7b 06       	cpc	r7, r27
    15ae:	30 f1       	brcs	.+76     	; 0x15fc <dir_next+0x188>
    15b0:	01 2b       	or	r16, r17
    15b2:	31 f4       	brne	.+12     	; 0x15c0 <dir_next+0x14c>
    15b4:	1e 8a       	std	Y+22, r1	; 0x16
    15b6:	1f 8a       	std	Y+23, r1	; 0x17
    15b8:	18 8e       	std	Y+24, r1	; 0x18
    15ba:	19 8e       	std	Y+25, r1	; 0x19
    15bc:	84 e0       	ldi	r24, 0x04	; 4
    15be:	46 c0       	rjmp	.+140    	; 0x164c <dir_next+0x1d8>
    15c0:	4a 89       	ldd	r20, Y+18	; 0x12
    15c2:	5b 89       	ldd	r21, Y+19	; 0x13
    15c4:	6c 89       	ldd	r22, Y+20	; 0x14
    15c6:	7d 89       	ldd	r23, Y+21	; 0x15
    15c8:	ce 01       	movw	r24, r28
    15ca:	61 dd       	rcall	.-1342   	; 0x108e <create_chain>
    15cc:	2b 01       	movw	r4, r22
    15ce:	3c 01       	movw	r6, r24
    15d0:	61 15       	cp	r22, r1
    15d2:	71 05       	cpc	r23, r1
    15d4:	81 05       	cpc	r24, r1
    15d6:	91 05       	cpc	r25, r1
    15d8:	91 f1       	breq	.+100    	; 0x163e <dir_next+0x1ca>
    15da:	61 30       	cpi	r22, 0x01	; 1
    15dc:	71 05       	cpc	r23, r1
    15de:	81 05       	cpc	r24, r1
    15e0:	91 05       	cpc	r25, r1
    15e2:	79 f1       	breq	.+94     	; 0x1642 <dir_next+0x1ce>
    15e4:	6f 3f       	cpi	r22, 0xFF	; 255
    15e6:	2f ef       	ldi	r18, 0xFF	; 255
    15e8:	72 07       	cpc	r23, r18
    15ea:	82 07       	cpc	r24, r18
    15ec:	92 07       	cpc	r25, r18
    15ee:	59 f1       	breq	.+86     	; 0x1646 <dir_next+0x1d2>
    15f0:	ab 01       	movw	r20, r22
    15f2:	bc 01       	movw	r22, r24
    15f4:	c5 01       	movw	r24, r10
    15f6:	91 d9       	rcall	.-3294   	; 0x91a <dir_clear>
    15f8:	81 11       	cpse	r24, r1
    15fa:	27 c0       	rjmp	.+78     	; 0x164a <dir_next+0x1d6>
    15fc:	4a 8a       	std	Y+18, r4	; 0x12
    15fe:	5b 8a       	std	Y+19, r5	; 0x13
    1600:	6c 8a       	std	Y+20, r6	; 0x14
    1602:	7d 8a       	std	Y+21, r7	; 0x15
    1604:	b3 01       	movw	r22, r6
    1606:	a2 01       	movw	r20, r4
    1608:	c5 01       	movw	r24, r10
    160a:	69 d8       	rcall	.-3886   	; 0x6de <clst2sect>
    160c:	6e 8b       	std	Y+22, r22	; 0x16
    160e:	7f 8b       	std	Y+23, r23	; 0x17
    1610:	88 8f       	std	Y+24, r24	; 0x18
    1612:	99 8f       	std	Y+25, r25	; 0x19
    1614:	ce 86       	std	Y+14, r12	; 0x0e
    1616:	df 86       	std	Y+15, r13	; 0x0f
    1618:	e8 8a       	std	Y+16, r14	; 0x10
    161a:	f9 8a       	std	Y+17, r15	; 0x11
    161c:	8f e2       	ldi	r24, 0x2F	; 47
    161e:	a8 0e       	add	r10, r24
    1620:	b1 1c       	adc	r11, r1
    1622:	e1 e0       	ldi	r30, 0x01	; 1
    1624:	de 22       	and	r13, r30
    1626:	ca 0c       	add	r12, r10
    1628:	db 1c       	adc	r13, r11
    162a:	db 8e       	std	Y+27, r13	; 0x1b
    162c:	ca 8e       	std	Y+26, r12	; 0x1a
    162e:	80 e0       	ldi	r24, 0x00	; 0
    1630:	0d c0       	rjmp	.+26     	; 0x164c <dir_next+0x1d8>
    1632:	84 e0       	ldi	r24, 0x04	; 4
    1634:	0b c0       	rjmp	.+22     	; 0x164c <dir_next+0x1d8>
    1636:	82 e0       	ldi	r24, 0x02	; 2
    1638:	09 c0       	rjmp	.+18     	; 0x164c <dir_next+0x1d8>
    163a:	81 e0       	ldi	r24, 0x01	; 1
    163c:	07 c0       	rjmp	.+14     	; 0x164c <dir_next+0x1d8>
    163e:	87 e0       	ldi	r24, 0x07	; 7
    1640:	05 c0       	rjmp	.+10     	; 0x164c <dir_next+0x1d8>
    1642:	82 e0       	ldi	r24, 0x02	; 2
    1644:	03 c0       	rjmp	.+6      	; 0x164c <dir_next+0x1d8>
    1646:	81 e0       	ldi	r24, 0x01	; 1
    1648:	01 c0       	rjmp	.+2      	; 0x164c <dir_next+0x1d8>
    164a:	81 e0       	ldi	r24, 0x01	; 1
    164c:	df 91       	pop	r29
    164e:	cf 91       	pop	r28
    1650:	1f 91       	pop	r17
    1652:	0f 91       	pop	r16
    1654:	ff 90       	pop	r15
    1656:	ef 90       	pop	r14
    1658:	df 90       	pop	r13
    165a:	cf 90       	pop	r12
    165c:	bf 90       	pop	r11
    165e:	af 90       	pop	r10
    1660:	7f 90       	pop	r7
    1662:	6f 90       	pop	r6
    1664:	5f 90       	pop	r5
    1666:	4f 90       	pop	r4
    1668:	08 95       	ret

0000166a <dir_register>:
    166a:	ef 92       	push	r14
    166c:	ff 92       	push	r15
    166e:	0f 93       	push	r16
    1670:	1f 93       	push	r17
    1672:	cf 93       	push	r28
    1674:	8c 01       	movw	r16, r24
    1676:	dc 01       	movw	r26, r24
    1678:	ed 90       	ld	r14, X+
    167a:	fc 90       	ld	r15, X
    167c:	40 e0       	ldi	r20, 0x00	; 0
    167e:	50 e0       	ldi	r21, 0x00	; 0
    1680:	ba 01       	movw	r22, r20
    1682:	1c dc       	rcall	.-1992   	; 0xebc <dir_sdi>
    1684:	c8 2f       	mov	r28, r24
    1686:	81 11       	cpse	r24, r1
    1688:	1b c0       	rjmp	.+54     	; 0x16c0 <dir_register+0x56>
    168a:	f8 01       	movw	r30, r16
    168c:	46 89       	ldd	r20, Z+22	; 0x16
    168e:	57 89       	ldd	r21, Z+23	; 0x17
    1690:	60 8d       	ldd	r22, Z+24	; 0x18
    1692:	71 8d       	ldd	r23, Z+25	; 0x19
    1694:	c7 01       	movw	r24, r14
    1696:	05 d9       	rcall	.-3574   	; 0x8a2 <move_window>
    1698:	c8 2f       	mov	r28, r24
    169a:	81 11       	cpse	r24, r1
    169c:	11 c0       	rjmp	.+34     	; 0x16c0 <dir_register+0x56>
    169e:	d8 01       	movw	r26, r16
    16a0:	5a 96       	adiw	r26, 0x1a	; 26
    16a2:	ed 91       	ld	r30, X+
    16a4:	fc 91       	ld	r31, X
    16a6:	5b 97       	sbiw	r26, 0x1b	; 27
    16a8:	80 81       	ld	r24, Z
    16aa:	85 3e       	cpi	r24, 0xE5	; 229
    16ac:	69 f0       	breq	.+26     	; 0x16c8 <dir_register+0x5e>
    16ae:	88 23       	and	r24, r24
    16b0:	59 f0       	breq	.+22     	; 0x16c8 <dir_register+0x5e>
    16b2:	61 e0       	ldi	r22, 0x01	; 1
    16b4:	70 e0       	ldi	r23, 0x00	; 0
    16b6:	c8 01       	movw	r24, r16
    16b8:	dd de       	rcall	.-582    	; 0x1474 <dir_next>
    16ba:	c8 2f       	mov	r28, r24
    16bc:	88 23       	and	r24, r24
    16be:	29 f3       	breq	.-54     	; 0x168a <dir_register+0x20>
    16c0:	c4 30       	cpi	r28, 0x04	; 4
    16c2:	31 f1       	breq	.+76     	; 0x1710 <dir_register+0xa6>
    16c4:	c1 11       	cpse	r28, r1
    16c6:	25 c0       	rjmp	.+74     	; 0x1712 <dir_register+0xa8>
    16c8:	f8 01       	movw	r30, r16
    16ca:	46 89       	ldd	r20, Z+22	; 0x16
    16cc:	57 89       	ldd	r21, Z+23	; 0x17
    16ce:	60 8d       	ldd	r22, Z+24	; 0x18
    16d0:	71 8d       	ldd	r23, Z+25	; 0x19
    16d2:	c7 01       	movw	r24, r14
    16d4:	e6 d8       	rcall	.-3636   	; 0x8a2 <move_window>
    16d6:	c8 2f       	mov	r28, r24
    16d8:	81 11       	cpse	r24, r1
    16da:	1b c0       	rjmp	.+54     	; 0x1712 <dir_register+0xa8>
    16dc:	d8 01       	movw	r26, r16
    16de:	5a 96       	adiw	r26, 0x1a	; 26
    16e0:	ed 91       	ld	r30, X+
    16e2:	fc 91       	ld	r31, X
    16e4:	5b 97       	sbiw	r26, 0x1b	; 27
    16e6:	cf 01       	movw	r24, r30
    16e8:	80 96       	adiw	r24, 0x20	; 32
    16ea:	11 92       	st	Z+, r1
    16ec:	e8 17       	cp	r30, r24
    16ee:	f9 07       	cpc	r31, r25
    16f0:	e1 f7       	brne	.-8      	; 0x16ea <dir_register+0x80>
    16f2:	b8 01       	movw	r22, r16
    16f4:	64 5e       	subi	r22, 0xE4	; 228
    16f6:	7f 4f       	sbci	r23, 0xFF	; 255
    16f8:	4b e0       	ldi	r20, 0x0B	; 11
    16fa:	50 e0       	ldi	r21, 0x00	; 0
    16fc:	f8 01       	movw	r30, r16
    16fe:	82 8d       	ldd	r24, Z+26	; 0x1a
    1700:	93 8d       	ldd	r25, Z+27	; 0x1b
    1702:	0e 94 61 03 	call	0x6c2	; 0x6c2 <mem_cpy>
    1706:	81 e0       	ldi	r24, 0x01	; 1
    1708:	d7 01       	movw	r26, r14
    170a:	13 96       	adiw	r26, 0x03	; 3
    170c:	8c 93       	st	X, r24
    170e:	01 c0       	rjmp	.+2      	; 0x1712 <dir_register+0xa8>
    1710:	c7 e0       	ldi	r28, 0x07	; 7
    1712:	8c 2f       	mov	r24, r28
    1714:	cf 91       	pop	r28
    1716:	1f 91       	pop	r17
    1718:	0f 91       	pop	r16
    171a:	ff 90       	pop	r15
    171c:	ef 90       	pop	r14
    171e:	08 95       	ret

00001720 <check_fs>:
    1720:	cf 93       	push	r28
    1722:	df 93       	push	r29
    1724:	ec 01       	movw	r28, r24
    1726:	1b 82       	std	Y+3, r1	; 0x03
    1728:	8f ef       	ldi	r24, 0xFF	; 255
    172a:	9f ef       	ldi	r25, 0xFF	; 255
    172c:	dc 01       	movw	r26, r24
    172e:	8b a7       	std	Y+43, r24	; 0x2b
    1730:	9c a7       	std	Y+44, r25	; 0x2c
    1732:	ad a7       	std	Y+45, r26	; 0x2d
    1734:	be a7       	std	Y+46, r27	; 0x2e
    1736:	ce 01       	movw	r24, r28
    1738:	b4 d8       	rcall	.-3736   	; 0x8a2 <move_window>
    173a:	81 11       	cpse	r24, r1
    173c:	71 c0       	rjmp	.+226    	; 0x1820 <check_fs+0x100>
    173e:	fe 01       	movw	r30, r28
    1740:	e2 5d       	subi	r30, 0xD2	; 210
    1742:	fd 4f       	sbci	r31, 0xFD	; 253
    1744:	20 81       	ld	r18, Z
    1746:	30 e0       	ldi	r19, 0x00	; 0
    1748:	32 2f       	mov	r19, r18
    174a:	22 27       	eor	r18, r18
    174c:	31 97       	sbiw	r30, 0x01	; 1
    174e:	80 81       	ld	r24, Z
    1750:	28 2b       	or	r18, r24
    1752:	8f a5       	ldd	r24, Y+47	; 0x2f
    1754:	8b 3e       	cpi	r24, 0xEB	; 235
    1756:	21 f0       	breq	.+8      	; 0x1760 <check_fs+0x40>
    1758:	88 5e       	subi	r24, 0xE8	; 232
    175a:	82 30       	cpi	r24, 0x02	; 2
    175c:	08 f0       	brcs	.+2      	; 0x1760 <check_fs+0x40>
    175e:	5a c0       	rjmp	.+180    	; 0x1814 <check_fs+0xf4>
    1760:	25 35       	cpi	r18, 0x55	; 85
    1762:	4a ea       	ldi	r20, 0xAA	; 170
    1764:	34 07       	cpc	r19, r20
    1766:	09 f0       	breq	.+2      	; 0x176a <check_fs+0x4a>
    1768:	67 c0       	rjmp	.+206    	; 0x1838 <check_fs+0x118>
    176a:	fe 01       	movw	r30, r28
    176c:	ef 57       	subi	r30, 0x7F	; 127
    176e:	ff 4f       	sbci	r31, 0xFF	; 255
    1770:	80 81       	ld	r24, Z
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	86 54       	subi	r24, 0x46	; 70
    1776:	91 09       	sbc	r25, r1
    1778:	de 01       	movw	r26, r28
    177a:	ae 57       	subi	r26, 0x7E	; 126
    177c:	bf 4f       	sbci	r27, 0xFF	; 255
    177e:	ea e2       	ldi	r30, 0x2A	; 42
    1780:	f2 e0       	ldi	r31, 0x02	; 2
    1782:	61 e3       	ldi	r22, 0x31	; 49
    1784:	72 e0       	ldi	r23, 0x02	; 2
    1786:	08 c0       	rjmp	.+16     	; 0x1798 <check_fs+0x78>
    1788:	8d 91       	ld	r24, X+
    178a:	41 91       	ld	r20, Z+
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	84 1b       	sub	r24, r20
    1790:	91 09       	sbc	r25, r1
    1792:	e6 17       	cp	r30, r22
    1794:	f7 07       	cpc	r31, r23
    1796:	19 f0       	breq	.+6      	; 0x179e <check_fs+0x7e>
    1798:	89 2b       	or	r24, r25
    179a:	b1 f3       	breq	.-20     	; 0x1788 <check_fs+0x68>
    179c:	04 c0       	rjmp	.+8      	; 0x17a6 <check_fs+0x86>
    179e:	89 2b       	or	r24, r25
    17a0:	09 f4       	brne	.+2      	; 0x17a4 <check_fs+0x84>
    17a2:	41 c0       	rjmp	.+130    	; 0x1826 <check_fs+0x106>
    17a4:	59 c0       	rjmp	.+178    	; 0x1858 <check_fs+0x138>
    17a6:	8b ad       	ldd	r24, Y+59	; 0x3b
    17a8:	90 e0       	ldi	r25, 0x00	; 0
    17aa:	98 2f       	mov	r25, r24
    17ac:	88 27       	eor	r24, r24
    17ae:	4a ad       	ldd	r20, Y+58	; 0x3a
    17b0:	84 2b       	or	r24, r20
    17b2:	ac 01       	movw	r20, r24
    17b4:	41 50       	subi	r20, 0x01	; 1
    17b6:	51 09       	sbc	r21, r1
    17b8:	48 23       	and	r20, r24
    17ba:	59 23       	and	r21, r25
    17bc:	45 2b       	or	r20, r21
    17be:	09 f4       	brne	.+2      	; 0x17c2 <check_fs+0xa2>
    17c0:	62 c0       	rjmp	.+196    	; 0x1886 <check_fs+0x166>
    17c2:	82 e0       	ldi	r24, 0x02	; 2
    17c4:	90 e0       	ldi	r25, 0x00	; 0
    17c6:	65 c0       	rjmp	.+202    	; 0x1892 <check_fs+0x172>
    17c8:	8c ad       	ldd	r24, Y+60	; 0x3c
    17ca:	88 23       	and	r24, r24
    17cc:	19 f1       	breq	.+70     	; 0x1814 <check_fs+0xf4>
    17ce:	90 e0       	ldi	r25, 0x00	; 0
    17d0:	ac 01       	movw	r20, r24
    17d2:	41 50       	subi	r20, 0x01	; 1
    17d4:	51 09       	sbc	r21, r1
    17d6:	84 23       	and	r24, r20
    17d8:	95 23       	and	r25, r21
    17da:	89 2b       	or	r24, r25
    17dc:	d9 f4       	brne	.+54     	; 0x1814 <check_fs+0xf4>
    17de:	8f ad       	ldd	r24, Y+63	; 0x3f
    17e0:	81 50       	subi	r24, 0x01	; 1
    17e2:	82 30       	cpi	r24, 0x02	; 2
    17e4:	b8 f4       	brcc	.+46     	; 0x1814 <check_fs+0xf4>
    17e6:	fe 01       	movw	r30, r28
    17e8:	ef 5b       	subi	r30, 0xBF	; 191
    17ea:	ff 4f       	sbci	r31, 0xFF	; 255
    17ec:	80 81       	ld	r24, Z
    17ee:	90 e0       	ldi	r25, 0x00	; 0
    17f0:	98 2f       	mov	r25, r24
    17f2:	88 27       	eor	r24, r24
    17f4:	31 97       	sbiw	r30, 0x01	; 1
    17f6:	40 81       	ld	r20, Z
    17f8:	84 2b       	or	r24, r20
    17fa:	89 2b       	or	r24, r25
    17fc:	59 f0       	breq	.+22     	; 0x1814 <check_fs+0xf4>
    17fe:	36 96       	adiw	r30, 0x06	; 6
    1800:	80 81       	ld	r24, Z
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	98 2f       	mov	r25, r24
    1806:	88 27       	eor	r24, r24
    1808:	cb 5b       	subi	r28, 0xBB	; 187
    180a:	df 4f       	sbci	r29, 0xFF	; 255
    180c:	48 81       	ld	r20, Y
    180e:	84 2b       	or	r24, r20
    1810:	89 2b       	or	r24, r25
    1812:	61 f4       	brne	.+24     	; 0x182c <check_fs+0x10c>
    1814:	25 35       	cpi	r18, 0x55	; 85
    1816:	3a 4a       	sbci	r19, 0xAA	; 170
    1818:	61 f0       	breq	.+24     	; 0x1832 <check_fs+0x112>
    181a:	83 e0       	ldi	r24, 0x03	; 3
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	39 c0       	rjmp	.+114    	; 0x1892 <check_fs+0x172>
    1820:	84 e0       	ldi	r24, 0x04	; 4
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	36 c0       	rjmp	.+108    	; 0x1892 <check_fs+0x172>
    1826:	80 e0       	ldi	r24, 0x00	; 0
    1828:	90 e0       	ldi	r25, 0x00	; 0
    182a:	33 c0       	rjmp	.+102    	; 0x1892 <check_fs+0x172>
    182c:	80 e0       	ldi	r24, 0x00	; 0
    182e:	90 e0       	ldi	r25, 0x00	; 0
    1830:	30 c0       	rjmp	.+96     	; 0x1892 <check_fs+0x172>
    1832:	82 e0       	ldi	r24, 0x02	; 2
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	2d c0       	rjmp	.+90     	; 0x1892 <check_fs+0x172>
    1838:	8b ad       	ldd	r24, Y+59	; 0x3b
    183a:	90 e0       	ldi	r25, 0x00	; 0
    183c:	98 2f       	mov	r25, r24
    183e:	88 27       	eor	r24, r24
    1840:	4a ad       	ldd	r20, Y+58	; 0x3a
    1842:	84 2b       	or	r24, r20
    1844:	ac 01       	movw	r20, r24
    1846:	41 50       	subi	r20, 0x01	; 1
    1848:	51 09       	sbc	r21, r1
    184a:	48 23       	and	r20, r24
    184c:	59 23       	and	r21, r25
    184e:	45 2b       	or	r20, r21
    1850:	99 f0       	breq	.+38     	; 0x1878 <check_fs+0x158>
    1852:	83 e0       	ldi	r24, 0x03	; 3
    1854:	90 e0       	ldi	r25, 0x00	; 0
    1856:	1d c0       	rjmp	.+58     	; 0x1892 <check_fs+0x172>
    1858:	8b ad       	ldd	r24, Y+59	; 0x3b
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	98 2f       	mov	r25, r24
    185e:	88 27       	eor	r24, r24
    1860:	4a ad       	ldd	r20, Y+58	; 0x3a
    1862:	84 2b       	or	r24, r20
    1864:	ac 01       	movw	r20, r24
    1866:	41 50       	subi	r20, 0x01	; 1
    1868:	51 09       	sbc	r21, r1
    186a:	48 23       	and	r20, r24
    186c:	59 23       	and	r21, r25
    186e:	45 2b       	or	r20, r21
    1870:	51 f0       	breq	.+20     	; 0x1886 <check_fs+0x166>
    1872:	82 e0       	ldi	r24, 0x02	; 2
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	0d c0       	rjmp	.+26     	; 0x1892 <check_fs+0x172>
    1878:	81 15       	cp	r24, r1
    187a:	92 40       	sbci	r25, 0x02	; 2
    187c:	09 f4       	brne	.+2      	; 0x1880 <check_fs+0x160>
    187e:	a4 cf       	rjmp	.-184    	; 0x17c8 <check_fs+0xa8>
    1880:	83 e0       	ldi	r24, 0x03	; 3
    1882:	90 e0       	ldi	r25, 0x00	; 0
    1884:	06 c0       	rjmp	.+12     	; 0x1892 <check_fs+0x172>
    1886:	81 15       	cp	r24, r1
    1888:	92 40       	sbci	r25, 0x02	; 2
    188a:	09 f4       	brne	.+2      	; 0x188e <check_fs+0x16e>
    188c:	9d cf       	rjmp	.-198    	; 0x17c8 <check_fs+0xa8>
    188e:	82 e0       	ldi	r24, 0x02	; 2
    1890:	90 e0       	ldi	r25, 0x00	; 0
    1892:	df 91       	pop	r29
    1894:	cf 91       	pop	r28
    1896:	08 95       	ret

00001898 <mount_volume>:
    1898:	2f 92       	push	r2
    189a:	3f 92       	push	r3
    189c:	4f 92       	push	r4
    189e:	5f 92       	push	r5
    18a0:	6f 92       	push	r6
    18a2:	7f 92       	push	r7
    18a4:	8f 92       	push	r8
    18a6:	9f 92       	push	r9
    18a8:	af 92       	push	r10
    18aa:	bf 92       	push	r11
    18ac:	cf 92       	push	r12
    18ae:	df 92       	push	r13
    18b0:	ef 92       	push	r14
    18b2:	ff 92       	push	r15
    18b4:	0f 93       	push	r16
    18b6:	1f 93       	push	r17
    18b8:	cf 93       	push	r28
    18ba:	df 93       	push	r29
    18bc:	cd b7       	in	r28, 0x3d	; 61
    18be:	de b7       	in	r29, 0x3e	; 62
    18c0:	6e 97       	sbiw	r28, 0x1e	; 30
    18c2:	0f b6       	in	r0, 0x3f	; 63
    18c4:	f8 94       	cli
    18c6:	de bf       	out	0x3e, r29	; 62
    18c8:	0f be       	out	0x3f, r0	; 63
    18ca:	cd bf       	out	0x3d, r28	; 61
    18cc:	6b 01       	movw	r12, r22
    18ce:	b4 2e       	mov	r11, r20
    18d0:	db 01       	movw	r26, r22
    18d2:	1d 92       	st	X+, r1
    18d4:	1c 92       	st	X, r1
    18d6:	0e 94 97 03 	call	0x72e	; 0x72e <get_ldnumber>
    18da:	7c 01       	movw	r14, r24
    18dc:	99 23       	and	r25, r25
    18de:	0c f4       	brge	.+2      	; 0x18e2 <mount_volume+0x4a>
    18e0:	68 c2       	rjmp	.+1232   	; 0x1db2 <mount_volume+0x51a>
    18e2:	fc 01       	movw	r30, r24
    18e4:	ee 0f       	add	r30, r30
    18e6:	ff 1f       	adc	r31, r31
    18e8:	ec 59       	subi	r30, 0x9C	; 156
    18ea:	fe 4e       	sbci	r31, 0xEE	; 238
    18ec:	00 81       	ld	r16, Z
    18ee:	11 81       	ldd	r17, Z+1	; 0x01
    18f0:	01 15       	cp	r16, r1
    18f2:	11 05       	cpc	r17, r1
    18f4:	09 f4       	brne	.+2      	; 0x18f8 <mount_volume+0x60>
    18f6:	5f c2       	rjmp	.+1214   	; 0x1db6 <mount_volume+0x51e>
    18f8:	f6 01       	movw	r30, r12
    18fa:	11 83       	std	Z+1, r17	; 0x01
    18fc:	00 83       	st	Z, r16
    18fe:	fb 2d       	mov	r31, r11
    1900:	fe 7f       	andi	r31, 0xFE	; 254
    1902:	bf 2e       	mov	r11, r31
    1904:	d8 01       	movw	r26, r16
    1906:	8c 91       	ld	r24, X
    1908:	88 23       	and	r24, r24
    190a:	69 f0       	breq	.+26     	; 0x1926 <mount_volume+0x8e>
    190c:	11 96       	adiw	r26, 0x01	; 1
    190e:	8c 91       	ld	r24, X
    1910:	0e 94 bc 02 	call	0x578	; 0x578 <disk_status>
    1914:	80 fd       	sbrc	r24, 0
    1916:	07 c0       	rjmp	.+14     	; 0x1926 <mount_volume+0x8e>
    1918:	bb 20       	and	r11, r11
    191a:	09 f4       	brne	.+2      	; 0x191e <mount_volume+0x86>
    191c:	4e c2       	rjmp	.+1180   	; 0x1dba <mount_volume+0x522>
    191e:	82 ff       	sbrs	r24, 2
    1920:	4e c2       	rjmp	.+1180   	; 0x1dbe <mount_volume+0x526>
    1922:	8a e0       	ldi	r24, 0x0A	; 10
    1924:	f2 c2       	rjmp	.+1508   	; 0x1f0a <mount_volume+0x672>
    1926:	f8 01       	movw	r30, r16
    1928:	10 82       	st	Z, r1
    192a:	e1 82       	std	Z+1, r14	; 0x01
    192c:	8e 2d       	mov	r24, r14
    192e:	0e 94 be 02 	call	0x57c	; 0x57c <disk_initialize>
    1932:	80 fd       	sbrc	r24, 0
    1934:	46 c2       	rjmp	.+1164   	; 0x1dc2 <mount_volume+0x52a>
    1936:	bb 20       	and	r11, r11
    1938:	09 f4       	brne	.+2      	; 0x193c <mount_volume+0xa4>
    193a:	69 c2       	rjmp	.+1234   	; 0x1e0e <mount_volume+0x576>
    193c:	82 fd       	sbrc	r24, 2
    193e:	43 c2       	rjmp	.+1158   	; 0x1dc6 <mount_volume+0x52e>
    1940:	40 e0       	ldi	r20, 0x00	; 0
    1942:	50 e0       	ldi	r21, 0x00	; 0
    1944:	ba 01       	movw	r22, r20
    1946:	c8 01       	movw	r24, r16
    1948:	eb de       	rcall	.-554    	; 0x1720 <check_fs>
    194a:	82 30       	cpi	r24, 0x02	; 2
    194c:	91 05       	cpc	r25, r1
    194e:	c1 f5       	brne	.+112    	; 0x19c0 <mount_volume+0x128>
    1950:	48 01       	movw	r8, r16
    1952:	fb e0       	ldi	r31, 0x0B	; 11
    1954:	8f 1a       	sub	r8, r31
    1956:	fe ef       	ldi	r31, 0xFE	; 254
    1958:	9f 0a       	sbc	r9, r31
    195a:	9e 01       	movw	r18, r28
    195c:	2f 5f       	subi	r18, 0xFF	; 255
    195e:	3f 4f       	sbci	r19, 0xFF	; 255
    1960:	79 01       	movw	r14, r18
    1962:	6e 01       	movw	r12, r28
    1964:	31 e1       	ldi	r19, 0x11	; 17
    1966:	c3 0e       	add	r12, r19
    1968:	d1 1c       	adc	r13, r1
    196a:	57 01       	movw	r10, r14
    196c:	c4 01       	movw	r24, r8
    196e:	0e 94 46 03 	call	0x68c	; 0x68c <ld_dword>
    1972:	d5 01       	movw	r26, r10
    1974:	6d 93       	st	X+, r22
    1976:	7d 93       	st	X+, r23
    1978:	8d 93       	st	X+, r24
    197a:	9d 93       	st	X+, r25
    197c:	5d 01       	movw	r10, r26
    197e:	b0 e1       	ldi	r27, 0x10	; 16
    1980:	8b 0e       	add	r8, r27
    1982:	91 1c       	adc	r9, r1
    1984:	ac 14       	cp	r10, r12
    1986:	bd 04       	cpc	r11, r13
    1988:	89 f7       	brne	.-30     	; 0x196c <mount_volume+0xd4>
    198a:	0f 2e       	mov	r0, r31
    198c:	f3 e0       	ldi	r31, 0x03	; 3
    198e:	af 2e       	mov	r10, r31
    1990:	f0 2d       	mov	r31, r0
    1992:	b1 2c       	mov	r11, r1
    1994:	f7 01       	movw	r30, r14
    1996:	41 91       	ld	r20, Z+
    1998:	51 91       	ld	r21, Z+
    199a:	61 91       	ld	r22, Z+
    199c:	71 91       	ld	r23, Z+
    199e:	7f 01       	movw	r14, r30
    19a0:	41 15       	cp	r20, r1
    19a2:	51 05       	cpc	r21, r1
    19a4:	61 05       	cpc	r22, r1
    19a6:	71 05       	cpc	r23, r1
    19a8:	31 f0       	breq	.+12     	; 0x19b6 <mount_volume+0x11e>
    19aa:	c8 01       	movw	r24, r16
    19ac:	b9 de       	rcall	.-654    	; 0x1720 <check_fs>
    19ae:	82 30       	cpi	r24, 0x02	; 2
    19b0:	91 05       	cpc	r25, r1
    19b2:	18 f4       	brcc	.+6      	; 0x19ba <mount_volume+0x122>
    19b4:	36 c2       	rjmp	.+1132   	; 0x1e22 <mount_volume+0x58a>
    19b6:	8a 2d       	mov	r24, r10
    19b8:	9b 2d       	mov	r25, r11
    19ba:	ce 14       	cp	r12, r14
    19bc:	df 04       	cpc	r13, r15
    19be:	51 f7       	brne	.-44     	; 0x1994 <mount_volume+0xfc>
    19c0:	84 30       	cpi	r24, 0x04	; 4
    19c2:	91 05       	cpc	r25, r1
    19c4:	09 f4       	brne	.+2      	; 0x19c8 <mount_volume+0x130>
    19c6:	01 c2       	rjmp	.+1026   	; 0x1dca <mount_volume+0x532>
    19c8:	02 97       	sbiw	r24, 0x02	; 2
    19ca:	08 f0       	brcs	.+2      	; 0x19ce <mount_volume+0x136>
    19cc:	00 c2       	rjmp	.+1024   	; 0x1dce <mount_volume+0x536>
    19ce:	d8 01       	movw	r26, r16
    19d0:	db 96       	adiw	r26, 0x3b	; 59
    19d2:	8c 91       	ld	r24, X
    19d4:	db 97       	sbiw	r26, 0x3b	; 59
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	98 2f       	mov	r25, r24
    19da:	88 27       	eor	r24, r24
    19dc:	da 96       	adiw	r26, 0x3a	; 58
    19de:	2c 91       	ld	r18, X
    19e0:	82 2b       	or	r24, r18
    19e2:	81 15       	cp	r24, r1
    19e4:	92 40       	sbci	r25, 0x02	; 2
    19e6:	09 f0       	breq	.+2      	; 0x19ea <mount_volume+0x152>
    19e8:	f4 c1       	rjmp	.+1000   	; 0x1dd2 <mount_volume+0x53a>
    19ea:	f8 01       	movw	r30, r16
    19ec:	ea 5b       	subi	r30, 0xBA	; 186
    19ee:	ff 4f       	sbci	r31, 0xFF	; 255
    19f0:	80 80       	ld	r8, Z
    19f2:	91 2c       	mov	r9, r1
    19f4:	98 2c       	mov	r9, r8
    19f6:	88 24       	eor	r8, r8
    19f8:	31 97       	sbiw	r30, 0x01	; 1
    19fa:	80 81       	ld	r24, Z
    19fc:	88 2a       	or	r8, r24
    19fe:	94 01       	movw	r18, r8
    1a00:	40 e0       	ldi	r20, 0x00	; 0
    1a02:	50 e0       	ldi	r21, 0x00	; 0
    1a04:	29 8b       	std	Y+17, r18	; 0x11
    1a06:	3a 8b       	std	Y+18, r19	; 0x12
    1a08:	4b 8b       	std	Y+19, r20	; 0x13
    1a0a:	5c 8b       	std	Y+20, r21	; 0x14
    1a0c:	23 2b       	or	r18, r19
    1a0e:	24 2b       	or	r18, r20
    1a10:	25 2b       	or	r18, r21
    1a12:	49 f4       	brne	.+18     	; 0x1a26 <mount_volume+0x18e>
    1a14:	c8 01       	movw	r24, r16
    1a16:	8d 5a       	subi	r24, 0xAD	; 173
    1a18:	9f 4f       	sbci	r25, 0xFF	; 255
    1a1a:	0e 94 46 03 	call	0x68c	; 0x68c <ld_dword>
    1a1e:	69 8b       	std	Y+17, r22	; 0x11
    1a20:	7a 8b       	std	Y+18, r23	; 0x12
    1a22:	8b 8b       	std	Y+19, r24	; 0x13
    1a24:	9c 8b       	std	Y+20, r25	; 0x14
    1a26:	d8 01       	movw	r26, r16
    1a28:	9b 96       	adiw	r26, 0x2b	; 43
    1a2a:	8d 90       	ld	r8, X+
    1a2c:	9d 90       	ld	r9, X+
    1a2e:	ad 90       	ld	r10, X+
    1a30:	bc 90       	ld	r11, X
    1a32:	9e 97       	sbiw	r26, 0x2e	; 46
    1a34:	29 89       	ldd	r18, Y+17	; 0x11
    1a36:	3a 89       	ldd	r19, Y+18	; 0x12
    1a38:	4b 89       	ldd	r20, Y+19	; 0x13
    1a3a:	5c 89       	ldd	r21, Y+20	; 0x14
    1a3c:	57 96       	adiw	r26, 0x17	; 23
    1a3e:	2d 93       	st	X+, r18
    1a40:	3d 93       	st	X+, r19
    1a42:	4d 93       	st	X+, r20
    1a44:	5c 93       	st	X, r21
    1a46:	5a 97       	sbiw	r26, 0x1a	; 26
    1a48:	df 96       	adiw	r26, 0x3f	; 63
    1a4a:	7c 90       	ld	r7, X
    1a4c:	df 97       	sbiw	r26, 0x3f	; 63
    1a4e:	12 96       	adiw	r26, 0x02	; 2
    1a50:	7c 92       	st	X, r7
    1a52:	12 97       	sbiw	r26, 0x02	; 2
    1a54:	8f ef       	ldi	r24, 0xFF	; 255
    1a56:	87 0d       	add	r24, r7
    1a58:	82 30       	cpi	r24, 0x02	; 2
    1a5a:	08 f0       	brcs	.+2      	; 0x1a5e <mount_volume+0x1c6>
    1a5c:	bc c1       	rjmp	.+888    	; 0x1dd6 <mount_volume+0x53e>
    1a5e:	dc 96       	adiw	r26, 0x3c	; 60
    1a60:	3c 90       	ld	r3, X
    1a62:	dc 97       	sbiw	r26, 0x3c	; 60
    1a64:	83 2d       	mov	r24, r3
    1a66:	90 e0       	ldi	r25, 0x00	; 0
    1a68:	1a 96       	adiw	r26, 0x0a	; 10
    1a6a:	9c 93       	st	X, r25
    1a6c:	8e 93       	st	-X, r24
    1a6e:	19 97       	sbiw	r26, 0x09	; 9
    1a70:	00 97       	sbiw	r24, 0x00	; 0
    1a72:	09 f4       	brne	.+2      	; 0x1a76 <mount_volume+0x1de>
    1a74:	b2 c1       	rjmp	.+868    	; 0x1dda <mount_volume+0x542>
    1a76:	9c 01       	movw	r18, r24
    1a78:	21 50       	subi	r18, 0x01	; 1
    1a7a:	31 09       	sbc	r19, r1
    1a7c:	82 23       	and	r24, r18
    1a7e:	93 23       	and	r25, r19
    1a80:	89 2b       	or	r24, r25
    1a82:	09 f0       	breq	.+2      	; 0x1a86 <mount_volume+0x1ee>
    1a84:	ac c1       	rjmp	.+856    	; 0x1dde <mount_volume+0x546>
    1a86:	f8 01       	movw	r30, r16
    1a88:	ef 5b       	subi	r30, 0xBF	; 191
    1a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a8c:	80 81       	ld	r24, Z
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	98 2f       	mov	r25, r24
    1a92:	88 27       	eor	r24, r24
    1a94:	31 97       	sbiw	r30, 0x01	; 1
    1a96:	20 81       	ld	r18, Z
    1a98:	fc 01       	movw	r30, r24
    1a9a:	e2 2b       	or	r30, r18
    1a9c:	fe 8b       	std	Y+22, r31	; 0x16
    1a9e:	ed 8b       	std	Y+21, r30	; 0x15
    1aa0:	18 96       	adiw	r26, 0x08	; 8
    1aa2:	fc 93       	st	X, r31
    1aa4:	ee 93       	st	-X, r30
    1aa6:	17 97       	sbiw	r26, 0x07	; 7
    1aa8:	cf 01       	movw	r24, r30
    1aaa:	8f 70       	andi	r24, 0x0F	; 15
    1aac:	99 27       	eor	r25, r25
    1aae:	89 2b       	or	r24, r25
    1ab0:	09 f0       	breq	.+2      	; 0x1ab4 <mount_volume+0x21c>
    1ab2:	97 c1       	rjmp	.+814    	; 0x1de2 <mount_volume+0x54a>
    1ab4:	f8 01       	movw	r30, r16
    1ab6:	ed 5b       	subi	r30, 0xBD	; 189
    1ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aba:	c0 80       	ld	r12, Z
    1abc:	d1 2c       	mov	r13, r1
    1abe:	dc 2c       	mov	r13, r12
    1ac0:	cc 24       	eor	r12, r12
    1ac2:	31 97       	sbiw	r30, 0x01	; 1
    1ac4:	80 81       	ld	r24, Z
    1ac6:	c8 2a       	or	r12, r24
    1ac8:	e1 2c       	mov	r14, r1
    1aca:	f1 2c       	mov	r15, r1
    1acc:	c1 14       	cp	r12, r1
    1ace:	d1 04       	cpc	r13, r1
    1ad0:	e1 04       	cpc	r14, r1
    1ad2:	f1 04       	cpc	r15, r1
    1ad4:	39 f4       	brne	.+14     	; 0x1ae4 <mount_volume+0x24c>
    1ad6:	c8 01       	movw	r24, r16
    1ad8:	81 5b       	subi	r24, 0xB1	; 177
    1ada:	9f 4f       	sbci	r25, 0xFF	; 255
    1adc:	0e 94 46 03 	call	0x68c	; 0x68c <ld_dword>
    1ae0:	6b 01       	movw	r12, r22
    1ae2:	7c 01       	movw	r14, r24
    1ae4:	d8 01       	movw	r26, r16
    1ae6:	de 96       	adiw	r26, 0x3e	; 62
    1ae8:	ec 91       	ld	r30, X
    1aea:	de 97       	sbiw	r26, 0x3e	; 62
    1aec:	f0 e0       	ldi	r31, 0x00	; 0
    1aee:	fe 2f       	mov	r31, r30
    1af0:	ee 27       	eor	r30, r30
    1af2:	dd 96       	adiw	r26, 0x3d	; 61
    1af4:	8c 91       	ld	r24, X
    1af6:	e8 2b       	or	r30, r24
    1af8:	30 97       	sbiw	r30, 0x00	; 0
    1afa:	09 f4       	brne	.+2      	; 0x1afe <mount_volume+0x266>
    1afc:	74 c1       	rjmp	.+744    	; 0x1de6 <mount_volume+0x54e>
    1afe:	a7 2d       	mov	r26, r7
    1b00:	b0 e0       	ldi	r27, 0x00	; 0
    1b02:	29 89       	ldd	r18, Y+17	; 0x11
    1b04:	3a 89       	ldd	r19, Y+18	; 0x12
    1b06:	4b 89       	ldd	r20, Y+19	; 0x13
    1b08:	5c 89       	ldd	r21, Y+20	; 0x14
    1b0a:	0e 94 ed 26 	call	0x4dda	; 0x4dda <__muluhisi3>
    1b0e:	6b 8f       	std	Y+27, r22	; 0x1b
    1b10:	7c 8f       	std	Y+28, r23	; 0x1c
    1b12:	8d 8f       	std	Y+29, r24	; 0x1d
    1b14:	9e 8f       	std	Y+30, r25	; 0x1e
    1b16:	9f 01       	movw	r18, r30
    1b18:	40 e0       	ldi	r20, 0x00	; 0
    1b1a:	50 e0       	ldi	r21, 0x00	; 0
    1b1c:	2f 8b       	std	Y+23, r18	; 0x17
    1b1e:	38 8f       	std	Y+24, r19	; 0x18
    1b20:	49 8f       	std	Y+25, r20	; 0x19
    1b22:	5a 8f       	std	Y+26, r21	; 0x1a
    1b24:	8d 89       	ldd	r24, Y+21	; 0x15
    1b26:	9e 89       	ldd	r25, Y+22	; 0x16
    1b28:	92 95       	swap	r25
    1b2a:	82 95       	swap	r24
    1b2c:	8f 70       	andi	r24, 0x0F	; 15
    1b2e:	89 27       	eor	r24, r25
    1b30:	9f 70       	andi	r25, 0x0F	; 15
    1b32:	89 27       	eor	r24, r25
    1b34:	28 0f       	add	r18, r24
    1b36:	39 1f       	adc	r19, r25
    1b38:	41 1d       	adc	r20, r1
    1b3a:	51 1d       	adc	r21, r1
    1b3c:	4b 8c       	ldd	r4, Y+27	; 0x1b
    1b3e:	5c 8c       	ldd	r5, Y+28	; 0x1c
    1b40:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1b42:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1b44:	42 0e       	add	r4, r18
    1b46:	53 1e       	adc	r5, r19
    1b48:	64 1e       	adc	r6, r20
    1b4a:	75 1e       	adc	r7, r21
    1b4c:	c4 14       	cp	r12, r4
    1b4e:	d5 04       	cpc	r13, r5
    1b50:	e6 04       	cpc	r14, r6
    1b52:	f7 04       	cpc	r15, r7
    1b54:	08 f4       	brcc	.+2      	; 0x1b58 <mount_volume+0x2c0>
    1b56:	49 c1       	rjmp	.+658    	; 0x1dea <mount_volume+0x552>
    1b58:	c7 01       	movw	r24, r14
    1b5a:	b6 01       	movw	r22, r12
    1b5c:	64 19       	sub	r22, r4
    1b5e:	75 09       	sbc	r23, r5
    1b60:	86 09       	sbc	r24, r6
    1b62:	97 09       	sbc	r25, r7
    1b64:	23 2d       	mov	r18, r3
    1b66:	30 e0       	ldi	r19, 0x00	; 0
    1b68:	40 e0       	ldi	r20, 0x00	; 0
    1b6a:	50 e0       	ldi	r21, 0x00	; 0
    1b6c:	0e 94 c3 26 	call	0x4d86	; 0x4d86 <__udivmodsi4>
    1b70:	da 01       	movw	r26, r20
    1b72:	c9 01       	movw	r24, r18
    1b74:	21 15       	cp	r18, r1
    1b76:	31 05       	cpc	r19, r1
    1b78:	41 05       	cpc	r20, r1
    1b7a:	51 05       	cpc	r21, r1
    1b7c:	09 f4       	brne	.+2      	; 0x1b80 <mount_volume+0x2e8>
    1b7e:	37 c1       	rjmp	.+622    	; 0x1dee <mount_volume+0x556>
    1b80:	26 3f       	cpi	r18, 0xF6	; 246
    1b82:	6f ef       	ldi	r22, 0xFF	; 255
    1b84:	36 07       	cpc	r19, r22
    1b86:	46 07       	cpc	r20, r22
    1b88:	6f e0       	ldi	r22, 0x0F	; 15
    1b8a:	56 07       	cpc	r21, r22
    1b8c:	30 f4       	brcc	.+12     	; 0x1b9a <mount_volume+0x302>
    1b8e:	0f 2e       	mov	r0, r31
    1b90:	f3 e0       	ldi	r31, 0x03	; 3
    1b92:	2f 2e       	mov	r2, r31
    1b94:	31 2c       	mov	r3, r1
    1b96:	f0 2d       	mov	r31, r0
    1b98:	02 c0       	rjmp	.+4      	; 0x1b9e <mount_volume+0x306>
    1b9a:	21 2c       	mov	r2, r1
    1b9c:	31 2c       	mov	r3, r1
    1b9e:	86 3f       	cpi	r24, 0xF6	; 246
    1ba0:	ef ef       	ldi	r30, 0xFF	; 255
    1ba2:	9e 07       	cpc	r25, r30
    1ba4:	a1 05       	cpc	r26, r1
    1ba6:	b1 05       	cpc	r27, r1
    1ba8:	20 f4       	brcc	.+8      	; 0x1bb2 <mount_volume+0x31a>
    1baa:	68 94       	set
    1bac:	22 24       	eor	r2, r2
    1bae:	21 f8       	bld	r2, 1
    1bb0:	31 2c       	mov	r3, r1
    1bb2:	86 3f       	cpi	r24, 0xF6	; 246
    1bb4:	9f 40       	sbci	r25, 0x0F	; 15
    1bb6:	a1 05       	cpc	r26, r1
    1bb8:	b1 05       	cpc	r27, r1
    1bba:	08 f4       	brcc	.+2      	; 0x1bbe <mount_volume+0x326>
    1bbc:	79 c1       	rjmp	.+754    	; 0x1eb0 <mount_volume+0x618>
    1bbe:	21 14       	cp	r2, r1
    1bc0:	31 04       	cpc	r3, r1
    1bc2:	09 f4       	brne	.+2      	; 0x1bc6 <mount_volume+0x32e>
    1bc4:	16 c1       	rjmp	.+556    	; 0x1df2 <mount_volume+0x55a>
    1bc6:	69 01       	movw	r12, r18
    1bc8:	7a 01       	movw	r14, r20
    1bca:	62 e0       	ldi	r22, 0x02	; 2
    1bcc:	c6 0e       	add	r12, r22
    1bce:	d1 1c       	adc	r13, r1
    1bd0:	e1 1c       	adc	r14, r1
    1bd2:	f1 1c       	adc	r15, r1
    1bd4:	d8 01       	movw	r26, r16
    1bd6:	53 96       	adiw	r26, 0x13	; 19
    1bd8:	cd 92       	st	X+, r12
    1bda:	dd 92       	st	X+, r13
    1bdc:	ed 92       	st	X+, r14
    1bde:	fc 92       	st	X, r15
    1be0:	56 97       	sbiw	r26, 0x16	; 22
    1be2:	f8 01       	movw	r30, r16
    1be4:	83 8e       	std	Z+27, r8	; 0x1b
    1be6:	94 8e       	std	Z+28, r9	; 0x1c
    1be8:	a5 8e       	std	Z+29, r10	; 0x1d
    1bea:	b6 8e       	std	Z+30, r11	; 0x1e
    1bec:	8f 89       	ldd	r24, Y+23	; 0x17
    1bee:	98 8d       	ldd	r25, Y+24	; 0x18
    1bf0:	a9 8d       	ldd	r26, Y+25	; 0x19
    1bf2:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1bf4:	88 0d       	add	r24, r8
    1bf6:	99 1d       	adc	r25, r9
    1bf8:	aa 1d       	adc	r26, r10
    1bfa:	bb 1d       	adc	r27, r11
    1bfc:	87 8f       	std	Z+31, r24	; 0x1f
    1bfe:	90 a3       	std	Z+32, r25	; 0x20
    1c00:	a1 a3       	std	Z+33, r26	; 0x21
    1c02:	b2 a3       	std	Z+34, r27	; 0x22
    1c04:	b5 01       	movw	r22, r10
    1c06:	a4 01       	movw	r20, r8
    1c08:	44 0d       	add	r20, r4
    1c0a:	55 1d       	adc	r21, r5
    1c0c:	66 1d       	adc	r22, r6
    1c0e:	77 1d       	adc	r23, r7
    1c10:	47 a3       	std	Z+39, r20	; 0x27
    1c12:	50 a7       	std	Z+40, r21	; 0x28
    1c14:	61 a7       	std	Z+41, r22	; 0x29
    1c16:	72 a7       	std	Z+42, r23	; 0x2a
    1c18:	f3 e0       	ldi	r31, 0x03	; 3
    1c1a:	2f 16       	cp	r2, r31
    1c1c:	31 04       	cpc	r3, r1
    1c1e:	09 f0       	breq	.+2      	; 0x1c22 <mount_volume+0x38a>
    1c20:	40 c0       	rjmp	.+128    	; 0x1ca2 <mount_volume+0x40a>
    1c22:	f8 01       	movw	r30, r16
    1c24:	e6 5a       	subi	r30, 0xA6	; 166
    1c26:	ff 4f       	sbci	r31, 0xFF	; 255
    1c28:	80 81       	ld	r24, Z
    1c2a:	90 e0       	ldi	r25, 0x00	; 0
    1c2c:	98 2f       	mov	r25, r24
    1c2e:	88 27       	eor	r24, r24
    1c30:	31 97       	sbiw	r30, 0x01	; 1
    1c32:	20 81       	ld	r18, Z
    1c34:	82 2b       	or	r24, r18
    1c36:	89 2b       	or	r24, r25
    1c38:	09 f0       	breq	.+2      	; 0x1c3c <mount_volume+0x3a4>
    1c3a:	dd c0       	rjmp	.+442    	; 0x1df6 <mount_volume+0x55e>
    1c3c:	2d 89       	ldd	r18, Y+21	; 0x15
    1c3e:	3e 89       	ldd	r19, Y+22	; 0x16
    1c40:	23 2b       	or	r18, r19
    1c42:	09 f0       	breq	.+2      	; 0x1c46 <mount_volume+0x3ae>
    1c44:	da c0       	rjmp	.+436    	; 0x1dfa <mount_volume+0x562>
    1c46:	c8 01       	movw	r24, r16
    1c48:	85 5a       	subi	r24, 0xA5	; 165
    1c4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c4c:	0e 94 46 03 	call	0x68c	; 0x68c <ld_dword>
    1c50:	d8 01       	movw	r26, r16
    1c52:	93 96       	adiw	r26, 0x23	; 35
    1c54:	6d 93       	st	X+, r22
    1c56:	7d 93       	st	X+, r23
    1c58:	8d 93       	st	X+, r24
    1c5a:	9c 93       	st	X, r25
    1c5c:	96 97       	sbiw	r26, 0x26	; 38
    1c5e:	cc 0c       	add	r12, r12
    1c60:	dd 1c       	adc	r13, r13
    1c62:	ee 1c       	adc	r14, r14
    1c64:	ff 1c       	adc	r15, r15
    1c66:	cc 0c       	add	r12, r12
    1c68:	dd 1c       	adc	r13, r13
    1c6a:	ee 1c       	adc	r14, r14
    1c6c:	ff 1c       	adc	r15, r15
    1c6e:	bf ef       	ldi	r27, 0xFF	; 255
    1c70:	cb 0e       	add	r12, r27
    1c72:	b1 e0       	ldi	r27, 0x01	; 1
    1c74:	db 1e       	adc	r13, r27
    1c76:	e1 1c       	adc	r14, r1
    1c78:	f1 1c       	adc	r15, r1
    1c7a:	0b 2e       	mov	r0, r27
    1c7c:	b9 e0       	ldi	r27, 0x09	; 9
    1c7e:	f6 94       	lsr	r15
    1c80:	e7 94       	ror	r14
    1c82:	d7 94       	ror	r13
    1c84:	c7 94       	ror	r12
    1c86:	ba 95       	dec	r27
    1c88:	d1 f7       	brne	.-12     	; 0x1c7e <mount_volume+0x3e6>
    1c8a:	b0 2d       	mov	r27, r0
    1c8c:	29 89       	ldd	r18, Y+17	; 0x11
    1c8e:	3a 89       	ldd	r19, Y+18	; 0x12
    1c90:	4b 89       	ldd	r20, Y+19	; 0x13
    1c92:	5c 89       	ldd	r21, Y+20	; 0x14
    1c94:	2c 15       	cp	r18, r12
    1c96:	3d 05       	cpc	r19, r13
    1c98:	4e 05       	cpc	r20, r14
    1c9a:	5f 05       	cpc	r21, r15
    1c9c:	08 f4       	brcc	.+2      	; 0x1ca0 <mount_volume+0x408>
    1c9e:	af c0       	rjmp	.+350    	; 0x1dfe <mount_volume+0x566>
    1ca0:	ec c0       	rjmp	.+472    	; 0x1e7a <mount_volume+0x5e2>
    1ca2:	4d 89       	ldd	r20, Y+21	; 0x15
    1ca4:	5e 89       	ldd	r21, Y+22	; 0x16
    1ca6:	45 2b       	or	r20, r21
    1ca8:	09 f4       	brne	.+2      	; 0x1cac <mount_volume+0x414>
    1caa:	ab c0       	rjmp	.+342    	; 0x1e02 <mount_volume+0x56a>
    1cac:	4b 8c       	ldd	r4, Y+27	; 0x1b
    1cae:	5c 8c       	ldd	r5, Y+28	; 0x1c
    1cb0:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1cb2:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1cb4:	48 0e       	add	r4, r24
    1cb6:	59 1e       	adc	r5, r25
    1cb8:	6a 1e       	adc	r6, r26
    1cba:	7b 1e       	adc	r7, r27
    1cbc:	d8 01       	movw	r26, r16
    1cbe:	93 96       	adiw	r26, 0x23	; 35
    1cc0:	4d 92       	st	X+, r4
    1cc2:	5d 92       	st	X+, r5
    1cc4:	6d 92       	st	X+, r6
    1cc6:	7c 92       	st	X, r7
    1cc8:	96 97       	sbiw	r26, 0x26	; 38
    1cca:	b2 e0       	ldi	r27, 0x02	; 2
    1ccc:	2b 16       	cp	r2, r27
    1cce:	31 04       	cpc	r3, r1
    1cd0:	29 f4       	brne	.+10     	; 0x1cdc <mount_volume+0x444>
    1cd2:	cc 0c       	add	r12, r12
    1cd4:	dd 1c       	adc	r13, r13
    1cd6:	ee 1c       	adc	r14, r14
    1cd8:	ff 1c       	adc	r15, r15
    1cda:	b6 c0       	rjmp	.+364    	; 0x1e48 <mount_volume+0x5b0>
    1cdc:	a3 e0       	ldi	r26, 0x03	; 3
    1cde:	b0 e0       	ldi	r27, 0x00	; 0
    1ce0:	a7 01       	movw	r20, r14
    1ce2:	96 01       	movw	r18, r12
    1ce4:	0e 94 ed 26 	call	0x4dda	; 0x4dda <__muluhisi3>
    1ce8:	dc 01       	movw	r26, r24
    1cea:	cb 01       	movw	r24, r22
    1cec:	b6 95       	lsr	r27
    1cee:	a7 95       	ror	r26
    1cf0:	97 95       	ror	r25
    1cf2:	87 95       	ror	r24
    1cf4:	e1 e0       	ldi	r30, 0x01	; 1
    1cf6:	ce 22       	and	r12, r30
    1cf8:	dd 24       	eor	r13, r13
    1cfa:	ee 24       	eor	r14, r14
    1cfc:	ff 24       	eor	r15, r15
    1cfe:	c8 0e       	add	r12, r24
    1d00:	d9 1e       	adc	r13, r25
    1d02:	ea 1e       	adc	r14, r26
    1d04:	fb 1e       	adc	r15, r27
    1d06:	a0 c0       	rjmp	.+320    	; 0x1e48 <mount_volume+0x5b0>
    1d08:	b5 01       	movw	r22, r10
    1d0a:	a4 01       	movw	r20, r8
    1d0c:	4f 5f       	subi	r20, 0xFF	; 255
    1d0e:	5f 4f       	sbci	r21, 0xFF	; 255
    1d10:	6f 4f       	sbci	r22, 0xFF	; 255
    1d12:	7f 4f       	sbci	r23, 0xFF	; 255
    1d14:	c8 01       	movw	r24, r16
    1d16:	0e 94 51 04 	call	0x8a2	; 0x8a2 <move_window>
    1d1a:	81 11       	cpse	r24, r1
    1d1c:	39 c0       	rjmp	.+114    	; 0x1d90 <mount_volume+0x4f8>
    1d1e:	d8 01       	movw	r26, r16
    1d20:	14 96       	adiw	r26, 0x04	; 4
    1d22:	1c 92       	st	X, r1
    1d24:	f8 01       	movw	r30, r16
    1d26:	e2 5d       	subi	r30, 0xD2	; 210
    1d28:	fd 4f       	sbci	r31, 0xFD	; 253
    1d2a:	80 81       	ld	r24, Z
    1d2c:	90 e0       	ldi	r25, 0x00	; 0
    1d2e:	98 2f       	mov	r25, r24
    1d30:	88 27       	eor	r24, r24
    1d32:	31 97       	sbiw	r30, 0x01	; 1
    1d34:	20 81       	ld	r18, Z
    1d36:	82 2b       	or	r24, r18
    1d38:	85 35       	cpi	r24, 0x55	; 85
    1d3a:	9a 4a       	sbci	r25, 0xAA	; 170
    1d3c:	49 f5       	brne	.+82     	; 0x1d90 <mount_volume+0x4f8>
    1d3e:	c8 01       	movw	r24, r16
    1d40:	8f 96       	adiw	r24, 0x2f	; 47
    1d42:	0e 94 46 03 	call	0x68c	; 0x68c <ld_dword>
    1d46:	62 35       	cpi	r22, 0x52	; 82
    1d48:	72 45       	sbci	r23, 0x52	; 82
    1d4a:	81 46       	sbci	r24, 0x61	; 97
    1d4c:	91 44       	sbci	r25, 0x41	; 65
    1d4e:	01 f5       	brne	.+64     	; 0x1d90 <mount_volume+0x4f8>
    1d50:	c8 01       	movw	r24, r16
    1d52:	8d 5e       	subi	r24, 0xED	; 237
    1d54:	9d 4f       	sbci	r25, 0xFD	; 253
    1d56:	0e 94 46 03 	call	0x68c	; 0x68c <ld_dword>
    1d5a:	62 37       	cpi	r22, 0x72	; 114
    1d5c:	72 47       	sbci	r23, 0x72	; 114
    1d5e:	81 44       	sbci	r24, 0x41	; 65
    1d60:	91 46       	sbci	r25, 0x61	; 97
    1d62:	b1 f4       	brne	.+44     	; 0x1d90 <mount_volume+0x4f8>
    1d64:	c8 01       	movw	r24, r16
    1d66:	89 5e       	subi	r24, 0xE9	; 233
    1d68:	9d 4f       	sbci	r25, 0xFD	; 253
    1d6a:	0e 94 46 03 	call	0x68c	; 0x68c <ld_dword>
    1d6e:	d8 01       	movw	r26, r16
    1d70:	1f 96       	adiw	r26, 0x0f	; 15
    1d72:	6d 93       	st	X+, r22
    1d74:	7d 93       	st	X+, r23
    1d76:	8d 93       	st	X+, r24
    1d78:	9c 93       	st	X, r25
    1d7a:	52 97       	sbiw	r26, 0x12	; 18
    1d7c:	c8 01       	movw	r24, r16
    1d7e:	85 5e       	subi	r24, 0xE5	; 229
    1d80:	9d 4f       	sbci	r25, 0xFD	; 253
    1d82:	0e 94 46 03 	call	0x68c	; 0x68c <ld_dword>
    1d86:	f8 01       	movw	r30, r16
    1d88:	63 87       	std	Z+11, r22	; 0x0b
    1d8a:	74 87       	std	Z+12, r23	; 0x0c
    1d8c:	85 87       	std	Z+13, r24	; 0x0d
    1d8e:	96 87       	std	Z+14, r25	; 0x0e
    1d90:	d8 01       	movw	r26, r16
    1d92:	2c 92       	st	X, r2
    1d94:	80 91 62 11 	lds	r24, 0x1162	; 0x801162 <__data_end>
    1d98:	90 91 63 11 	lds	r25, 0x1163	; 0x801163 <__data_end+0x1>
    1d9c:	01 96       	adiw	r24, 0x01	; 1
    1d9e:	90 93 63 11 	sts	0x1163, r25	; 0x801163 <__data_end+0x1>
    1da2:	80 93 62 11 	sts	0x1162, r24	; 0x801162 <__data_end>
    1da6:	16 96       	adiw	r26, 0x06	; 6
    1da8:	9c 93       	st	X, r25
    1daa:	8e 93       	st	-X, r24
    1dac:	15 97       	sbiw	r26, 0x05	; 5
    1dae:	80 e0       	ldi	r24, 0x00	; 0
    1db0:	ac c0       	rjmp	.+344    	; 0x1f0a <mount_volume+0x672>
    1db2:	8b e0       	ldi	r24, 0x0B	; 11
    1db4:	aa c0       	rjmp	.+340    	; 0x1f0a <mount_volume+0x672>
    1db6:	8c e0       	ldi	r24, 0x0C	; 12
    1db8:	a8 c0       	rjmp	.+336    	; 0x1f0a <mount_volume+0x672>
    1dba:	80 e0       	ldi	r24, 0x00	; 0
    1dbc:	a6 c0       	rjmp	.+332    	; 0x1f0a <mount_volume+0x672>
    1dbe:	80 e0       	ldi	r24, 0x00	; 0
    1dc0:	a4 c0       	rjmp	.+328    	; 0x1f0a <mount_volume+0x672>
    1dc2:	83 e0       	ldi	r24, 0x03	; 3
    1dc4:	a2 c0       	rjmp	.+324    	; 0x1f0a <mount_volume+0x672>
    1dc6:	8a e0       	ldi	r24, 0x0A	; 10
    1dc8:	a0 c0       	rjmp	.+320    	; 0x1f0a <mount_volume+0x672>
    1dca:	81 e0       	ldi	r24, 0x01	; 1
    1dcc:	9e c0       	rjmp	.+316    	; 0x1f0a <mount_volume+0x672>
    1dce:	8d e0       	ldi	r24, 0x0D	; 13
    1dd0:	9c c0       	rjmp	.+312    	; 0x1f0a <mount_volume+0x672>
    1dd2:	8d e0       	ldi	r24, 0x0D	; 13
    1dd4:	9a c0       	rjmp	.+308    	; 0x1f0a <mount_volume+0x672>
    1dd6:	8d e0       	ldi	r24, 0x0D	; 13
    1dd8:	98 c0       	rjmp	.+304    	; 0x1f0a <mount_volume+0x672>
    1dda:	8d e0       	ldi	r24, 0x0D	; 13
    1ddc:	96 c0       	rjmp	.+300    	; 0x1f0a <mount_volume+0x672>
    1dde:	8d e0       	ldi	r24, 0x0D	; 13
    1de0:	94 c0       	rjmp	.+296    	; 0x1f0a <mount_volume+0x672>
    1de2:	8d e0       	ldi	r24, 0x0D	; 13
    1de4:	92 c0       	rjmp	.+292    	; 0x1f0a <mount_volume+0x672>
    1de6:	8d e0       	ldi	r24, 0x0D	; 13
    1de8:	90 c0       	rjmp	.+288    	; 0x1f0a <mount_volume+0x672>
    1dea:	8d e0       	ldi	r24, 0x0D	; 13
    1dec:	8e c0       	rjmp	.+284    	; 0x1f0a <mount_volume+0x672>
    1dee:	8d e0       	ldi	r24, 0x0D	; 13
    1df0:	8c c0       	rjmp	.+280    	; 0x1f0a <mount_volume+0x672>
    1df2:	8d e0       	ldi	r24, 0x0D	; 13
    1df4:	8a c0       	rjmp	.+276    	; 0x1f0a <mount_volume+0x672>
    1df6:	8d e0       	ldi	r24, 0x0D	; 13
    1df8:	88 c0       	rjmp	.+272    	; 0x1f0a <mount_volume+0x672>
    1dfa:	8d e0       	ldi	r24, 0x0D	; 13
    1dfc:	86 c0       	rjmp	.+268    	; 0x1f0a <mount_volume+0x672>
    1dfe:	8d e0       	ldi	r24, 0x0D	; 13
    1e00:	84 c0       	rjmp	.+264    	; 0x1f0a <mount_volume+0x672>
    1e02:	8d e0       	ldi	r24, 0x0D	; 13
    1e04:	82 c0       	rjmp	.+260    	; 0x1f0a <mount_volume+0x672>
    1e06:	81 e0       	ldi	r24, 0x01	; 1
    1e08:	80 c0       	rjmp	.+256    	; 0x1f0a <mount_volume+0x672>
    1e0a:	8d e0       	ldi	r24, 0x0D	; 13
    1e0c:	7e c0       	rjmp	.+252    	; 0x1f0a <mount_volume+0x672>
    1e0e:	40 e0       	ldi	r20, 0x00	; 0
    1e10:	50 e0       	ldi	r21, 0x00	; 0
    1e12:	ba 01       	movw	r22, r20
    1e14:	c8 01       	movw	r24, r16
    1e16:	84 dc       	rcall	.-1784   	; 0x1720 <check_fs>
    1e18:	82 30       	cpi	r24, 0x02	; 2
    1e1a:	91 05       	cpc	r25, r1
    1e1c:	09 f0       	breq	.+2      	; 0x1e20 <mount_volume+0x588>
    1e1e:	d0 cd       	rjmp	.-1120   	; 0x19c0 <mount_volume+0x128>
    1e20:	97 cd       	rjmp	.-1234   	; 0x1950 <mount_volume+0xb8>
    1e22:	04 97       	sbiw	r24, 0x04	; 4
    1e24:	09 f0       	breq	.+2      	; 0x1e28 <mount_volume+0x590>
    1e26:	d3 cd       	rjmp	.-1114   	; 0x19ce <mount_volume+0x136>
    1e28:	ee cf       	rjmp	.-36     	; 0x1e06 <mount_volume+0x56e>
    1e2a:	8f ef       	ldi	r24, 0xFF	; 255
    1e2c:	9f ef       	ldi	r25, 0xFF	; 255
    1e2e:	dc 01       	movw	r26, r24
    1e30:	f8 01       	movw	r30, r16
    1e32:	87 87       	std	Z+15, r24	; 0x0f
    1e34:	90 8b       	std	Z+16, r25	; 0x10
    1e36:	a1 8b       	std	Z+17, r26	; 0x11
    1e38:	b2 8b       	std	Z+18, r27	; 0x12
    1e3a:	83 87       	std	Z+11, r24	; 0x0b
    1e3c:	94 87       	std	Z+12, r25	; 0x0c
    1e3e:	a5 87       	std	Z+13, r26	; 0x0d
    1e40:	b6 87       	std	Z+14, r27	; 0x0e
    1e42:	80 e8       	ldi	r24, 0x80	; 128
    1e44:	84 83       	std	Z+4, r24	; 0x04
    1e46:	a4 cf       	rjmp	.-184    	; 0x1d90 <mount_volume+0x4f8>
    1e48:	ff ef       	ldi	r31, 0xFF	; 255
    1e4a:	cf 0e       	add	r12, r31
    1e4c:	f1 e0       	ldi	r31, 0x01	; 1
    1e4e:	df 1e       	adc	r13, r31
    1e50:	e1 1c       	adc	r14, r1
    1e52:	f1 1c       	adc	r15, r1
    1e54:	0b 2e       	mov	r0, r27
    1e56:	b9 e0       	ldi	r27, 0x09	; 9
    1e58:	f6 94       	lsr	r15
    1e5a:	e7 94       	ror	r14
    1e5c:	d7 94       	ror	r13
    1e5e:	c7 94       	ror	r12
    1e60:	ba 95       	dec	r27
    1e62:	d1 f7       	brne	.-12     	; 0x1e58 <mount_volume+0x5c0>
    1e64:	b0 2d       	mov	r27, r0
    1e66:	29 89       	ldd	r18, Y+17	; 0x11
    1e68:	3a 89       	ldd	r19, Y+18	; 0x12
    1e6a:	4b 89       	ldd	r20, Y+19	; 0x13
    1e6c:	5c 89       	ldd	r21, Y+20	; 0x14
    1e6e:	2c 15       	cp	r18, r12
    1e70:	3d 05       	cpc	r19, r13
    1e72:	4e 05       	cpc	r20, r14
    1e74:	5f 05       	cpc	r21, r15
    1e76:	48 f2       	brcs	.-110    	; 0x1e0a <mount_volume+0x572>
    1e78:	d8 cf       	rjmp	.-80     	; 0x1e2a <mount_volume+0x592>
    1e7a:	8f ef       	ldi	r24, 0xFF	; 255
    1e7c:	9f ef       	ldi	r25, 0xFF	; 255
    1e7e:	dc 01       	movw	r26, r24
    1e80:	f8 01       	movw	r30, r16
    1e82:	87 87       	std	Z+15, r24	; 0x0f
    1e84:	90 8b       	std	Z+16, r25	; 0x10
    1e86:	a1 8b       	std	Z+17, r26	; 0x11
    1e88:	b2 8b       	std	Z+18, r27	; 0x12
    1e8a:	83 87       	std	Z+11, r24	; 0x0b
    1e8c:	94 87       	std	Z+12, r25	; 0x0c
    1e8e:	a5 87       	std	Z+13, r26	; 0x0d
    1e90:	b6 87       	std	Z+14, r27	; 0x0e
    1e92:	80 e8       	ldi	r24, 0x80	; 128
    1e94:	84 83       	std	Z+4, r24	; 0x04
    1e96:	e0 5a       	subi	r30, 0xA0	; 160
    1e98:	ff 4f       	sbci	r31, 0xFF	; 255
    1e9a:	80 81       	ld	r24, Z
    1e9c:	90 e0       	ldi	r25, 0x00	; 0
    1e9e:	98 2f       	mov	r25, r24
    1ea0:	88 27       	eor	r24, r24
    1ea2:	31 97       	sbiw	r30, 0x01	; 1
    1ea4:	20 81       	ld	r18, Z
    1ea6:	82 2b       	or	r24, r18
    1ea8:	01 97       	sbiw	r24, 0x01	; 1
    1eaa:	09 f0       	breq	.+2      	; 0x1eae <mount_volume+0x616>
    1eac:	71 cf       	rjmp	.-286    	; 0x1d90 <mount_volume+0x4f8>
    1eae:	2c cf       	rjmp	.-424    	; 0x1d08 <mount_volume+0x470>
    1eb0:	69 01       	movw	r12, r18
    1eb2:	7a 01       	movw	r14, r20
    1eb4:	f2 e0       	ldi	r31, 0x02	; 2
    1eb6:	cf 0e       	add	r12, r31
    1eb8:	d1 1c       	adc	r13, r1
    1eba:	e1 1c       	adc	r14, r1
    1ebc:	f1 1c       	adc	r15, r1
    1ebe:	d8 01       	movw	r26, r16
    1ec0:	53 96       	adiw	r26, 0x13	; 19
    1ec2:	cd 92       	st	X+, r12
    1ec4:	dd 92       	st	X+, r13
    1ec6:	ed 92       	st	X+, r14
    1ec8:	fc 92       	st	X, r15
    1eca:	56 97       	sbiw	r26, 0x16	; 22
    1ecc:	f8 01       	movw	r30, r16
    1ece:	83 8e       	std	Z+27, r8	; 0x1b
    1ed0:	94 8e       	std	Z+28, r9	; 0x1c
    1ed2:	a5 8e       	std	Z+29, r10	; 0x1d
    1ed4:	b6 8e       	std	Z+30, r11	; 0x1e
    1ed6:	8f 89       	ldd	r24, Y+23	; 0x17
    1ed8:	98 8d       	ldd	r25, Y+24	; 0x18
    1eda:	a9 8d       	ldd	r26, Y+25	; 0x19
    1edc:	ba 8d       	ldd	r27, Y+26	; 0x1a
    1ede:	88 0d       	add	r24, r8
    1ee0:	99 1d       	adc	r25, r9
    1ee2:	aa 1d       	adc	r26, r10
    1ee4:	bb 1d       	adc	r27, r11
    1ee6:	87 8f       	std	Z+31, r24	; 0x1f
    1ee8:	90 a3       	std	Z+32, r25	; 0x20
    1eea:	a1 a3       	std	Z+33, r26	; 0x21
    1eec:	b2 a3       	std	Z+34, r27	; 0x22
    1eee:	b5 01       	movw	r22, r10
    1ef0:	a4 01       	movw	r20, r8
    1ef2:	44 0d       	add	r20, r4
    1ef4:	55 1d       	adc	r21, r5
    1ef6:	66 1d       	adc	r22, r6
    1ef8:	77 1d       	adc	r23, r7
    1efa:	47 a3       	std	Z+39, r20	; 0x27
    1efc:	50 a7       	std	Z+40, r21	; 0x28
    1efe:	61 a7       	std	Z+41, r22	; 0x29
    1f00:	72 a7       	std	Z+42, r23	; 0x2a
    1f02:	22 24       	eor	r2, r2
    1f04:	23 94       	inc	r2
    1f06:	31 2c       	mov	r3, r1
    1f08:	cc ce       	rjmp	.-616    	; 0x1ca2 <mount_volume+0x40a>
    1f0a:	6e 96       	adiw	r28, 0x1e	; 30
    1f0c:	0f b6       	in	r0, 0x3f	; 63
    1f0e:	f8 94       	cli
    1f10:	de bf       	out	0x3e, r29	; 62
    1f12:	0f be       	out	0x3f, r0	; 63
    1f14:	cd bf       	out	0x3d, r28	; 61
    1f16:	df 91       	pop	r29
    1f18:	cf 91       	pop	r28
    1f1a:	1f 91       	pop	r17
    1f1c:	0f 91       	pop	r16
    1f1e:	ff 90       	pop	r15
    1f20:	ef 90       	pop	r14
    1f22:	df 90       	pop	r13
    1f24:	cf 90       	pop	r12
    1f26:	bf 90       	pop	r11
    1f28:	af 90       	pop	r10
    1f2a:	9f 90       	pop	r9
    1f2c:	8f 90       	pop	r8
    1f2e:	7f 90       	pop	r7
    1f30:	6f 90       	pop	r6
    1f32:	5f 90       	pop	r5
    1f34:	4f 90       	pop	r4
    1f36:	3f 90       	pop	r3
    1f38:	2f 90       	pop	r2
    1f3a:	08 95       	ret

00001f3c <ld_clust>:
    1f3c:	0f 93       	push	r16
    1f3e:	1f 93       	push	r17
    1f40:	dc 01       	movw	r26, r24
    1f42:	fb 01       	movw	r30, r22
    1f44:	93 8d       	ldd	r25, Z+27	; 0x1b
    1f46:	69 2f       	mov	r22, r25
    1f48:	70 e0       	ldi	r23, 0x00	; 0
    1f4a:	76 2f       	mov	r23, r22
    1f4c:	66 27       	eor	r22, r22
    1f4e:	82 8d       	ldd	r24, Z+26	; 0x1a
    1f50:	68 2b       	or	r22, r24
    1f52:	80 e0       	ldi	r24, 0x00	; 0
    1f54:	90 e0       	ldi	r25, 0x00	; 0
    1f56:	2c 91       	ld	r18, X
    1f58:	23 30       	cpi	r18, 0x03	; 3
    1f5a:	79 f4       	brne	.+30     	; 0x1f7a <ld_clust+0x3e>
    1f5c:	05 89       	ldd	r16, Z+21	; 0x15
    1f5e:	10 e0       	ldi	r17, 0x00	; 0
    1f60:	10 2f       	mov	r17, r16
    1f62:	00 27       	eor	r16, r16
    1f64:	24 89       	ldd	r18, Z+20	; 0x14
    1f66:	02 2b       	or	r16, r18
    1f68:	20 e0       	ldi	r18, 0x00	; 0
    1f6a:	30 e0       	ldi	r19, 0x00	; 0
    1f6c:	98 01       	movw	r18, r16
    1f6e:	11 27       	eor	r17, r17
    1f70:	00 27       	eor	r16, r16
    1f72:	60 2b       	or	r22, r16
    1f74:	71 2b       	or	r23, r17
    1f76:	82 2b       	or	r24, r18
    1f78:	93 2b       	or	r25, r19
    1f7a:	1f 91       	pop	r17
    1f7c:	0f 91       	pop	r16
    1f7e:	08 95       	ret

00001f80 <follow_path>:
    1f80:	2f 92       	push	r2
    1f82:	3f 92       	push	r3
    1f84:	4f 92       	push	r4
    1f86:	5f 92       	push	r5
    1f88:	6f 92       	push	r6
    1f8a:	7f 92       	push	r7
    1f8c:	8f 92       	push	r8
    1f8e:	9f 92       	push	r9
    1f90:	af 92       	push	r10
    1f92:	bf 92       	push	r11
    1f94:	cf 92       	push	r12
    1f96:	df 92       	push	r13
    1f98:	ef 92       	push	r14
    1f9a:	ff 92       	push	r15
    1f9c:	0f 93       	push	r16
    1f9e:	1f 93       	push	r17
    1fa0:	cf 93       	push	r28
    1fa2:	df 93       	push	r29
    1fa4:	00 d0       	rcall	.+0      	; 0x1fa6 <follow_path+0x26>
    1fa6:	1f 92       	push	r1
    1fa8:	cd b7       	in	r28, 0x3d	; 61
    1faa:	de b7       	in	r29, 0x3e	; 62
    1fac:	9c 83       	std	Y+4, r25	; 0x04
    1fae:	8b 83       	std	Y+3, r24	; 0x03
    1fb0:	dc 01       	movw	r26, r24
    1fb2:	2d 90       	ld	r2, X+
    1fb4:	3c 90       	ld	r3, X
    1fb6:	e6 2f       	mov	r30, r22
    1fb8:	f7 2f       	mov	r31, r23
    1fba:	4f 01       	movw	r8, r30
    1fbc:	81 91       	ld	r24, Z+
    1fbe:	8f 32       	cpi	r24, 0x2F	; 47
    1fc0:	e1 f3       	breq	.-8      	; 0x1fba <follow_path+0x3a>
    1fc2:	8c 35       	cpi	r24, 0x5C	; 92
    1fc4:	d1 f3       	breq	.-12     	; 0x1fba <follow_path+0x3a>
    1fc6:	eb 81       	ldd	r30, Y+3	; 0x03
    1fc8:	fc 81       	ldd	r31, Y+4	; 0x04
    1fca:	df 01       	movw	r26, r30
    1fcc:	16 82       	std	Z+6, r1	; 0x06
    1fce:	17 82       	std	Z+7, r1	; 0x07
    1fd0:	10 86       	std	Z+8, r1	; 0x08
    1fd2:	11 86       	std	Z+9, r1	; 0x09
    1fd4:	f4 01       	movw	r30, r8
    1fd6:	80 81       	ld	r24, Z
    1fd8:	80 32       	cpi	r24, 0x20	; 32
    1fda:	58 f4       	brcc	.+22     	; 0x1ff2 <follow_path+0x72>
    1fdc:	80 e8       	ldi	r24, 0x80	; 128
    1fde:	97 96       	adiw	r26, 0x27	; 39
    1fe0:	8c 93       	st	X, r24
    1fe2:	97 97       	sbiw	r26, 0x27	; 39
    1fe4:	40 e0       	ldi	r20, 0x00	; 0
    1fe6:	50 e0       	ldi	r21, 0x00	; 0
    1fe8:	ba 01       	movw	r22, r20
    1fea:	cd 01       	movw	r24, r26
    1fec:	0e 94 5e 07 	call	0xebc	; 0xebc <dir_sdi>
    1ff0:	0f c1       	rjmp	.+542    	; 0x2210 <__stack+0x11>
    1ff2:	4b 80       	ldd	r4, Y+3	; 0x03
    1ff4:	5c 80       	ldd	r5, Y+4	; 0x04
    1ff6:	fc e1       	ldi	r31, 0x1C	; 28
    1ff8:	4f 0e       	add	r4, r31
    1ffa:	51 1c       	adc	r5, r1
    1ffc:	eb 80       	ldd	r14, Y+3	; 0x03
    1ffe:	fc 80       	ldd	r15, Y+4	; 0x04
    2000:	27 e2       	ldi	r18, 0x27	; 39
    2002:	e2 0e       	add	r14, r18
    2004:	f1 1c       	adc	r15, r1
    2006:	10 e2       	ldi	r17, 0x20	; 32
    2008:	a1 2c       	mov	r10, r1
    200a:	b1 2c       	mov	r11, r1
    200c:	38 e0       	ldi	r19, 0x08	; 8
    200e:	39 83       	std	Y+1, r19	; 0x01
    2010:	1a 82       	std	Y+2, r1	; 0x02
    2012:	31 01       	movw	r6, r2
    2014:	4f e2       	ldi	r20, 0x2F	; 47
    2016:	64 0e       	add	r6, r20
    2018:	71 1c       	adc	r7, r1
    201a:	f2 01       	movw	r30, r4
    201c:	11 93       	st	Z+, r17
    201e:	ee 15       	cp	r30, r14
    2020:	ff 05       	cpc	r31, r15
    2022:	e1 f7       	brne	.-8      	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
    2024:	f4 01       	movw	r30, r8
    2026:	ca 2c       	mov	r12, r10
    2028:	db 2c       	mov	r13, r11
    202a:	20 e0       	ldi	r18, 0x00	; 0
    202c:	30 e0       	ldi	r19, 0x00	; 0
    202e:	68 e0       	ldi	r22, 0x08	; 8
    2030:	70 e0       	ldi	r23, 0x00	; 0
    2032:	2f 5f       	subi	r18, 0xFF	; 255
    2034:	3f 4f       	sbci	r19, 0xFF	; 255
    2036:	01 91       	ld	r16, Z+
    2038:	01 32       	cpi	r16, 0x21	; 33
    203a:	a8 f1       	brcs	.+106    	; 0x20a6 <__DATA_REGION_LENGTH__+0xa6>
    203c:	0f 32       	cpi	r16, 0x2F	; 47
    203e:	11 f0       	breq	.+4      	; 0x2044 <__DATA_REGION_LENGTH__+0x44>
    2040:	0c 35       	cpi	r16, 0x5C	; 92
    2042:	61 f4       	brne	.+24     	; 0x205c <__DATA_REGION_LENGTH__+0x5c>
    2044:	f4 01       	movw	r30, r8
    2046:	e2 0f       	add	r30, r18
    2048:	f3 1f       	adc	r31, r19
    204a:	02 c0       	rjmp	.+4      	; 0x2050 <__DATA_REGION_LENGTH__+0x50>
    204c:	2f 5f       	subi	r18, 0xFF	; 255
    204e:	3f 4f       	sbci	r19, 0xFF	; 255
    2050:	81 91       	ld	r24, Z+
    2052:	8f 32       	cpi	r24, 0x2F	; 47
    2054:	d9 f3       	breq	.-10     	; 0x204c <__DATA_REGION_LENGTH__+0x4c>
    2056:	8c 35       	cpi	r24, 0x5C	; 92
    2058:	c9 f3       	breq	.-14     	; 0x204c <__DATA_REGION_LENGTH__+0x4c>
    205a:	25 c0       	rjmp	.+74     	; 0x20a6 <__DATA_REGION_LENGTH__+0xa6>
    205c:	0e 32       	cpi	r16, 0x2E	; 46
    205e:	09 f4       	brne	.+2      	; 0x2062 <__DATA_REGION_LENGTH__+0x62>
    2060:	cf c0       	rjmp	.+414    	; 0x2200 <__stack+0x1>
    2062:	c6 16       	cp	r12, r22
    2064:	d7 06       	cpc	r13, r23
    2066:	08 f0       	brcs	.+2      	; 0x206a <__DATA_REGION_LENGTH__+0x6a>
    2068:	94 c0       	rjmp	.+296    	; 0x2192 <__DATA_REGION_LENGTH__+0x192>
    206a:	00 23       	and	r16, r16
    206c:	0c f0       	brlt	.+2      	; 0x2070 <__DATA_REGION_LENGTH__+0x70>
    206e:	9d c0       	rjmp	.+314    	; 0x21aa <__DATA_REGION_LENGTH__+0x1aa>
    2070:	a0 2f       	mov	r26, r16
    2072:	af 77       	andi	r26, 0x7F	; 127
    2074:	b0 e0       	ldi	r27, 0x00	; 0
    2076:	af 5b       	subi	r26, 0xBF	; 191
    2078:	bd 4f       	sbci	r27, 0xFD	; 253
    207a:	0c 91       	ld	r16, X
    207c:	96 c0       	rjmp	.+300    	; 0x21aa <__DATA_REGION_LENGTH__+0x1aa>
    207e:	8d 91       	ld	r24, X+
    2080:	88 23       	and	r24, r24
    2082:	09 f4       	brne	.+2      	; 0x2086 <__DATA_REGION_LENGTH__+0x86>
    2084:	9a c0       	rjmp	.+308    	; 0x21ba <__DATA_REGION_LENGTH__+0x1ba>
    2086:	90 e0       	ldi	r25, 0x00	; 0
    2088:	48 17       	cp	r20, r24
    208a:	59 07       	cpc	r21, r25
    208c:	c1 f7       	brne	.-16     	; 0x207e <__DATA_REGION_LENGTH__+0x7e>
    208e:	86 e0       	ldi	r24, 0x06	; 6
    2090:	bf c0       	rjmp	.+382    	; 0x2210 <__stack+0x11>
    2092:	00 52       	subi	r16, 0x20	; 32
    2094:	d2 01       	movw	r26, r4
    2096:	ac 0d       	add	r26, r12
    2098:	bd 1d       	adc	r27, r13
    209a:	0c 93       	st	X, r16
    209c:	a6 01       	movw	r20, r12
    209e:	4f 5f       	subi	r20, 0xFF	; 255
    20a0:	5f 4f       	sbci	r21, 0xFF	; 255
    20a2:	6a 01       	movw	r12, r20
    20a4:	c6 cf       	rjmp	.-116    	; 0x2032 <__DATA_REGION_LENGTH__+0x32>
    20a6:	82 0e       	add	r8, r18
    20a8:	93 1e       	adc	r9, r19
    20aa:	cd 28       	or	r12, r13
    20ac:	09 f4       	brne	.+2      	; 0x20b0 <__DATA_REGION_LENGTH__+0xb0>
    20ae:	73 c0       	rjmp	.+230    	; 0x2196 <__DATA_REGION_LENGTH__+0x196>
    20b0:	ab 81       	ldd	r26, Y+3	; 0x03
    20b2:	bc 81       	ldd	r27, Y+4	; 0x04
    20b4:	5c 96       	adiw	r26, 0x1c	; 28
    20b6:	8c 91       	ld	r24, X
    20b8:	5c 97       	sbiw	r26, 0x1c	; 28
    20ba:	85 3e       	cpi	r24, 0xE5	; 229
    20bc:	19 f4       	brne	.+6      	; 0x20c4 <__DATA_REGION_LENGTH__+0xc4>
    20be:	e5 e0       	ldi	r30, 0x05	; 5
    20c0:	5c 96       	adiw	r26, 0x1c	; 28
    20c2:	ec 93       	st	X, r30
    20c4:	01 32       	cpi	r16, 0x21	; 33
    20c6:	10 f0       	brcs	.+4      	; 0x20cc <__DATA_REGION_LENGTH__+0xcc>
    20c8:	80 e0       	ldi	r24, 0x00	; 0
    20ca:	01 c0       	rjmp	.+2      	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
    20cc:	84 e0       	ldi	r24, 0x04	; 4
    20ce:	ab 81       	ldd	r26, Y+3	; 0x03
    20d0:	bc 81       	ldd	r27, Y+4	; 0x04
    20d2:	97 96       	adiw	r26, 0x27	; 39
    20d4:	8c 93       	st	X, r24
    20d6:	97 97       	sbiw	r26, 0x27	; 39
    20d8:	cd 90       	ld	r12, X+
    20da:	dc 90       	ld	r13, X
    20dc:	11 97       	sbiw	r26, 0x01	; 1
    20de:	40 e0       	ldi	r20, 0x00	; 0
    20e0:	50 e0       	ldi	r21, 0x00	; 0
    20e2:	ba 01       	movw	r22, r20
    20e4:	cd 01       	movw	r24, r26
    20e6:	0e 94 5e 07 	call	0xebc	; 0xebc <dir_sdi>
    20ea:	81 11       	cpse	r24, r1
    20ec:	6c c0       	rjmp	.+216    	; 0x21c6 <__DATA_REGION_LENGTH__+0x1c6>
    20ee:	ab 81       	ldd	r26, Y+3	; 0x03
    20f0:	bc 81       	ldd	r27, Y+4	; 0x04
    20f2:	56 96       	adiw	r26, 0x16	; 22
    20f4:	4d 91       	ld	r20, X+
    20f6:	5d 91       	ld	r21, X+
    20f8:	6d 91       	ld	r22, X+
    20fa:	7c 91       	ld	r23, X
    20fc:	59 97       	sbiw	r26, 0x19	; 25
    20fe:	c6 01       	movw	r24, r12
    2100:	0e 94 51 04 	call	0x8a2	; 0x8a2 <move_window>
    2104:	81 11       	cpse	r24, r1
    2106:	60 c0       	rjmp	.+192    	; 0x21c8 <__DATA_REGION_LENGTH__+0x1c8>
    2108:	eb 81       	ldd	r30, Y+3	; 0x03
    210a:	fc 81       	ldd	r31, Y+4	; 0x04
    210c:	42 8d       	ldd	r20, Z+26	; 0x1a
    210e:	53 8d       	ldd	r21, Z+27	; 0x1b
    2110:	da 01       	movw	r26, r20
    2112:	9c 91       	ld	r25, X
    2114:	99 23       	and	r25, r25
    2116:	11 f1       	breq	.+68     	; 0x215c <__DATA_REGION_LENGTH__+0x15c>
    2118:	1b 96       	adiw	r26, 0x0b	; 11
    211a:	6c 91       	ld	r22, X
    211c:	1b 97       	sbiw	r26, 0x0b	; 11
    211e:	96 2f       	mov	r25, r22
    2120:	9f 73       	andi	r25, 0x3F	; 63
    2122:	94 83       	std	Z+4, r25	; 0x04
    2124:	1b 96       	adiw	r26, 0x0b	; 11
    2126:	9c 91       	ld	r25, X
    2128:	93 ff       	sbrs	r25, 3
    212a:	5b c0       	rjmp	.+182    	; 0x21e2 <__DATA_REGION_LENGTH__+0x1e2>
    212c:	0f c0       	rjmp	.+30     	; 0x214c <__DATA_REGION_LENGTH__+0x14c>
    212e:	21 91       	ld	r18, Z+
    2130:	9d 91       	ld	r25, X+
    2132:	30 e0       	ldi	r19, 0x00	; 0
    2134:	29 1b       	sub	r18, r25
    2136:	31 09       	sbc	r19, r1
    2138:	4e 17       	cp	r20, r30
    213a:	5f 07       	cpc	r21, r31
    213c:	19 f0       	breq	.+6      	; 0x2144 <__DATA_REGION_LENGTH__+0x144>
    213e:	23 2b       	or	r18, r19
    2140:	b1 f3       	breq	.-20     	; 0x212e <__DATA_REGION_LENGTH__+0x12e>
    2142:	04 c0       	rjmp	.+8      	; 0x214c <__DATA_REGION_LENGTH__+0x14c>
    2144:	87 2f       	mov	r24, r23
    2146:	23 2b       	or	r18, r19
    2148:	09 f4       	brne	.+2      	; 0x214c <__DATA_REGION_LENGTH__+0x14c>
    214a:	45 c0       	rjmp	.+138    	; 0x21d6 <__DATA_REGION_LENGTH__+0x1d6>
    214c:	6a 2d       	mov	r22, r10
    214e:	7b 2d       	mov	r23, r11
    2150:	8b 81       	ldd	r24, Y+3	; 0x03
    2152:	9c 81       	ldd	r25, Y+4	; 0x04
    2154:	8f d9       	rcall	.-3298   	; 0x1474 <dir_next>
    2156:	88 23       	and	r24, r24
    2158:	51 f2       	breq	.-108    	; 0x20ee <__DATA_REGION_LENGTH__+0xee>
    215a:	36 c0       	rjmp	.+108    	; 0x21c8 <__DATA_REGION_LENGTH__+0x1c8>
    215c:	eb 81       	ldd	r30, Y+3	; 0x03
    215e:	fc 81       	ldd	r31, Y+4	; 0x04
    2160:	97 a1       	ldd	r25, Z+39	; 0x27
    2162:	92 fd       	sbrc	r25, 2
    2164:	1a c0       	rjmp	.+52     	; 0x219a <__DATA_REGION_LENGTH__+0x19a>
    2166:	85 e0       	ldi	r24, 0x05	; 5
    2168:	53 c0       	rjmp	.+166    	; 0x2210 <__stack+0x11>
    216a:	64 ff       	sbrs	r22, 4
    216c:	18 c0       	rjmp	.+48     	; 0x219e <__DATA_REGION_LENGTH__+0x19e>
    216e:	ab 81       	ldd	r26, Y+3	; 0x03
    2170:	bc 81       	ldd	r27, Y+4	; 0x04
    2172:	1e 96       	adiw	r26, 0x0e	; 14
    2174:	6d 91       	ld	r22, X+
    2176:	7c 91       	ld	r23, X
    2178:	1f 97       	sbiw	r26, 0x0f	; 15
    217a:	71 70       	andi	r23, 0x01	; 1
    217c:	66 0d       	add	r22, r6
    217e:	77 1d       	adc	r23, r7
    2180:	c1 01       	movw	r24, r2
    2182:	dc de       	rcall	.-584    	; 0x1f3c <ld_clust>
    2184:	eb 81       	ldd	r30, Y+3	; 0x03
    2186:	fc 81       	ldd	r31, Y+4	; 0x04
    2188:	66 83       	std	Z+6, r22	; 0x06
    218a:	77 83       	std	Z+7, r23	; 0x07
    218c:	80 87       	std	Z+8, r24	; 0x08
    218e:	91 87       	std	Z+9, r25	; 0x09
    2190:	44 cf       	rjmp	.-376    	; 0x201a <__DATA_REGION_LENGTH__+0x1a>
    2192:	86 e0       	ldi	r24, 0x06	; 6
    2194:	3d c0       	rjmp	.+122    	; 0x2210 <__stack+0x11>
    2196:	86 e0       	ldi	r24, 0x06	; 6
    2198:	3b c0       	rjmp	.+118    	; 0x2210 <__stack+0x11>
    219a:	84 e0       	ldi	r24, 0x04	; 4
    219c:	39 c0       	rjmp	.+114    	; 0x2210 <__stack+0x11>
    219e:	85 e0       	ldi	r24, 0x05	; 5
    21a0:	37 c0       	rjmp	.+110    	; 0x2210 <__stack+0x11>
    21a2:	86 e0       	ldi	r24, 0x06	; 6
    21a4:	35 c0       	rjmp	.+106    	; 0x2210 <__stack+0x11>
    21a6:	86 e0       	ldi	r24, 0x06	; 6
    21a8:	33 c0       	rjmp	.+102    	; 0x2210 <__stack+0x11>
    21aa:	40 2f       	mov	r20, r16
    21ac:	50 e0       	ldi	r21, 0x00	; 0
    21ae:	42 32       	cpi	r20, 0x22	; 34
    21b0:	51 05       	cpc	r21, r1
    21b2:	b9 f3       	breq	.-18     	; 0x21a2 <__DATA_REGION_LENGTH__+0x1a2>
    21b4:	a3 e3       	ldi	r26, 0x33	; 51
    21b6:	b2 e0       	ldi	r27, 0x02	; 2
    21b8:	62 cf       	rjmp	.-316    	; 0x207e <__DATA_REGION_LENGTH__+0x7e>
    21ba:	8f e9       	ldi	r24, 0x9F	; 159
    21bc:	80 0f       	add	r24, r16
    21be:	8a 31       	cpi	r24, 0x1A	; 26
    21c0:	08 f4       	brcc	.+2      	; 0x21c4 <__DATA_REGION_LENGTH__+0x1c4>
    21c2:	67 cf       	rjmp	.-306    	; 0x2092 <__DATA_REGION_LENGTH__+0x92>
    21c4:	67 cf       	rjmp	.-306    	; 0x2094 <__DATA_REGION_LENGTH__+0x94>
    21c6:	00 c0       	rjmp	.+0      	; 0x21c8 <__DATA_REGION_LENGTH__+0x1c8>
    21c8:	ab 81       	ldd	r26, Y+3	; 0x03
    21ca:	bc 81       	ldd	r27, Y+4	; 0x04
    21cc:	97 96       	adiw	r26, 0x27	; 39
    21ce:	9c 91       	ld	r25, X
    21d0:	84 30       	cpi	r24, 0x04	; 4
    21d2:	f1 f4       	brne	.+60     	; 0x2210 <__stack+0x11>
    21d4:	c6 cf       	rjmp	.-116    	; 0x2162 <__DATA_REGION_LENGTH__+0x162>
    21d6:	eb 81       	ldd	r30, Y+3	; 0x03
    21d8:	fc 81       	ldd	r31, Y+4	; 0x04
    21da:	97 a1       	ldd	r25, Z+39	; 0x27
    21dc:	92 ff       	sbrs	r25, 2
    21de:	c5 cf       	rjmp	.-118    	; 0x216a <__DATA_REGION_LENGTH__+0x16a>
    21e0:	17 c0       	rjmp	.+46     	; 0x2210 <__stack+0x11>
    21e2:	fa 01       	movw	r30, r20
    21e4:	21 91       	ld	r18, Z+
    21e6:	30 e0       	ldi	r19, 0x00	; 0
    21e8:	ab 81       	ldd	r26, Y+3	; 0x03
    21ea:	bc 81       	ldd	r27, Y+4	; 0x04
    21ec:	5c 96       	adiw	r26, 0x1c	; 28
    21ee:	9c 91       	ld	r25, X
    21f0:	5c 97       	sbiw	r26, 0x1c	; 28
    21f2:	29 1b       	sub	r18, r25
    21f4:	31 09       	sbc	r19, r1
    21f6:	5d 96       	adiw	r26, 0x1d	; 29
    21f8:	45 5f       	subi	r20, 0xF5	; 245
    21fa:	5f 4f       	sbci	r21, 0xFF	; 255
    21fc:	78 2f       	mov	r23, r24
    21fe:	9f cf       	rjmp	.-194    	; 0x213e <__DATA_REGION_LENGTH__+0x13e>
    2200:	6b 30       	cpi	r22, 0x0B	; 11
    2202:	71 05       	cpc	r23, r1
    2204:	81 f2       	breq	.-96     	; 0x21a6 <__DATA_REGION_LENGTH__+0x1a6>
    2206:	c9 80       	ldd	r12, Y+1	; 0x01
    2208:	da 80       	ldd	r13, Y+2	; 0x02
    220a:	6b e0       	ldi	r22, 0x0B	; 11
    220c:	70 e0       	ldi	r23, 0x00	; 0
    220e:	11 cf       	rjmp	.-478    	; 0x2032 <__DATA_REGION_LENGTH__+0x32>
    2210:	0f 90       	pop	r0
    2212:	0f 90       	pop	r0
    2214:	0f 90       	pop	r0
    2216:	0f 90       	pop	r0
    2218:	df 91       	pop	r29
    221a:	cf 91       	pop	r28
    221c:	1f 91       	pop	r17
    221e:	0f 91       	pop	r16
    2220:	ff 90       	pop	r15
    2222:	ef 90       	pop	r14
    2224:	df 90       	pop	r13
    2226:	cf 90       	pop	r12
    2228:	bf 90       	pop	r11
    222a:	af 90       	pop	r10
    222c:	9f 90       	pop	r9
    222e:	8f 90       	pop	r8
    2230:	7f 90       	pop	r7
    2232:	6f 90       	pop	r6
    2234:	5f 90       	pop	r5
    2236:	4f 90       	pop	r4
    2238:	3f 90       	pop	r3
    223a:	2f 90       	pop	r2
    223c:	08 95       	ret

0000223e <f_mount>:
    223e:	1f 93       	push	r17
    2240:	cf 93       	push	r28
    2242:	df 93       	push	r29
    2244:	00 d0       	rcall	.+0      	; 0x2246 <f_mount+0x8>
    2246:	00 d0       	rcall	.+0      	; 0x2248 <f_mount+0xa>
    2248:	cd b7       	in	r28, 0x3d	; 61
    224a:	de b7       	in	r29, 0x3e	; 62
    224c:	9c 83       	std	Y+4, r25	; 0x04
    224e:	8b 83       	std	Y+3, r24	; 0x03
    2250:	7e 83       	std	Y+6, r23	; 0x06
    2252:	6d 83       	std	Y+5, r22	; 0x05
    2254:	14 2f       	mov	r17, r20
    2256:	7a 83       	std	Y+2, r23	; 0x02
    2258:	69 83       	std	Y+1, r22	; 0x01
    225a:	ce 01       	movw	r24, r28
    225c:	01 96       	adiw	r24, 0x01	; 1
    225e:	0e 94 97 03 	call	0x72e	; 0x72e <get_ldnumber>
    2262:	99 23       	and	r25, r25
    2264:	1c f1       	brlt	.+70     	; 0x22ac <f_mount+0x6e>
    2266:	fc 01       	movw	r30, r24
    2268:	ee 0f       	add	r30, r30
    226a:	ff 1f       	adc	r31, r31
    226c:	ec 59       	subi	r30, 0x9C	; 156
    226e:	fe 4e       	sbci	r31, 0xEE	; 238
    2270:	01 90       	ld	r0, Z+
    2272:	f0 81       	ld	r31, Z
    2274:	e0 2d       	mov	r30, r0
    2276:	30 97       	sbiw	r30, 0x00	; 0
    2278:	09 f0       	breq	.+2      	; 0x227c <f_mount+0x3e>
    227a:	10 82       	st	Z, r1
    227c:	eb 81       	ldd	r30, Y+3	; 0x03
    227e:	fc 81       	ldd	r31, Y+4	; 0x04
    2280:	30 97       	sbiw	r30, 0x00	; 0
    2282:	09 f0       	breq	.+2      	; 0x2286 <f_mount+0x48>
    2284:	10 82       	st	Z, r1
    2286:	88 0f       	add	r24, r24
    2288:	99 1f       	adc	r25, r25
    228a:	fc 01       	movw	r30, r24
    228c:	ec 59       	subi	r30, 0x9C	; 156
    228e:	fe 4e       	sbci	r31, 0xEE	; 238
    2290:	8b 81       	ldd	r24, Y+3	; 0x03
    2292:	9c 81       	ldd	r25, Y+4	; 0x04
    2294:	91 83       	std	Z+1, r25	; 0x01
    2296:	80 83       	st	Z, r24
    2298:	11 23       	and	r17, r17
    229a:	51 f0       	breq	.+20     	; 0x22b0 <f_mount+0x72>
    229c:	40 e0       	ldi	r20, 0x00	; 0
    229e:	be 01       	movw	r22, r28
    22a0:	6d 5f       	subi	r22, 0xFD	; 253
    22a2:	7f 4f       	sbci	r23, 0xFF	; 255
    22a4:	ce 01       	movw	r24, r28
    22a6:	05 96       	adiw	r24, 0x05	; 5
    22a8:	f7 da       	rcall	.-2578   	; 0x1898 <mount_volume>
    22aa:	03 c0       	rjmp	.+6      	; 0x22b2 <f_mount+0x74>
    22ac:	8b e0       	ldi	r24, 0x0B	; 11
    22ae:	01 c0       	rjmp	.+2      	; 0x22b2 <f_mount+0x74>
    22b0:	80 e0       	ldi	r24, 0x00	; 0
    22b2:	26 96       	adiw	r28, 0x06	; 6
    22b4:	0f b6       	in	r0, 0x3f	; 63
    22b6:	f8 94       	cli
    22b8:	de bf       	out	0x3e, r29	; 62
    22ba:	0f be       	out	0x3f, r0	; 63
    22bc:	cd bf       	out	0x3d, r28	; 61
    22be:	df 91       	pop	r29
    22c0:	cf 91       	pop	r28
    22c2:	1f 91       	pop	r17
    22c4:	08 95       	ret

000022c6 <f_open>:
    22c6:	2f 92       	push	r2
    22c8:	3f 92       	push	r3
    22ca:	4f 92       	push	r4
    22cc:	5f 92       	push	r5
    22ce:	6f 92       	push	r6
    22d0:	7f 92       	push	r7
    22d2:	8f 92       	push	r8
    22d4:	9f 92       	push	r9
    22d6:	af 92       	push	r10
    22d8:	bf 92       	push	r11
    22da:	cf 92       	push	r12
    22dc:	df 92       	push	r13
    22de:	ef 92       	push	r14
    22e0:	ff 92       	push	r15
    22e2:	0f 93       	push	r16
    22e4:	1f 93       	push	r17
    22e6:	cf 93       	push	r28
    22e8:	df 93       	push	r29
    22ea:	cd b7       	in	r28, 0x3d	; 61
    22ec:	de b7       	in	r29, 0x3e	; 62
    22ee:	ac 97       	sbiw	r28, 0x2c	; 44
    22f0:	0f b6       	in	r0, 0x3f	; 63
    22f2:	f8 94       	cli
    22f4:	de bf       	out	0x3e, r29	; 62
    22f6:	0f be       	out	0x3f, r0	; 63
    22f8:	cd bf       	out	0x3d, r28	; 61
    22fa:	7c a7       	std	Y+44, r23	; 0x2c
    22fc:	6b a7       	std	Y+43, r22	; 0x2b
    22fe:	00 97       	sbiw	r24, 0x00	; 0
    2300:	09 f4       	brne	.+2      	; 0x2304 <f_open+0x3e>
    2302:	38 c1       	rjmp	.+624    	; 0x2574 <f_open+0x2ae>
    2304:	14 2f       	mov	r17, r20
    2306:	7c 01       	movw	r14, r24
    2308:	84 2f       	mov	r24, r20
    230a:	8f 73       	andi	r24, 0x3F	; 63
    230c:	d8 2e       	mov	r13, r24
    230e:	48 2f       	mov	r20, r24
    2310:	be 01       	movw	r22, r28
    2312:	67 5d       	subi	r22, 0xD7	; 215
    2314:	7f 4f       	sbci	r23, 0xFF	; 255
    2316:	ce 01       	movw	r24, r28
    2318:	8b 96       	adiw	r24, 0x2b	; 43
    231a:	be da       	rcall	.-2692   	; 0x1898 <mount_volume>
    231c:	81 11       	cpse	r24, r1
    231e:	26 c1       	rjmp	.+588    	; 0x256c <f_open+0x2a6>
    2320:	89 a5       	ldd	r24, Y+41	; 0x29
    2322:	9a a5       	ldd	r25, Y+42	; 0x2a
    2324:	9a 83       	std	Y+2, r25	; 0x02
    2326:	89 83       	std	Y+1, r24	; 0x01
    2328:	6b a5       	ldd	r22, Y+43	; 0x2b
    232a:	7c a5       	ldd	r23, Y+44	; 0x2c
    232c:	ce 01       	movw	r24, r28
    232e:	01 96       	adiw	r24, 0x01	; 1
    2330:	27 de       	rcall	.-946    	; 0x1f80 <follow_path>
    2332:	81 11       	cpse	r24, r1
    2334:	21 c1       	rjmp	.+578    	; 0x2578 <f_open+0x2b2>
    2336:	88 a5       	ldd	r24, Y+40	; 0x28
    2338:	88 23       	and	r24, r24
    233a:	0c f0       	brlt	.+2      	; 0x233e <f_open+0x78>
    233c:	26 c1       	rjmp	.+588    	; 0x258a <f_open+0x2c4>
    233e:	20 c1       	rjmp	.+576    	; 0x2580 <f_open+0x2ba>
    2340:	84 30       	cpi	r24, 0x04	; 4
    2342:	09 f0       	breq	.+2      	; 0x2346 <f_open+0x80>
    2344:	4a c1       	rjmp	.+660    	; 0x25da <f_open+0x314>
    2346:	ce 01       	movw	r24, r28
    2348:	01 96       	adiw	r24, 0x01	; 1
    234a:	8f d9       	rcall	.-3298   	; 0x166a <dir_register>
    234c:	9d 2d       	mov	r25, r13
    234e:	98 60       	ori	r25, 0x08	; 8
    2350:	d9 2e       	mov	r13, r25
    2352:	88 23       	and	r24, r24
    2354:	39 f0       	breq	.+14     	; 0x2364 <f_open+0x9e>
    2356:	0a c1       	rjmp	.+532    	; 0x256c <f_open+0x2a6>
    2358:	8d 81       	ldd	r24, Y+5	; 0x05
    235a:	81 71       	andi	r24, 0x11	; 17
    235c:	09 f0       	breq	.+2      	; 0x2360 <f_open+0x9a>
    235e:	66 c1       	rjmp	.+716    	; 0x262c <f_open+0x366>
    2360:	12 fd       	sbrc	r17, 2
    2362:	66 c1       	rjmp	.+716    	; 0x2630 <f_open+0x36a>
    2364:	d3 fe       	sbrs	r13, 3
    2366:	5d c0       	rjmp	.+186    	; 0x2422 <f_open+0x15c>
    2368:	eb 8d       	ldd	r30, Y+27	; 0x1b
    236a:	fc 8d       	ldd	r31, Y+28	; 0x1c
    236c:	16 86       	std	Z+14, r1	; 0x0e
    236e:	17 86       	std	Z+15, r1	; 0x0f
    2370:	9f e6       	ldi	r25, 0x6F	; 111
    2372:	90 8b       	std	Z+16, r25	; 0x10
    2374:	82 e5       	ldi	r24, 0x52	; 82
    2376:	81 8b       	std	Z+17, r24	; 0x11
    2378:	eb 8d       	ldd	r30, Y+27	; 0x1b
    237a:	fc 8d       	ldd	r31, Y+28	; 0x1c
    237c:	16 8a       	std	Z+22, r1	; 0x16
    237e:	17 8a       	std	Z+23, r1	; 0x17
    2380:	90 8f       	std	Z+24, r25	; 0x18
    2382:	81 8f       	std	Z+25, r24	; 0x19
    2384:	ab 8c       	ldd	r10, Y+27	; 0x1b
    2386:	bc 8c       	ldd	r11, Y+28	; 0x1c
    2388:	09 a5       	ldd	r16, Y+41	; 0x29
    238a:	1a a5       	ldd	r17, Y+42	; 0x2a
    238c:	b5 01       	movw	r22, r10
    238e:	c8 01       	movw	r24, r16
    2390:	d5 dd       	rcall	.-1110   	; 0x1f3c <ld_clust>
    2392:	2b 01       	movw	r4, r22
    2394:	3c 01       	movw	r6, r24
    2396:	80 e2       	ldi	r24, 0x20	; 32
    2398:	f5 01       	movw	r30, r10
    239a:	83 87       	std	Z+11, r24	; 0x0b
    239c:	6b 8d       	ldd	r22, Y+27	; 0x1b
    239e:	7c 8d       	ldd	r23, Y+28	; 0x1c
    23a0:	20 e0       	ldi	r18, 0x00	; 0
    23a2:	30 e0       	ldi	r19, 0x00	; 0
    23a4:	a9 01       	movw	r20, r18
    23a6:	c8 01       	movw	r24, r16
    23a8:	0e 94 77 06 	call	0xcee	; 0xcee <st_clust>
    23ac:	eb 8d       	ldd	r30, Y+27	; 0x1b
    23ae:	fc 8d       	ldd	r31, Y+28	; 0x1c
    23b0:	14 8e       	std	Z+28, r1	; 0x1c
    23b2:	15 8e       	std	Z+29, r1	; 0x1d
    23b4:	16 8e       	std	Z+30, r1	; 0x1e
    23b6:	17 8e       	std	Z+31, r1	; 0x1f
    23b8:	e9 a5       	ldd	r30, Y+41	; 0x29
    23ba:	fa a5       	ldd	r31, Y+42	; 0x2a
    23bc:	81 e0       	ldi	r24, 0x01	; 1
    23be:	83 83       	std	Z+3, r24	; 0x03
    23c0:	41 14       	cp	r4, r1
    23c2:	51 04       	cpc	r5, r1
    23c4:	61 04       	cpc	r6, r1
    23c6:	71 04       	cpc	r7, r1
    23c8:	49 f1       	breq	.+82     	; 0x241c <f_open+0x156>
    23ca:	83 a4       	ldd	r8, Z+43	; 0x2b
    23cc:	94 a4       	ldd	r9, Z+44	; 0x2c
    23ce:	a5 a4       	ldd	r10, Z+45	; 0x2d
    23d0:	b6 a4       	ldd	r11, Z+46	; 0x2e
    23d2:	00 e0       	ldi	r16, 0x00	; 0
    23d4:	10 e0       	ldi	r17, 0x00	; 0
    23d6:	98 01       	movw	r18, r16
    23d8:	b3 01       	movw	r22, r6
    23da:	a2 01       	movw	r20, r4
    23dc:	ce 01       	movw	r24, r28
    23de:	01 96       	adiw	r24, 0x01	; 1
    23e0:	0e 94 a8 09 	call	0x1350	; 0x1350 <remove_chain>
    23e4:	81 11       	cpse	r24, r1
    23e6:	c2 c0       	rjmp	.+388    	; 0x256c <f_open+0x2a6>
    23e8:	b5 01       	movw	r22, r10
    23ea:	a4 01       	movw	r20, r8
    23ec:	89 a5       	ldd	r24, Y+41	; 0x29
    23ee:	9a a5       	ldd	r25, Y+42	; 0x2a
    23f0:	0e 94 51 04 	call	0x8a2	; 0x8a2 <move_window>
    23f4:	e9 a5       	ldd	r30, Y+41	; 0x29
    23f6:	fa a5       	ldd	r31, Y+42	; 0x2a
    23f8:	91 e0       	ldi	r25, 0x01	; 1
    23fa:	49 1a       	sub	r4, r25
    23fc:	51 08       	sbc	r5, r1
    23fe:	61 08       	sbc	r6, r1
    2400:	71 08       	sbc	r7, r1
    2402:	43 86       	std	Z+11, r4	; 0x0b
    2404:	54 86       	std	Z+12, r5	; 0x0c
    2406:	65 86       	std	Z+13, r6	; 0x0d
    2408:	76 86       	std	Z+14, r7	; 0x0e
    240a:	88 23       	and	r24, r24
    240c:	39 f0       	breq	.+14     	; 0x241c <f_open+0x156>
    240e:	ae c0       	rjmp	.+348    	; 0x256c <f_open+0x2a6>
    2410:	11 ff       	sbrs	r17, 1
    2412:	02 c0       	rjmp	.+4      	; 0x2418 <f_open+0x152>
    2414:	80 fd       	sbrc	r24, 0
    2416:	0e c1       	rjmp	.+540    	; 0x2634 <f_open+0x36e>
    2418:	13 ff       	sbrs	r17, 3
    241a:	03 c0       	rjmp	.+6      	; 0x2422 <f_open+0x15c>
    241c:	ed 2d       	mov	r30, r13
    241e:	e0 64       	ori	r30, 0x40	; 64
    2420:	de 2e       	mov	r13, r30
    2422:	e9 a5       	ldd	r30, Y+41	; 0x29
    2424:	fa a5       	ldd	r31, Y+42	; 0x2a
    2426:	83 a5       	ldd	r24, Z+43	; 0x2b
    2428:	94 a5       	ldd	r25, Z+44	; 0x2c
    242a:	a5 a5       	ldd	r26, Z+45	; 0x2d
    242c:	b6 a5       	ldd	r27, Z+46	; 0x2e
    242e:	f7 01       	movw	r30, r14
    2430:	84 8f       	std	Z+28, r24	; 0x1c
    2432:	95 8f       	std	Z+29, r25	; 0x1d
    2434:	a6 8f       	std	Z+30, r26	; 0x1e
    2436:	b7 8f       	std	Z+31, r27	; 0x1f
    2438:	8b 8d       	ldd	r24, Y+27	; 0x1b
    243a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    243c:	91 a3       	std	Z+33, r25	; 0x21
    243e:	80 a3       	std	Z+32, r24	; 0x20
    2440:	ab 8c       	ldd	r10, Y+27	; 0x1b
    2442:	bc 8c       	ldd	r11, Y+28	; 0x1c
    2444:	09 a5       	ldd	r16, Y+41	; 0x29
    2446:	1a a5       	ldd	r17, Y+42	; 0x2a
    2448:	b5 01       	movw	r22, r10
    244a:	c8 01       	movw	r24, r16
    244c:	77 dd       	rcall	.-1298   	; 0x1f3c <ld_clust>
    244e:	f7 01       	movw	r30, r14
    2450:	66 83       	std	Z+6, r22	; 0x06
    2452:	77 83       	std	Z+7, r23	; 0x07
    2454:	80 87       	std	Z+8, r24	; 0x08
    2456:	91 87       	std	Z+9, r25	; 0x09
    2458:	c5 01       	movw	r24, r10
    245a:	4c 96       	adiw	r24, 0x1c	; 28
    245c:	0e 94 46 03 	call	0x68c	; 0x68c <ld_dword>
    2460:	f7 01       	movw	r30, r14
    2462:	62 87       	std	Z+10, r22	; 0x0a
    2464:	73 87       	std	Z+11, r23	; 0x0b
    2466:	84 87       	std	Z+12, r24	; 0x0c
    2468:	95 87       	std	Z+13, r25	; 0x0d
    246a:	11 83       	std	Z+1, r17	; 0x01
    246c:	00 83       	st	Z, r16
    246e:	f8 01       	movw	r30, r16
    2470:	85 81       	ldd	r24, Z+5	; 0x05
    2472:	96 81       	ldd	r25, Z+6	; 0x06
    2474:	f7 01       	movw	r30, r14
    2476:	93 83       	std	Z+3, r25	; 0x03
    2478:	82 83       	std	Z+2, r24	; 0x02
    247a:	d6 86       	std	Z+14, r13	; 0x0e
    247c:	17 86       	std	Z+15, r1	; 0x0f
    247e:	10 8e       	std	Z+24, r1	; 0x18
    2480:	11 8e       	std	Z+25, r1	; 0x19
    2482:	12 8e       	std	Z+26, r1	; 0x1a
    2484:	13 8e       	std	Z+27, r1	; 0x1b
    2486:	10 8a       	std	Z+16, r1	; 0x10
    2488:	11 8a       	std	Z+17, r1	; 0x11
    248a:	12 8a       	std	Z+18, r1	; 0x12
    248c:	13 8a       	std	Z+19, r1	; 0x13
    248e:	17 01       	movw	r2, r14
    2490:	f2 e2       	ldi	r31, 0x22	; 34
    2492:	2f 0e       	add	r2, r31
    2494:	31 1c       	adc	r3, r1
    2496:	f1 01       	movw	r30, r2
    2498:	c7 01       	movw	r24, r14
    249a:	8e 5d       	subi	r24, 0xDE	; 222
    249c:	9d 4f       	sbci	r25, 0xFD	; 253
    249e:	11 92       	st	Z+, r1
    24a0:	e8 17       	cp	r30, r24
    24a2:	f9 07       	cpc	r31, r25
    24a4:	e1 f7       	brne	.-8      	; 0x249e <f_open+0x1d8>
    24a6:	d5 fe       	sbrs	r13, 5
    24a8:	91 c0       	rjmp	.+290    	; 0x25cc <f_open+0x306>
    24aa:	f7 01       	movw	r30, r14
    24ac:	42 84       	ldd	r4, Z+10	; 0x0a
    24ae:	53 84       	ldd	r5, Z+11	; 0x0b
    24b0:	64 84       	ldd	r6, Z+12	; 0x0c
    24b2:	75 84       	ldd	r7, Z+13	; 0x0d
    24b4:	41 14       	cp	r4, r1
    24b6:	51 04       	cpc	r5, r1
    24b8:	61 04       	cpc	r6, r1
    24ba:	71 04       	cpc	r7, r1
    24bc:	09 f4       	brne	.+2      	; 0x24c0 <f_open+0x1fa>
    24be:	86 c0       	rjmp	.+268    	; 0x25cc <f_open+0x306>
    24c0:	40 8a       	std	Z+16, r4	; 0x10
    24c2:	51 8a       	std	Z+17, r5	; 0x11
    24c4:	62 8a       	std	Z+18, r6	; 0x12
    24c6:	73 8a       	std	Z+19, r7	; 0x13
    24c8:	f8 01       	movw	r30, r16
    24ca:	81 85       	ldd	r24, Z+9	; 0x09
    24cc:	92 85       	ldd	r25, Z+10	; 0x0a
    24ce:	a0 e0       	ldi	r26, 0x00	; 0
    24d0:	b0 e0       	ldi	r27, 0x00	; 0
    24d2:	4c 01       	movw	r8, r24
    24d4:	5d 01       	movw	r10, r26
    24d6:	07 2e       	mov	r0, r23
    24d8:	79 e0       	ldi	r23, 0x09	; 9
    24da:	88 0c       	add	r8, r8
    24dc:	99 1c       	adc	r9, r9
    24de:	aa 1c       	adc	r10, r10
    24e0:	bb 1c       	adc	r11, r11
    24e2:	7a 95       	dec	r23
    24e4:	d1 f7       	brne	.-12     	; 0x24da <f_open+0x214>
    24e6:	70 2d       	mov	r23, r0
    24e8:	f7 01       	movw	r30, r14
    24ea:	46 81       	ldd	r20, Z+6	; 0x06
    24ec:	57 81       	ldd	r21, Z+7	; 0x07
    24ee:	60 85       	ldd	r22, Z+8	; 0x08
    24f0:	71 85       	ldd	r23, Z+9	; 0x09
    24f2:	84 14       	cp	r8, r4
    24f4:	95 04       	cpc	r9, r5
    24f6:	a6 04       	cpc	r10, r6
    24f8:	b7 04       	cpc	r11, r7
    24fa:	08 f0       	brcs	.+2      	; 0x24fe <f_open+0x238>
    24fc:	58 c0       	rjmp	.+176    	; 0x25ae <f_open+0x2e8>
    24fe:	c7 01       	movw	r24, r14
    2500:	0e 94 84 06 	call	0xd08	; 0xd08 <get_fat>
    2504:	ab 01       	movw	r20, r22
    2506:	bc 01       	movw	r22, r24
    2508:	42 30       	cpi	r20, 0x02	; 2
    250a:	51 05       	cpc	r21, r1
    250c:	61 05       	cpc	r22, r1
    250e:	71 05       	cpc	r23, r1
    2510:	08 f0       	brcs	.+2      	; 0x2514 <f_open+0x24e>
    2512:	76 c0       	rjmp	.+236    	; 0x2600 <f_open+0x33a>
    2514:	83 c0       	rjmp	.+262    	; 0x261c <f_open+0x356>
    2516:	c9 a4       	ldd	r12, Y+41	; 0x29
    2518:	da a4       	ldd	r13, Y+42	; 0x2a
    251a:	c6 01       	movw	r24, r12
    251c:	0e 94 6f 03 	call	0x6de	; 0x6de <clst2sect>
    2520:	61 15       	cp	r22, r1
    2522:	71 05       	cpc	r23, r1
    2524:	81 05       	cpc	r24, r1
    2526:	91 05       	cpc	r25, r1
    2528:	09 f4       	brne	.+2      	; 0x252c <f_open+0x266>
    252a:	52 c0       	rjmp	.+164    	; 0x25d0 <f_open+0x30a>
    252c:	93 01       	movw	r18, r6
    252e:	82 01       	movw	r16, r4
    2530:	0f 2e       	mov	r0, r31
    2532:	f9 e0       	ldi	r31, 0x09	; 9
    2534:	36 95       	lsr	r19
    2536:	27 95       	ror	r18
    2538:	17 95       	ror	r17
    253a:	07 95       	ror	r16
    253c:	fa 95       	dec	r31
    253e:	d1 f7       	brne	.-12     	; 0x2534 <f_open+0x26e>
    2540:	f0 2d       	mov	r31, r0
    2542:	a9 01       	movw	r20, r18
    2544:	98 01       	movw	r18, r16
    2546:	26 0f       	add	r18, r22
    2548:	37 1f       	adc	r19, r23
    254a:	48 1f       	adc	r20, r24
    254c:	59 1f       	adc	r21, r25
    254e:	f7 01       	movw	r30, r14
    2550:	20 8f       	std	Z+24, r18	; 0x18
    2552:	31 8f       	std	Z+25, r19	; 0x19
    2554:	42 8f       	std	Z+26, r20	; 0x1a
    2556:	53 8f       	std	Z+27, r21	; 0x1b
    2558:	01 e0       	ldi	r16, 0x01	; 1
    255a:	10 e0       	ldi	r17, 0x00	; 0
    255c:	b1 01       	movw	r22, r2
    255e:	f6 01       	movw	r30, r12
    2560:	81 81       	ldd	r24, Z+1	; 0x01
    2562:	0e 94 c6 02 	call	0x58c	; 0x58c <disk_read>
    2566:	81 11       	cpse	r24, r1
    2568:	35 c0       	rjmp	.+106    	; 0x25d4 <f_open+0x30e>
    256a:	30 c0       	rjmp	.+96     	; 0x25cc <f_open+0x306>
    256c:	f7 01       	movw	r30, r14
    256e:	11 82       	std	Z+1, r1	; 0x01
    2570:	10 82       	st	Z, r1
    2572:	64 c0       	rjmp	.+200    	; 0x263c <f_open+0x376>
    2574:	89 e0       	ldi	r24, 0x09	; 9
    2576:	62 c0       	rjmp	.+196    	; 0x263c <f_open+0x376>
    2578:	41 2f       	mov	r20, r17
    257a:	4c 71       	andi	r20, 0x1C	; 28
    257c:	59 f0       	breq	.+22     	; 0x2594 <f_open+0x2ce>
    257e:	e0 ce       	rjmp	.-576    	; 0x2340 <f_open+0x7a>
    2580:	41 2f       	mov	r20, r17
    2582:	4c 71       	andi	r20, 0x1C	; 28
    2584:	49 f5       	brne	.+82     	; 0x25d8 <f_open+0x312>
    2586:	86 e0       	ldi	r24, 0x06	; 6
    2588:	05 c0       	rjmp	.+10     	; 0x2594 <f_open+0x2ce>
    258a:	81 2f       	mov	r24, r17
    258c:	8c 71       	andi	r24, 0x1C	; 28
    258e:	09 f0       	breq	.+2      	; 0x2592 <f_open+0x2cc>
    2590:	e3 ce       	rjmp	.-570    	; 0x2358 <f_open+0x92>
    2592:	27 c0       	rjmp	.+78     	; 0x25e2 <f_open+0x31c>
    2594:	81 11       	cpse	r24, r1
    2596:	ea cf       	rjmp	.-44     	; 0x256c <f_open+0x2a6>
    2598:	53 cf       	rjmp	.-346    	; 0x2440 <f_open+0x17a>
    259a:	8f ef       	ldi	r24, 0xFF	; 255
    259c:	9f ef       	ldi	r25, 0xFF	; 255
    259e:	dc 01       	movw	r26, r24
    25a0:	f7 01       	movw	r30, r14
    25a2:	84 8b       	std	Z+20, r24	; 0x14
    25a4:	95 8b       	std	Z+21, r25	; 0x15
    25a6:	a6 8b       	std	Z+22, r26	; 0x16
    25a8:	b7 8b       	std	Z+23, r27	; 0x17
    25aa:	81 e0       	ldi	r24, 0x01	; 1
    25ac:	df cf       	rjmp	.-66     	; 0x256c <f_open+0x2a6>
    25ae:	f7 01       	movw	r30, r14
    25b0:	44 8b       	std	Z+20, r20	; 0x14
    25b2:	55 8b       	std	Z+21, r21	; 0x15
    25b4:	66 8b       	std	Z+22, r22	; 0x16
    25b6:	77 8b       	std	Z+23, r23	; 0x17
    25b8:	d3 01       	movw	r26, r6
    25ba:	c2 01       	movw	r24, r4
    25bc:	91 70       	andi	r25, 0x01	; 1
    25be:	aa 27       	eor	r26, r26
    25c0:	bb 27       	eor	r27, r27
    25c2:	89 2b       	or	r24, r25
    25c4:	8a 2b       	or	r24, r26
    25c6:	8b 2b       	or	r24, r27
    25c8:	09 f0       	breq	.+2      	; 0x25cc <f_open+0x306>
    25ca:	a5 cf       	rjmp	.-182    	; 0x2516 <f_open+0x250>
    25cc:	80 e0       	ldi	r24, 0x00	; 0
    25ce:	36 c0       	rjmp	.+108    	; 0x263c <f_open+0x376>
    25d0:	82 e0       	ldi	r24, 0x02	; 2
    25d2:	cc cf       	rjmp	.-104    	; 0x256c <f_open+0x2a6>
    25d4:	81 e0       	ldi	r24, 0x01	; 1
    25d6:	ca cf       	rjmp	.-108    	; 0x256c <f_open+0x2a6>
    25d8:	86 e0       	ldi	r24, 0x06	; 6
    25da:	fd 2d       	mov	r31, r13
    25dc:	f8 60       	ori	r31, 0x08	; 8
    25de:	df 2e       	mov	r13, r31
    25e0:	d9 cf       	rjmp	.-78     	; 0x2594 <f_open+0x2ce>
    25e2:	8d 81       	ldd	r24, Y+5	; 0x05
    25e4:	84 fd       	sbrc	r24, 4
    25e6:	28 c0       	rjmp	.+80     	; 0x2638 <f_open+0x372>
    25e8:	13 cf       	rjmp	.-474    	; 0x2410 <f_open+0x14a>
    25ea:	48 18       	sub	r4, r8
    25ec:	59 08       	sbc	r5, r9
    25ee:	6a 08       	sbc	r6, r10
    25f0:	7b 08       	sbc	r7, r11
    25f2:	84 14       	cp	r8, r4
    25f4:	95 04       	cpc	r9, r5
    25f6:	a6 04       	cpc	r10, r6
    25f8:	b7 04       	cpc	r11, r7
    25fa:	08 f4       	brcc	.+2      	; 0x25fe <f_open+0x338>
    25fc:	80 cf       	rjmp	.-256    	; 0x24fe <f_open+0x238>
    25fe:	d7 cf       	rjmp	.-82     	; 0x25ae <f_open+0x2e8>
    2600:	4f 3f       	cpi	r20, 0xFF	; 255
    2602:	8f ef       	ldi	r24, 0xFF	; 255
    2604:	58 07       	cpc	r21, r24
    2606:	68 07       	cpc	r22, r24
    2608:	78 07       	cpc	r23, r24
    260a:	79 f7       	brne	.-34     	; 0x25ea <f_open+0x324>
    260c:	c6 cf       	rjmp	.-116    	; 0x259a <f_open+0x2d4>
    260e:	f7 01       	movw	r30, r14
    2610:	44 8b       	std	Z+20, r20	; 0x14
    2612:	55 8b       	std	Z+21, r21	; 0x15
    2614:	66 8b       	std	Z+22, r22	; 0x16
    2616:	77 8b       	std	Z+23, r23	; 0x17
    2618:	82 e0       	ldi	r24, 0x02	; 2
    261a:	a8 cf       	rjmp	.-176    	; 0x256c <f_open+0x2a6>
    261c:	4f 3f       	cpi	r20, 0xFF	; 255
    261e:	ff ef       	ldi	r31, 0xFF	; 255
    2620:	5f 07       	cpc	r21, r31
    2622:	6f 07       	cpc	r22, r31
    2624:	7f 07       	cpc	r23, r31
    2626:	09 f4       	brne	.+2      	; 0x262a <f_open+0x364>
    2628:	b8 cf       	rjmp	.-144    	; 0x259a <f_open+0x2d4>
    262a:	f1 cf       	rjmp	.-30     	; 0x260e <f_open+0x348>
    262c:	87 e0       	ldi	r24, 0x07	; 7
    262e:	9e cf       	rjmp	.-196    	; 0x256c <f_open+0x2a6>
    2630:	88 e0       	ldi	r24, 0x08	; 8
    2632:	9c cf       	rjmp	.-200    	; 0x256c <f_open+0x2a6>
    2634:	87 e0       	ldi	r24, 0x07	; 7
    2636:	9a cf       	rjmp	.-204    	; 0x256c <f_open+0x2a6>
    2638:	84 e0       	ldi	r24, 0x04	; 4
    263a:	98 cf       	rjmp	.-208    	; 0x256c <f_open+0x2a6>
    263c:	ac 96       	adiw	r28, 0x2c	; 44
    263e:	0f b6       	in	r0, 0x3f	; 63
    2640:	f8 94       	cli
    2642:	de bf       	out	0x3e, r29	; 62
    2644:	0f be       	out	0x3f, r0	; 63
    2646:	cd bf       	out	0x3d, r28	; 61
    2648:	df 91       	pop	r29
    264a:	cf 91       	pop	r28
    264c:	1f 91       	pop	r17
    264e:	0f 91       	pop	r16
    2650:	ff 90       	pop	r15
    2652:	ef 90       	pop	r14
    2654:	df 90       	pop	r13
    2656:	cf 90       	pop	r12
    2658:	bf 90       	pop	r11
    265a:	af 90       	pop	r10
    265c:	9f 90       	pop	r9
    265e:	8f 90       	pop	r8
    2660:	7f 90       	pop	r7
    2662:	6f 90       	pop	r6
    2664:	5f 90       	pop	r5
    2666:	4f 90       	pop	r4
    2668:	3f 90       	pop	r3
    266a:	2f 90       	pop	r2
    266c:	08 95       	ret

0000266e <f_write>:
    266e:	2f 92       	push	r2
    2670:	3f 92       	push	r3
    2672:	4f 92       	push	r4
    2674:	5f 92       	push	r5
    2676:	6f 92       	push	r6
    2678:	7f 92       	push	r7
    267a:	8f 92       	push	r8
    267c:	9f 92       	push	r9
    267e:	af 92       	push	r10
    2680:	bf 92       	push	r11
    2682:	cf 92       	push	r12
    2684:	df 92       	push	r13
    2686:	ef 92       	push	r14
    2688:	ff 92       	push	r15
    268a:	0f 93       	push	r16
    268c:	1f 93       	push	r17
    268e:	cf 93       	push	r28
    2690:	df 93       	push	r29
    2692:	cd b7       	in	r28, 0x3d	; 61
    2694:	de b7       	in	r29, 0x3e	; 62
    2696:	2a 97       	sbiw	r28, 0x0a	; 10
    2698:	0f b6       	in	r0, 0x3f	; 63
    269a:	f8 94       	cli
    269c:	de bf       	out	0x3e, r29	; 62
    269e:	0f be       	out	0x3f, r0	; 63
    26a0:	cd bf       	out	0x3d, r28	; 61
    26a2:	7c 01       	movw	r14, r24
    26a4:	4b 01       	movw	r8, r22
    26a6:	6a 01       	movw	r12, r20
    26a8:	59 01       	movw	r10, r18
    26aa:	f9 01       	movw	r30, r18
    26ac:	11 82       	std	Z+1, r1	; 0x01
    26ae:	10 82       	st	Z, r1
    26b0:	8f 83       	std	Y+7, r24	; 0x07
    26b2:	f8 86       	std	Y+8, r15	; 0x08
    26b4:	be 01       	movw	r22, r28
    26b6:	6f 5f       	subi	r22, 0xFF	; 255
    26b8:	7f 4f       	sbci	r23, 0xFF	; 255
    26ba:	0e 94 cd 03 	call	0x79a	; 0x79a <validate>
    26be:	81 11       	cpse	r24, r1
    26c0:	92 c1       	rjmp	.+804    	; 0x29e6 <f_write+0x378>
    26c2:	f7 01       	movw	r30, r14
    26c4:	87 85       	ldd	r24, Z+15	; 0x0f
    26c6:	81 11       	cpse	r24, r1
    26c8:	8e c1       	rjmp	.+796    	; 0x29e6 <f_write+0x378>
    26ca:	86 85       	ldd	r24, Z+14	; 0x0e
    26cc:	81 ff       	sbrs	r24, 1
    26ce:	8a c1       	rjmp	.+788    	; 0x29e4 <f_write+0x376>
    26d0:	80 89       	ldd	r24, Z+16	; 0x10
    26d2:	91 89       	ldd	r25, Z+17	; 0x11
    26d4:	a2 89       	ldd	r26, Z+18	; 0x12
    26d6:	b3 89       	ldd	r27, Z+19	; 0x13
    26d8:	ac 01       	movw	r20, r24
    26da:	bd 01       	movw	r22, r26
    26dc:	4c 0d       	add	r20, r12
    26de:	5d 1d       	adc	r21, r13
    26e0:	61 1d       	adc	r22, r1
    26e2:	71 1d       	adc	r23, r1
    26e4:	48 17       	cp	r20, r24
    26e6:	59 07       	cpc	r21, r25
    26e8:	6a 07       	cpc	r22, r26
    26ea:	7b 07       	cpc	r23, r27
    26ec:	18 f4       	brcc	.+6      	; 0x26f4 <f_write+0x86>
    26ee:	6c 01       	movw	r12, r24
    26f0:	c0 94       	com	r12
    26f2:	d0 94       	com	r13
    26f4:	c1 14       	cp	r12, r1
    26f6:	d1 04       	cpc	r13, r1
    26f8:	09 f4       	brne	.+2      	; 0x26fc <f_write+0x8e>
    26fa:	6e c1       	rjmp	.+732    	; 0x29d8 <f_write+0x36a>
    26fc:	97 01       	movw	r18, r14
    26fe:	2e 5d       	subi	r18, 0xDE	; 222
    2700:	3f 4f       	sbci	r19, 0xFF	; 255
    2702:	3a 87       	std	Y+10, r19	; 0x0a
    2704:	29 87       	std	Y+9, r18	; 0x09
    2706:	f7 01       	movw	r30, r14
    2708:	80 89       	ldd	r24, Z+16	; 0x10
    270a:	91 89       	ldd	r25, Z+17	; 0x11
    270c:	a2 89       	ldd	r26, Z+18	; 0x12
    270e:	b3 89       	ldd	r27, Z+19	; 0x13
    2710:	ac 01       	movw	r20, r24
    2712:	bd 01       	movw	r22, r26
    2714:	51 70       	andi	r21, 0x01	; 1
    2716:	66 27       	eor	r22, r22
    2718:	77 27       	eor	r23, r23
    271a:	45 2b       	or	r20, r21
    271c:	46 2b       	or	r20, r22
    271e:	47 2b       	or	r20, r23
    2720:	09 f0       	breq	.+2      	; 0x2724 <f_write+0xb6>
    2722:	15 c1       	rjmp	.+554    	; 0x294e <f_write+0x2e0>
    2724:	e9 81       	ldd	r30, Y+1	; 0x01
    2726:	fa 81       	ldd	r31, Y+2	; 0x02
    2728:	61 84       	ldd	r6, Z+9	; 0x09
    272a:	72 84       	ldd	r7, Z+10	; 0x0a
    272c:	f1 e0       	ldi	r31, 0x01	; 1
    272e:	6f 1a       	sub	r6, r31
    2730:	71 08       	sbc	r7, r1
    2732:	ac 01       	movw	r20, r24
    2734:	bd 01       	movw	r22, r26
    2736:	03 2e       	mov	r0, r19
    2738:	39 e0       	ldi	r19, 0x09	; 9
    273a:	76 95       	lsr	r23
    273c:	67 95       	ror	r22
    273e:	57 95       	ror	r21
    2740:	47 95       	ror	r20
    2742:	3a 95       	dec	r19
    2744:	d1 f7       	brne	.-12     	; 0x273a <f_write+0xcc>
    2746:	30 2d       	mov	r19, r0
    2748:	64 22       	and	r6, r20
    274a:	75 22       	and	r7, r21
    274c:	61 14       	cp	r6, r1
    274e:	71 04       	cpc	r7, r1
    2750:	09 f0       	breq	.+2      	; 0x2754 <f_write+0xe6>
    2752:	49 c0       	rjmp	.+146    	; 0x27e6 <f_write+0x178>
    2754:	89 2b       	or	r24, r25
    2756:	8a 2b       	or	r24, r26
    2758:	8b 2b       	or	r24, r27
    275a:	91 f4       	brne	.+36     	; 0x2780 <f_write+0x112>
    275c:	f7 01       	movw	r30, r14
    275e:	66 81       	ldd	r22, Z+6	; 0x06
    2760:	77 81       	ldd	r23, Z+7	; 0x07
    2762:	80 85       	ldd	r24, Z+8	; 0x08
    2764:	91 85       	ldd	r25, Z+9	; 0x09
    2766:	61 15       	cp	r22, r1
    2768:	71 05       	cpc	r23, r1
    276a:	81 05       	cpc	r24, r1
    276c:	91 05       	cpc	r25, r1
    276e:	b9 f4       	brne	.+46     	; 0x279e <f_write+0x130>
    2770:	40 e0       	ldi	r20, 0x00	; 0
    2772:	50 e0       	ldi	r21, 0x00	; 0
    2774:	ba 01       	movw	r22, r20
    2776:	8f 81       	ldd	r24, Y+7	; 0x07
    2778:	98 85       	ldd	r25, Y+8	; 0x08
    277a:	0e 94 47 08 	call	0x108e	; 0x108e <create_chain>
    277e:	09 c0       	rjmp	.+18     	; 0x2792 <f_write+0x124>
    2780:	f7 01       	movw	r30, r14
    2782:	44 89       	ldd	r20, Z+20	; 0x14
    2784:	55 89       	ldd	r21, Z+21	; 0x15
    2786:	66 89       	ldd	r22, Z+22	; 0x16
    2788:	77 89       	ldd	r23, Z+23	; 0x17
    278a:	8f 81       	ldd	r24, Y+7	; 0x07
    278c:	98 85       	ldd	r25, Y+8	; 0x08
    278e:	0e 94 47 08 	call	0x108e	; 0x108e <create_chain>
    2792:	61 15       	cp	r22, r1
    2794:	71 05       	cpc	r23, r1
    2796:	81 05       	cpc	r24, r1
    2798:	91 05       	cpc	r25, r1
    279a:	09 f4       	brne	.+2      	; 0x279e <f_write+0x130>
    279c:	1d c1       	rjmp	.+570    	; 0x29d8 <f_write+0x36a>
    279e:	61 30       	cpi	r22, 0x01	; 1
    27a0:	71 05       	cpc	r23, r1
    27a2:	81 05       	cpc	r24, r1
    27a4:	91 05       	cpc	r25, r1
    27a6:	21 f4       	brne	.+8      	; 0x27b0 <f_write+0x142>
    27a8:	82 e0       	ldi	r24, 0x02	; 2
    27aa:	f7 01       	movw	r30, r14
    27ac:	87 87       	std	Z+15, r24	; 0x0f
    27ae:	1b c1       	rjmp	.+566    	; 0x29e6 <f_write+0x378>
    27b0:	6f 3f       	cpi	r22, 0xFF	; 255
    27b2:	ff ef       	ldi	r31, 0xFF	; 255
    27b4:	7f 07       	cpc	r23, r31
    27b6:	8f 07       	cpc	r24, r31
    27b8:	9f 07       	cpc	r25, r31
    27ba:	21 f4       	brne	.+8      	; 0x27c4 <f_write+0x156>
    27bc:	81 e0       	ldi	r24, 0x01	; 1
    27be:	f7 01       	movw	r30, r14
    27c0:	87 87       	std	Z+15, r24	; 0x0f
    27c2:	11 c1       	rjmp	.+546    	; 0x29e6 <f_write+0x378>
    27c4:	f7 01       	movw	r30, r14
    27c6:	64 8b       	std	Z+20, r22	; 0x14
    27c8:	75 8b       	std	Z+21, r23	; 0x15
    27ca:	86 8b       	std	Z+22, r24	; 0x16
    27cc:	97 8b       	std	Z+23, r25	; 0x17
    27ce:	06 81       	ldd	r16, Z+6	; 0x06
    27d0:	17 81       	ldd	r17, Z+7	; 0x07
    27d2:	20 85       	ldd	r18, Z+8	; 0x08
    27d4:	31 85       	ldd	r19, Z+9	; 0x09
    27d6:	01 2b       	or	r16, r17
    27d8:	02 2b       	or	r16, r18
    27da:	03 2b       	or	r16, r19
    27dc:	21 f4       	brne	.+8      	; 0x27e6 <f_write+0x178>
    27de:	66 83       	std	Z+6, r22	; 0x06
    27e0:	77 83       	std	Z+7, r23	; 0x07
    27e2:	80 87       	std	Z+8, r24	; 0x08
    27e4:	91 87       	std	Z+9, r25	; 0x09
    27e6:	f7 01       	movw	r30, r14
    27e8:	86 85       	ldd	r24, Z+14	; 0x0e
    27ea:	88 23       	and	r24, r24
    27ec:	bc f4       	brge	.+46     	; 0x281c <f_write+0x1ae>
    27ee:	20 8d       	ldd	r18, Z+24	; 0x18
    27f0:	31 8d       	ldd	r19, Z+25	; 0x19
    27f2:	42 8d       	ldd	r20, Z+26	; 0x1a
    27f4:	53 8d       	ldd	r21, Z+27	; 0x1b
    27f6:	e9 81       	ldd	r30, Y+1	; 0x01
    27f8:	fa 81       	ldd	r31, Y+2	; 0x02
    27fa:	01 e0       	ldi	r16, 0x01	; 1
    27fc:	10 e0       	ldi	r17, 0x00	; 0
    27fe:	69 85       	ldd	r22, Y+9	; 0x09
    2800:	7a 85       	ldd	r23, Y+10	; 0x0a
    2802:	81 81       	ldd	r24, Z+1	; 0x01
    2804:	0e 94 05 03 	call	0x60a	; 0x60a <disk_write>
    2808:	88 23       	and	r24, r24
    280a:	21 f0       	breq	.+8      	; 0x2814 <f_write+0x1a6>
    280c:	81 e0       	ldi	r24, 0x01	; 1
    280e:	f7 01       	movw	r30, r14
    2810:	87 87       	std	Z+15, r24	; 0x0f
    2812:	e9 c0       	rjmp	.+466    	; 0x29e6 <f_write+0x378>
    2814:	f7 01       	movw	r30, r14
    2816:	86 85       	ldd	r24, Z+14	; 0x0e
    2818:	8f 77       	andi	r24, 0x7F	; 127
    281a:	86 87       	std	Z+14, r24	; 0x0e
    281c:	29 81       	ldd	r18, Y+1	; 0x01
    281e:	3a 81       	ldd	r19, Y+2	; 0x02
    2820:	3e 83       	std	Y+6, r19	; 0x06
    2822:	2d 83       	std	Y+5, r18	; 0x05
    2824:	f7 01       	movw	r30, r14
    2826:	44 89       	ldd	r20, Z+20	; 0x14
    2828:	55 89       	ldd	r21, Z+21	; 0x15
    282a:	66 89       	ldd	r22, Z+22	; 0x16
    282c:	77 89       	ldd	r23, Z+23	; 0x17
    282e:	c9 01       	movw	r24, r18
    2830:	0e 94 6f 03 	call	0x6de	; 0x6de <clst2sect>
    2834:	61 15       	cp	r22, r1
    2836:	71 05       	cpc	r23, r1
    2838:	81 05       	cpc	r24, r1
    283a:	91 05       	cpc	r25, r1
    283c:	21 f4       	brne	.+8      	; 0x2846 <f_write+0x1d8>
    283e:	82 e0       	ldi	r24, 0x02	; 2
    2840:	f7 01       	movw	r30, r14
    2842:	87 87       	std	Z+15, r24	; 0x0f
    2844:	d0 c0       	rjmp	.+416    	; 0x29e6 <f_write+0x378>
    2846:	1b 01       	movw	r2, r22
    2848:	2c 01       	movw	r4, r24
    284a:	26 0c       	add	r2, r6
    284c:	37 1c       	adc	r3, r7
    284e:	41 1c       	adc	r4, r1
    2850:	51 1c       	adc	r5, r1
    2852:	96 01       	movw	r18, r12
    2854:	23 2f       	mov	r18, r19
    2856:	33 27       	eor	r19, r19
    2858:	26 95       	lsr	r18
    285a:	3c 83       	std	Y+4, r19	; 0x04
    285c:	2b 83       	std	Y+3, r18	; 0x03
    285e:	21 15       	cp	r18, r1
    2860:	31 05       	cpc	r19, r1
    2862:	09 f4       	brne	.+2      	; 0x2866 <f_write+0x1f8>
    2864:	47 c0       	rjmp	.+142    	; 0x28f4 <f_write+0x286>
    2866:	ed 81       	ldd	r30, Y+5	; 0x05
    2868:	fe 81       	ldd	r31, Y+6	; 0x06
    286a:	81 85       	ldd	r24, Z+9	; 0x09
    286c:	92 85       	ldd	r25, Z+10	; 0x0a
    286e:	26 0d       	add	r18, r6
    2870:	37 1d       	adc	r19, r7
    2872:	82 17       	cp	r24, r18
    2874:	93 07       	cpc	r25, r19
    2876:	28 f4       	brcc	.+10     	; 0x2882 <f_write+0x214>
    2878:	9c 01       	movw	r18, r24
    287a:	26 19       	sub	r18, r6
    287c:	37 09       	sbc	r19, r7
    287e:	3c 83       	std	Y+4, r19	; 0x04
    2880:	2b 83       	std	Y+3, r18	; 0x03
    2882:	0b 81       	ldd	r16, Y+3	; 0x03
    2884:	1c 81       	ldd	r17, Y+4	; 0x04
    2886:	a2 01       	movw	r20, r4
    2888:	91 01       	movw	r18, r2
    288a:	b4 01       	movw	r22, r8
    288c:	ed 81       	ldd	r30, Y+5	; 0x05
    288e:	fe 81       	ldd	r31, Y+6	; 0x06
    2890:	81 81       	ldd	r24, Z+1	; 0x01
    2892:	0e 94 05 03 	call	0x60a	; 0x60a <disk_write>
    2896:	88 23       	and	r24, r24
    2898:	21 f0       	breq	.+8      	; 0x28a2 <f_write+0x234>
    289a:	81 e0       	ldi	r24, 0x01	; 1
    289c:	f7 01       	movw	r30, r14
    289e:	87 87       	std	Z+15, r24	; 0x0f
    28a0:	a2 c0       	rjmp	.+324    	; 0x29e6 <f_write+0x378>
    28a2:	f7 01       	movw	r30, r14
    28a4:	80 8d       	ldd	r24, Z+24	; 0x18
    28a6:	91 8d       	ldd	r25, Z+25	; 0x19
    28a8:	a2 8d       	ldd	r26, Z+26	; 0x1a
    28aa:	b3 8d       	ldd	r27, Z+27	; 0x1b
    28ac:	82 19       	sub	r24, r2
    28ae:	93 09       	sbc	r25, r3
    28b0:	a4 09       	sbc	r26, r4
    28b2:	b5 09       	sbc	r27, r5
    28b4:	2b 81       	ldd	r18, Y+3	; 0x03
    28b6:	3c 81       	ldd	r19, Y+4	; 0x04
    28b8:	a9 01       	movw	r20, r18
    28ba:	60 e0       	ldi	r22, 0x00	; 0
    28bc:	70 e0       	ldi	r23, 0x00	; 0
    28be:	84 17       	cp	r24, r20
    28c0:	95 07       	cpc	r25, r21
    28c2:	a6 07       	cpc	r26, r22
    28c4:	b7 07       	cpc	r27, r23
    28c6:	80 f4       	brcc	.+32     	; 0x28e8 <f_write+0x27a>
    28c8:	98 2f       	mov	r25, r24
    28ca:	88 27       	eor	r24, r24
    28cc:	99 0f       	add	r25, r25
    28ce:	b4 01       	movw	r22, r8
    28d0:	68 0f       	add	r22, r24
    28d2:	79 1f       	adc	r23, r25
    28d4:	40 e0       	ldi	r20, 0x00	; 0
    28d6:	52 e0       	ldi	r21, 0x02	; 2
    28d8:	89 85       	ldd	r24, Y+9	; 0x09
    28da:	9a 85       	ldd	r25, Y+10	; 0x0a
    28dc:	0e 94 61 03 	call	0x6c2	; 0x6c2 <mem_cpy>
    28e0:	f7 01       	movw	r30, r14
    28e2:	86 85       	ldd	r24, Z+14	; 0x0e
    28e4:	8f 77       	andi	r24, 0x7F	; 127
    28e6:	86 87       	std	Z+14, r24	; 0x0e
    28e8:	6b 80       	ldd	r6, Y+3	; 0x03
    28ea:	7c 80       	ldd	r7, Y+4	; 0x04
    28ec:	76 2c       	mov	r7, r6
    28ee:	66 24       	eor	r6, r6
    28f0:	77 0c       	add	r7, r7
    28f2:	46 c0       	rjmp	.+140    	; 0x2980 <f_write+0x312>
    28f4:	f7 01       	movw	r30, r14
    28f6:	80 8d       	ldd	r24, Z+24	; 0x18
    28f8:	91 8d       	ldd	r25, Z+25	; 0x19
    28fa:	a2 8d       	ldd	r26, Z+26	; 0x1a
    28fc:	b3 8d       	ldd	r27, Z+27	; 0x1b
    28fe:	28 16       	cp	r2, r24
    2900:	39 06       	cpc	r3, r25
    2902:	4a 06       	cpc	r4, r26
    2904:	5b 06       	cpc	r5, r27
    2906:	f1 f0       	breq	.+60     	; 0x2944 <f_write+0x2d6>
    2908:	40 89       	ldd	r20, Z+16	; 0x10
    290a:	51 89       	ldd	r21, Z+17	; 0x11
    290c:	62 89       	ldd	r22, Z+18	; 0x12
    290e:	73 89       	ldd	r23, Z+19	; 0x13
    2910:	82 85       	ldd	r24, Z+10	; 0x0a
    2912:	93 85       	ldd	r25, Z+11	; 0x0b
    2914:	a4 85       	ldd	r26, Z+12	; 0x0c
    2916:	b5 85       	ldd	r27, Z+13	; 0x0d
    2918:	48 17       	cp	r20, r24
    291a:	59 07       	cpc	r21, r25
    291c:	6a 07       	cpc	r22, r26
    291e:	7b 07       	cpc	r23, r27
    2920:	88 f4       	brcc	.+34     	; 0x2944 <f_write+0x2d6>
    2922:	01 e0       	ldi	r16, 0x01	; 1
    2924:	10 e0       	ldi	r17, 0x00	; 0
    2926:	a2 01       	movw	r20, r4
    2928:	91 01       	movw	r18, r2
    292a:	69 85       	ldd	r22, Y+9	; 0x09
    292c:	7a 85       	ldd	r23, Y+10	; 0x0a
    292e:	ed 81       	ldd	r30, Y+5	; 0x05
    2930:	fe 81       	ldd	r31, Y+6	; 0x06
    2932:	81 81       	ldd	r24, Z+1	; 0x01
    2934:	0e 94 c6 02 	call	0x58c	; 0x58c <disk_read>
    2938:	88 23       	and	r24, r24
    293a:	21 f0       	breq	.+8      	; 0x2944 <f_write+0x2d6>
    293c:	81 e0       	ldi	r24, 0x01	; 1
    293e:	f7 01       	movw	r30, r14
    2940:	87 87       	std	Z+15, r24	; 0x0f
    2942:	51 c0       	rjmp	.+162    	; 0x29e6 <f_write+0x378>
    2944:	f7 01       	movw	r30, r14
    2946:	20 8e       	std	Z+24, r2	; 0x18
    2948:	31 8e       	std	Z+25, r3	; 0x19
    294a:	42 8e       	std	Z+26, r4	; 0x1a
    294c:	53 8e       	std	Z+27, r5	; 0x1b
    294e:	f7 01       	movw	r30, r14
    2950:	80 89       	ldd	r24, Z+16	; 0x10
    2952:	91 89       	ldd	r25, Z+17	; 0x11
    2954:	91 70       	andi	r25, 0x01	; 1
    2956:	20 e0       	ldi	r18, 0x00	; 0
    2958:	32 e0       	ldi	r19, 0x02	; 2
    295a:	39 01       	movw	r6, r18
    295c:	68 1a       	sub	r6, r24
    295e:	79 0a       	sbc	r7, r25
    2960:	c6 14       	cp	r12, r6
    2962:	d7 04       	cpc	r13, r7
    2964:	08 f4       	brcc	.+2      	; 0x2968 <f_write+0x2fa>
    2966:	36 01       	movw	r6, r12
    2968:	a3 01       	movw	r20, r6
    296a:	b4 01       	movw	r22, r8
    296c:	29 85       	ldd	r18, Y+9	; 0x09
    296e:	3a 85       	ldd	r19, Y+10	; 0x0a
    2970:	82 0f       	add	r24, r18
    2972:	93 1f       	adc	r25, r19
    2974:	0e 94 61 03 	call	0x6c2	; 0x6c2 <mem_cpy>
    2978:	f7 01       	movw	r30, r14
    297a:	86 85       	ldd	r24, Z+14	; 0x0e
    297c:	80 68       	ori	r24, 0x80	; 128
    297e:	86 87       	std	Z+14, r24	; 0x0e
    2980:	c6 18       	sub	r12, r6
    2982:	d7 08       	sbc	r13, r7
    2984:	f5 01       	movw	r30, r10
    2986:	80 81       	ld	r24, Z
    2988:	91 81       	ldd	r25, Z+1	; 0x01
    298a:	86 0d       	add	r24, r6
    298c:	97 1d       	adc	r25, r7
    298e:	91 83       	std	Z+1, r25	; 0x01
    2990:	80 83       	st	Z, r24
    2992:	86 0c       	add	r8, r6
    2994:	97 1c       	adc	r9, r7
    2996:	f7 01       	movw	r30, r14
    2998:	80 89       	ldd	r24, Z+16	; 0x10
    299a:	91 89       	ldd	r25, Z+17	; 0x11
    299c:	a2 89       	ldd	r26, Z+18	; 0x12
    299e:	b3 89       	ldd	r27, Z+19	; 0x13
    29a0:	86 0d       	add	r24, r6
    29a2:	97 1d       	adc	r25, r7
    29a4:	a1 1d       	adc	r26, r1
    29a6:	b1 1d       	adc	r27, r1
    29a8:	80 8b       	std	Z+16, r24	; 0x10
    29aa:	91 8b       	std	Z+17, r25	; 0x11
    29ac:	a2 8b       	std	Z+18, r26	; 0x12
    29ae:	b3 8b       	std	Z+19, r27	; 0x13
    29b0:	42 85       	ldd	r20, Z+10	; 0x0a
    29b2:	53 85       	ldd	r21, Z+11	; 0x0b
    29b4:	64 85       	ldd	r22, Z+12	; 0x0c
    29b6:	75 85       	ldd	r23, Z+13	; 0x0d
    29b8:	48 17       	cp	r20, r24
    29ba:	59 07       	cpc	r21, r25
    29bc:	6a 07       	cpc	r22, r26
    29be:	7b 07       	cpc	r23, r27
    29c0:	10 f4       	brcc	.+4      	; 0x29c6 <f_write+0x358>
    29c2:	ac 01       	movw	r20, r24
    29c4:	bd 01       	movw	r22, r26
    29c6:	f7 01       	movw	r30, r14
    29c8:	42 87       	std	Z+10, r20	; 0x0a
    29ca:	53 87       	std	Z+11, r21	; 0x0b
    29cc:	64 87       	std	Z+12, r22	; 0x0c
    29ce:	75 87       	std	Z+13, r23	; 0x0d
    29d0:	c1 14       	cp	r12, r1
    29d2:	d1 04       	cpc	r13, r1
    29d4:	09 f0       	breq	.+2      	; 0x29d8 <f_write+0x36a>
    29d6:	97 ce       	rjmp	.-722    	; 0x2706 <f_write+0x98>
    29d8:	f7 01       	movw	r30, r14
    29da:	86 85       	ldd	r24, Z+14	; 0x0e
    29dc:	80 64       	ori	r24, 0x40	; 64
    29de:	86 87       	std	Z+14, r24	; 0x0e
    29e0:	80 e0       	ldi	r24, 0x00	; 0
    29e2:	01 c0       	rjmp	.+2      	; 0x29e6 <f_write+0x378>
    29e4:	87 e0       	ldi	r24, 0x07	; 7
    29e6:	2a 96       	adiw	r28, 0x0a	; 10
    29e8:	0f b6       	in	r0, 0x3f	; 63
    29ea:	f8 94       	cli
    29ec:	de bf       	out	0x3e, r29	; 62
    29ee:	0f be       	out	0x3f, r0	; 63
    29f0:	cd bf       	out	0x3d, r28	; 61
    29f2:	df 91       	pop	r29
    29f4:	cf 91       	pop	r28
    29f6:	1f 91       	pop	r17
    29f8:	0f 91       	pop	r16
    29fa:	ff 90       	pop	r15
    29fc:	ef 90       	pop	r14
    29fe:	df 90       	pop	r13
    2a00:	cf 90       	pop	r12
    2a02:	bf 90       	pop	r11
    2a04:	af 90       	pop	r10
    2a06:	9f 90       	pop	r9
    2a08:	8f 90       	pop	r8
    2a0a:	7f 90       	pop	r7
    2a0c:	6f 90       	pop	r6
    2a0e:	5f 90       	pop	r5
    2a10:	4f 90       	pop	r4
    2a12:	3f 90       	pop	r3
    2a14:	2f 90       	pop	r2
    2a16:	08 95       	ret

00002a18 <f_sync>:
    2a18:	ef 92       	push	r14
    2a1a:	ff 92       	push	r15
    2a1c:	0f 93       	push	r16
    2a1e:	1f 93       	push	r17
    2a20:	cf 93       	push	r28
    2a22:	df 93       	push	r29
    2a24:	1f 92       	push	r1
    2a26:	1f 92       	push	r1
    2a28:	cd b7       	in	r28, 0x3d	; 61
    2a2a:	de b7       	in	r29, 0x3e	; 62
    2a2c:	7c 01       	movw	r14, r24
    2a2e:	be 01       	movw	r22, r28
    2a30:	6f 5f       	subi	r22, 0xFF	; 255
    2a32:	7f 4f       	sbci	r23, 0xFF	; 255
    2a34:	0e 94 cd 03 	call	0x79a	; 0x79a <validate>
    2a38:	81 11       	cpse	r24, r1
    2a3a:	57 c0       	rjmp	.+174    	; 0x2aea <f_sync+0xd2>
    2a3c:	f7 01       	movw	r30, r14
    2a3e:	86 85       	ldd	r24, Z+14	; 0x0e
    2a40:	86 ff       	sbrs	r24, 6
    2a42:	50 c0       	rjmp	.+160    	; 0x2ae4 <f_sync+0xcc>
    2a44:	88 23       	and	r24, r24
    2a46:	a4 f4       	brge	.+40     	; 0x2a70 <f_sync+0x58>
    2a48:	20 8d       	ldd	r18, Z+24	; 0x18
    2a4a:	31 8d       	ldd	r19, Z+25	; 0x19
    2a4c:	42 8d       	ldd	r20, Z+26	; 0x1a
    2a4e:	53 8d       	ldd	r21, Z+27	; 0x1b
    2a50:	e9 81       	ldd	r30, Y+1	; 0x01
    2a52:	fa 81       	ldd	r31, Y+2	; 0x02
    2a54:	01 e0       	ldi	r16, 0x01	; 1
    2a56:	10 e0       	ldi	r17, 0x00	; 0
    2a58:	b7 01       	movw	r22, r14
    2a5a:	6e 5d       	subi	r22, 0xDE	; 222
    2a5c:	7f 4f       	sbci	r23, 0xFF	; 255
    2a5e:	81 81       	ldd	r24, Z+1	; 0x01
    2a60:	0e 94 05 03 	call	0x60a	; 0x60a <disk_write>
    2a64:	81 11       	cpse	r24, r1
    2a66:	40 c0       	rjmp	.+128    	; 0x2ae8 <f_sync+0xd0>
    2a68:	f7 01       	movw	r30, r14
    2a6a:	86 85       	ldd	r24, Z+14	; 0x0e
    2a6c:	8f 77       	andi	r24, 0x7F	; 127
    2a6e:	86 87       	std	Z+14, r24	; 0x0e
    2a70:	f7 01       	movw	r30, r14
    2a72:	44 8d       	ldd	r20, Z+28	; 0x1c
    2a74:	55 8d       	ldd	r21, Z+29	; 0x1d
    2a76:	66 8d       	ldd	r22, Z+30	; 0x1e
    2a78:	77 8d       	ldd	r23, Z+31	; 0x1f
    2a7a:	89 81       	ldd	r24, Y+1	; 0x01
    2a7c:	9a 81       	ldd	r25, Y+2	; 0x02
    2a7e:	0e 94 51 04 	call	0x8a2	; 0x8a2 <move_window>
    2a82:	81 11       	cpse	r24, r1
    2a84:	32 c0       	rjmp	.+100    	; 0x2aea <f_sync+0xd2>
    2a86:	f7 01       	movw	r30, r14
    2a88:	00 a1       	ldd	r16, Z+32	; 0x20
    2a8a:	11 a1       	ldd	r17, Z+33	; 0x21
    2a8c:	f8 01       	movw	r30, r16
    2a8e:	83 85       	ldd	r24, Z+11	; 0x0b
    2a90:	80 62       	ori	r24, 0x20	; 32
    2a92:	83 87       	std	Z+11, r24	; 0x0b
    2a94:	f7 01       	movw	r30, r14
    2a96:	26 81       	ldd	r18, Z+6	; 0x06
    2a98:	37 81       	ldd	r19, Z+7	; 0x07
    2a9a:	40 85       	ldd	r20, Z+8	; 0x08
    2a9c:	51 85       	ldd	r21, Z+9	; 0x09
    2a9e:	b8 01       	movw	r22, r16
    2aa0:	80 81       	ld	r24, Z
    2aa2:	91 81       	ldd	r25, Z+1	; 0x01
    2aa4:	0e 94 77 06 	call	0xcee	; 0xcee <st_clust>
    2aa8:	f7 01       	movw	r30, r14
    2aaa:	32 85       	ldd	r19, Z+10	; 0x0a
    2aac:	23 85       	ldd	r18, Z+11	; 0x0b
    2aae:	94 85       	ldd	r25, Z+12	; 0x0c
    2ab0:	85 85       	ldd	r24, Z+13	; 0x0d
    2ab2:	f8 01       	movw	r30, r16
    2ab4:	34 8f       	std	Z+28, r19	; 0x1c
    2ab6:	25 8f       	std	Z+29, r18	; 0x1d
    2ab8:	96 8f       	std	Z+30, r25	; 0x1e
    2aba:	87 8f       	std	Z+31, r24	; 0x1f
    2abc:	16 8a       	std	Z+22, r1	; 0x16
    2abe:	17 8a       	std	Z+23, r1	; 0x17
    2ac0:	8f e6       	ldi	r24, 0x6F	; 111
    2ac2:	80 8f       	std	Z+24, r24	; 0x18
    2ac4:	82 e5       	ldi	r24, 0x52	; 82
    2ac6:	81 8f       	std	Z+25, r24	; 0x19
    2ac8:	12 8a       	std	Z+18, r1	; 0x12
    2aca:	13 8a       	std	Z+19, r1	; 0x13
    2acc:	89 81       	ldd	r24, Y+1	; 0x01
    2ace:	9a 81       	ldd	r25, Y+2	; 0x02
    2ad0:	21 e0       	ldi	r18, 0x01	; 1
    2ad2:	fc 01       	movw	r30, r24
    2ad4:	23 83       	std	Z+3, r18	; 0x03
    2ad6:	0e 94 ed 04 	call	0x9da	; 0x9da <sync_fs>
    2ada:	f7 01       	movw	r30, r14
    2adc:	96 85       	ldd	r25, Z+14	; 0x0e
    2ade:	9f 7b       	andi	r25, 0xBF	; 191
    2ae0:	96 87       	std	Z+14, r25	; 0x0e
    2ae2:	03 c0       	rjmp	.+6      	; 0x2aea <f_sync+0xd2>
    2ae4:	80 e0       	ldi	r24, 0x00	; 0
    2ae6:	01 c0       	rjmp	.+2      	; 0x2aea <f_sync+0xd2>
    2ae8:	81 e0       	ldi	r24, 0x01	; 1
    2aea:	0f 90       	pop	r0
    2aec:	0f 90       	pop	r0
    2aee:	df 91       	pop	r29
    2af0:	cf 91       	pop	r28
    2af2:	1f 91       	pop	r17
    2af4:	0f 91       	pop	r16
    2af6:	ff 90       	pop	r15
    2af8:	ef 90       	pop	r14
    2afa:	08 95       	ret

00002afc <f_close>:
    2afc:	0f 93       	push	r16
    2afe:	1f 93       	push	r17
    2b00:	cf 93       	push	r28
    2b02:	df 93       	push	r29
    2b04:	1f 92       	push	r1
    2b06:	1f 92       	push	r1
    2b08:	cd b7       	in	r28, 0x3d	; 61
    2b0a:	de b7       	in	r29, 0x3e	; 62
    2b0c:	8c 01       	movw	r16, r24
    2b0e:	84 df       	rcall	.-248    	; 0x2a18 <f_sync>
    2b10:	81 11       	cpse	r24, r1
    2b12:	0b c0       	rjmp	.+22     	; 0x2b2a <f_close+0x2e>
    2b14:	be 01       	movw	r22, r28
    2b16:	6f 5f       	subi	r22, 0xFF	; 255
    2b18:	7f 4f       	sbci	r23, 0xFF	; 255
    2b1a:	c8 01       	movw	r24, r16
    2b1c:	0e 94 cd 03 	call	0x79a	; 0x79a <validate>
    2b20:	81 11       	cpse	r24, r1
    2b22:	03 c0       	rjmp	.+6      	; 0x2b2a <f_close+0x2e>
    2b24:	f8 01       	movw	r30, r16
    2b26:	11 82       	std	Z+1, r1	; 0x01
    2b28:	10 82       	st	Z, r1
    2b2a:	0f 90       	pop	r0
    2b2c:	0f 90       	pop	r0
    2b2e:	df 91       	pop	r29
    2b30:	cf 91       	pop	r28
    2b32:	1f 91       	pop	r17
    2b34:	0f 91       	pop	r16
    2b36:	08 95       	ret

00002b38 <SD_sendCommand>:
    2b38:	cf 92       	push	r12
    2b3a:	df 92       	push	r13
    2b3c:	ef 92       	push	r14
    2b3e:	ff 92       	push	r15
    2b40:	1f 93       	push	r17
    2b42:	cf 93       	push	r28
    2b44:	df 93       	push	r29
    2b46:	18 2f       	mov	r17, r24
    2b48:	6a 01       	movw	r12, r20
    2b4a:	7b 01       	movw	r14, r22
    2b4c:	80 91 9b 11 	lds	r24, 0x119B	; 0x80119b <SDHC_flag>
    2b50:	81 11       	cpse	r24, r1
    2b52:	15 c0       	rjmp	.+42     	; 0x2b7e <SD_sendCommand+0x46>
    2b54:	8f ee       	ldi	r24, 0xEF	; 239
    2b56:	81 0f       	add	r24, r17
    2b58:	82 30       	cpi	r24, 0x02	; 2
    2b5a:	40 f0       	brcs	.+16     	; 0x2b6c <SD_sendCommand+0x34>
    2b5c:	88 ee       	ldi	r24, 0xE8	; 232
    2b5e:	81 0f       	add	r24, r17
    2b60:	82 30       	cpi	r24, 0x02	; 2
    2b62:	20 f0       	brcs	.+8      	; 0x2b6c <SD_sendCommand+0x34>
    2b64:	80 ee       	ldi	r24, 0xE0	; 224
    2b66:	81 0f       	add	r24, r17
    2b68:	82 30       	cpi	r24, 0x02	; 2
    2b6a:	48 f4       	brcc	.+18     	; 0x2b7e <SD_sendCommand+0x46>
    2b6c:	0b 2e       	mov	r0, r27
    2b6e:	b9 e0       	ldi	r27, 0x09	; 9
    2b70:	cc 0c       	add	r12, r12
    2b72:	dd 1c       	adc	r13, r13
    2b74:	ee 1c       	adc	r14, r14
    2b76:	ff 1c       	adc	r15, r15
    2b78:	ba 95       	dec	r27
    2b7a:	d1 f7       	brne	.-12     	; 0x2b70 <SD_sendCommand+0x38>
    2b7c:	b0 2d       	mov	r27, r0
    2b7e:	52 d1       	rcall	.+676    	; 0x2e24 <SPI_Chip_Select>
    2b80:	81 2f       	mov	r24, r17
    2b82:	80 64       	ori	r24, 0x40	; 64
    2b84:	42 d1       	rcall	.+644    	; 0x2e0a <SPI_transmit>
    2b86:	8f 2d       	mov	r24, r15
    2b88:	40 d1       	rcall	.+640    	; 0x2e0a <SPI_transmit>
    2b8a:	8e 2d       	mov	r24, r14
    2b8c:	3e d1       	rcall	.+636    	; 0x2e0a <SPI_transmit>
    2b8e:	8d 2d       	mov	r24, r13
    2b90:	3c d1       	rcall	.+632    	; 0x2e0a <SPI_transmit>
    2b92:	8c 2d       	mov	r24, r12
    2b94:	3a d1       	rcall	.+628    	; 0x2e0a <SPI_transmit>
    2b96:	18 30       	cpi	r17, 0x08	; 8
    2b98:	19 f4       	brne	.+6      	; 0x2ba0 <SD_sendCommand+0x68>
    2b9a:	87 e8       	ldi	r24, 0x87	; 135
    2b9c:	36 d1       	rcall	.+620    	; 0x2e0a <SPI_transmit>
    2b9e:	06 c0       	rjmp	.+12     	; 0x2bac <SD_sendCommand+0x74>
    2ba0:	85 e9       	ldi	r24, 0x95	; 149
    2ba2:	33 d1       	rcall	.+614    	; 0x2e0a <SPI_transmit>
    2ba4:	03 c0       	rjmp	.+6      	; 0x2bac <SD_sendCommand+0x74>
    2ba6:	c1 50       	subi	r28, 0x01	; 1
    2ba8:	11 f4       	brne	.+4      	; 0x2bae <SD_sendCommand+0x76>
    2baa:	16 c0       	rjmp	.+44     	; 0x2bd8 <SD_sendCommand+0xa0>
    2bac:	c0 e0       	ldi	r28, 0x00	; 0
    2bae:	33 d1       	rcall	.+614    	; 0x2e16 <SPI_receive>
    2bb0:	d8 2f       	mov	r29, r24
    2bb2:	8f 3f       	cpi	r24, 0xFF	; 255
    2bb4:	c1 f3       	breq	.-16     	; 0x2ba6 <SD_sendCommand+0x6e>
    2bb6:	81 11       	cpse	r24, r1
    2bb8:	0f c0       	rjmp	.+30     	; 0x2bd8 <SD_sendCommand+0xa0>
    2bba:	1a 33       	cpi	r17, 0x3A	; 58
    2bbc:	69 f4       	brne	.+26     	; 0x2bd8 <SD_sendCommand+0xa0>
    2bbe:	2b d1       	rcall	.+598    	; 0x2e16 <SPI_receive>
    2bc0:	86 ff       	sbrs	r24, 6
    2bc2:	04 c0       	rjmp	.+8      	; 0x2bcc <SD_sendCommand+0x94>
    2bc4:	81 e0       	ldi	r24, 0x01	; 1
    2bc6:	80 93 9b 11 	sts	0x119B, r24	; 0x80119b <SDHC_flag>
    2bca:	02 c0       	rjmp	.+4      	; 0x2bd0 <SD_sendCommand+0x98>
    2bcc:	10 92 9b 11 	sts	0x119B, r1	; 0x80119b <SDHC_flag>
    2bd0:	22 d1       	rcall	.+580    	; 0x2e16 <SPI_receive>
    2bd2:	21 d1       	rcall	.+578    	; 0x2e16 <SPI_receive>
    2bd4:	20 d1       	rcall	.+576    	; 0x2e16 <SPI_receive>
    2bd6:	05 c0       	rjmp	.+10     	; 0x2be2 <SD_sendCommand+0xaa>
    2bd8:	16 32       	cpi	r17, 0x26	; 38
    2bda:	19 f4       	brne	.+6      	; 0x2be2 <SD_sendCommand+0xaa>
    2bdc:	1c d1       	rcall	.+568    	; 0x2e16 <SPI_receive>
    2bde:	88 23       	and	r24, r24
    2be0:	e9 f3       	breq	.-6      	; 0x2bdc <SD_sendCommand+0xa4>
    2be2:	19 d1       	rcall	.+562    	; 0x2e16 <SPI_receive>
    2be4:	21 d1       	rcall	.+578    	; 0x2e28 <SPI_Chip_Deselect>
    2be6:	8d 2f       	mov	r24, r29
    2be8:	df 91       	pop	r29
    2bea:	cf 91       	pop	r28
    2bec:	1f 91       	pop	r17
    2bee:	ff 90       	pop	r15
    2bf0:	ef 90       	pop	r14
    2bf2:	df 90       	pop	r13
    2bf4:	cf 90       	pop	r12
    2bf6:	08 95       	ret

00002bf8 <SD_init>:
    2bf8:	0f 93       	push	r16
    2bfa:	1f 93       	push	r17
    2bfc:	cf 93       	push	r28
    2bfe:	df 93       	push	r29
    2c00:	fc d0       	rcall	.+504    	; 0x2dfa <SPI_init>
    2c02:	1a e0       	ldi	r17, 0x0A	; 10
    2c04:	8f ef       	ldi	r24, 0xFF	; 255
    2c06:	01 d1       	rcall	.+514    	; 0x2e0a <SPI_transmit>
    2c08:	11 50       	subi	r17, 0x01	; 1
    2c0a:	e1 f7       	brne	.-8      	; 0x2c04 <SD_init+0xc>
    2c0c:	0b d1       	rcall	.+534    	; 0x2e24 <SPI_Chip_Select>
    2c0e:	40 e0       	ldi	r20, 0x00	; 0
    2c10:	50 e0       	ldi	r21, 0x00	; 0
    2c12:	ba 01       	movw	r22, r20
    2c14:	80 e0       	ldi	r24, 0x00	; 0
    2c16:	90 df       	rcall	.-224    	; 0x2b38 <SD_sendCommand>
    2c18:	c0 e2       	ldi	r28, 0x20	; 32
    2c1a:	d0 e0       	ldi	r29, 0x00	; 0
    2c1c:	08 c0       	rjmp	.+16     	; 0x2c2e <SD_init+0x36>
    2c1e:	40 e0       	ldi	r20, 0x00	; 0
    2c20:	50 e0       	ldi	r21, 0x00	; 0
    2c22:	ba 01       	movw	r22, r20
    2c24:	80 e0       	ldi	r24, 0x00	; 0
    2c26:	88 df       	rcall	.-240    	; 0x2b38 <SD_sendCommand>
    2c28:	21 97       	sbiw	r28, 0x01	; 1
    2c2a:	09 f4       	brne	.+2      	; 0x2c2e <SD_init+0x36>
    2c2c:	65 c0       	rjmp	.+202    	; 0x2cf8 <SD_init+0x100>
    2c2e:	81 30       	cpi	r24, 0x01	; 1
    2c30:	b1 f7       	brne	.-20     	; 0x2c1e <SD_init+0x26>
    2c32:	fa d0       	rcall	.+500    	; 0x2e28 <SPI_Chip_Deselect>
    2c34:	8f ef       	ldi	r24, 0xFF	; 255
    2c36:	e9 d0       	rcall	.+466    	; 0x2e0a <SPI_transmit>
    2c38:	8f ef       	ldi	r24, 0xFF	; 255
    2c3a:	e7 d0       	rcall	.+462    	; 0x2e0a <SPI_transmit>
    2c3c:	4a ea       	ldi	r20, 0xAA	; 170
    2c3e:	51 e0       	ldi	r21, 0x01	; 1
    2c40:	60 e0       	ldi	r22, 0x00	; 0
    2c42:	70 e0       	ldi	r23, 0x00	; 0
    2c44:	88 e0       	ldi	r24, 0x08	; 8
    2c46:	78 df       	rcall	.-272    	; 0x2b38 <SD_sendCommand>
    2c48:	ce ef       	ldi	r28, 0xFE	; 254
    2c4a:	d0 e0       	ldi	r29, 0x00	; 0
    2c4c:	0d c0       	rjmp	.+26     	; 0x2c68 <SD_init+0x70>
    2c4e:	4a ea       	ldi	r20, 0xAA	; 170
    2c50:	51 e0       	ldi	r21, 0x01	; 1
    2c52:	60 e0       	ldi	r22, 0x00	; 0
    2c54:	70 e0       	ldi	r23, 0x00	; 0
    2c56:	88 e0       	ldi	r24, 0x08	; 8
    2c58:	6f df       	rcall	.-290    	; 0x2b38 <SD_sendCommand>
    2c5a:	21 97       	sbiw	r28, 0x01	; 1
    2c5c:	29 f4       	brne	.+10     	; 0x2c68 <SD_init+0x70>
    2c5e:	81 e0       	ldi	r24, 0x01	; 1
    2c60:	80 93 a0 11 	sts	0x11A0, r24	; 0x8011a0 <cardType>
    2c64:	01 e0       	ldi	r16, 0x01	; 1
    2c66:	03 c0       	rjmp	.+6      	; 0x2c6e <SD_init+0x76>
    2c68:	81 30       	cpi	r24, 0x01	; 1
    2c6a:	89 f7       	brne	.-30     	; 0x2c4e <SD_init+0x56>
    2c6c:	02 e0       	ldi	r16, 0x02	; 2
    2c6e:	40 e0       	ldi	r20, 0x00	; 0
    2c70:	50 e0       	ldi	r21, 0x00	; 0
    2c72:	ba 01       	movw	r22, r20
    2c74:	87 e3       	ldi	r24, 0x37	; 55
    2c76:	60 df       	rcall	.-320    	; 0x2b38 <SD_sendCommand>
    2c78:	40 e0       	ldi	r20, 0x00	; 0
    2c7a:	50 e0       	ldi	r21, 0x00	; 0
    2c7c:	60 e0       	ldi	r22, 0x00	; 0
    2c7e:	70 e4       	ldi	r23, 0x40	; 64
    2c80:	89 e2       	ldi	r24, 0x29	; 41
    2c82:	5a df       	rcall	.-332    	; 0x2b38 <SD_sendCommand>
    2c84:	ce ef       	ldi	r28, 0xFE	; 254
    2c86:	d0 e0       	ldi	r29, 0x00	; 0
    2c88:	0d c0       	rjmp	.+26     	; 0x2ca4 <SD_init+0xac>
    2c8a:	40 e0       	ldi	r20, 0x00	; 0
    2c8c:	50 e0       	ldi	r21, 0x00	; 0
    2c8e:	ba 01       	movw	r22, r20
    2c90:	87 e3       	ldi	r24, 0x37	; 55
    2c92:	52 df       	rcall	.-348    	; 0x2b38 <SD_sendCommand>
    2c94:	40 e0       	ldi	r20, 0x00	; 0
    2c96:	50 e0       	ldi	r21, 0x00	; 0
    2c98:	60 e0       	ldi	r22, 0x00	; 0
    2c9a:	70 e4       	ldi	r23, 0x40	; 64
    2c9c:	89 e2       	ldi	r24, 0x29	; 41
    2c9e:	4c df       	rcall	.-360    	; 0x2b38 <SD_sendCommand>
    2ca0:	21 97       	sbiw	r28, 0x01	; 1
    2ca2:	61 f1       	breq	.+88     	; 0x2cfc <SD_init+0x104>
    2ca4:	81 11       	cpse	r24, r1
    2ca6:	f1 cf       	rjmp	.-30     	; 0x2c8a <SD_init+0x92>
    2ca8:	10 92 9b 11 	sts	0x119B, r1	; 0x80119b <SDHC_flag>
    2cac:	02 30       	cpi	r16, 0x02	; 2
    2cae:	c1 f4       	brne	.+48     	; 0x2ce0 <SD_init+0xe8>
    2cb0:	27 c0       	rjmp	.+78     	; 0x2d00 <SD_init+0x108>
    2cb2:	40 e0       	ldi	r20, 0x00	; 0
    2cb4:	50 e0       	ldi	r21, 0x00	; 0
    2cb6:	ba 01       	movw	r22, r20
    2cb8:	8a e3       	ldi	r24, 0x3A	; 58
    2cba:	3e df       	rcall	.-388    	; 0x2b38 <SD_sendCommand>
    2cbc:	21 97       	sbiw	r28, 0x01	; 1
    2cbe:	19 f4       	brne	.+6      	; 0x2cc6 <SD_init+0xce>
    2cc0:	10 92 a0 11 	sts	0x11A0, r1	; 0x8011a0 <cardType>
    2cc4:	02 c0       	rjmp	.+4      	; 0x2cca <SD_init+0xd2>
    2cc6:	81 11       	cpse	r24, r1
    2cc8:	f4 cf       	rjmp	.-24     	; 0x2cb2 <SD_init+0xba>
    2cca:	80 91 9b 11 	lds	r24, 0x119B	; 0x80119b <SDHC_flag>
    2cce:	81 30       	cpi	r24, 0x01	; 1
    2cd0:	21 f4       	brne	.+8      	; 0x2cda <SD_init+0xe2>
    2cd2:	82 e0       	ldi	r24, 0x02	; 2
    2cd4:	80 93 a0 11 	sts	0x11A0, r24	; 0x8011a0 <cardType>
    2cd8:	03 c0       	rjmp	.+6      	; 0x2ce0 <SD_init+0xe8>
    2cda:	83 e0       	ldi	r24, 0x03	; 3
    2cdc:	80 93 a0 11 	sts	0x11A0, r24	; 0x8011a0 <cardType>
    2ce0:	40 e0       	ldi	r20, 0x00	; 0
    2ce2:	50 e0       	ldi	r21, 0x00	; 0
    2ce4:	ba 01       	movw	r22, r20
    2ce6:	8b e3       	ldi	r24, 0x3B	; 59
    2ce8:	27 df       	rcall	.-434    	; 0x2b38 <SD_sendCommand>
    2cea:	40 e0       	ldi	r20, 0x00	; 0
    2cec:	52 e0       	ldi	r21, 0x02	; 2
    2cee:	60 e0       	ldi	r22, 0x00	; 0
    2cf0:	70 e0       	ldi	r23, 0x00	; 0
    2cf2:	80 e1       	ldi	r24, 0x10	; 16
    2cf4:	21 df       	rcall	.-446    	; 0x2b38 <SD_sendCommand>
    2cf6:	0c c0       	rjmp	.+24     	; 0x2d10 <SD_init+0x118>
    2cf8:	11 e0       	ldi	r17, 0x01	; 1
    2cfa:	0a c0       	rjmp	.+20     	; 0x2d10 <SD_init+0x118>
    2cfc:	12 e0       	ldi	r17, 0x02	; 2
    2cfe:	08 c0       	rjmp	.+16     	; 0x2d10 <SD_init+0x118>
    2d00:	40 e0       	ldi	r20, 0x00	; 0
    2d02:	50 e0       	ldi	r21, 0x00	; 0
    2d04:	ba 01       	movw	r22, r20
    2d06:	8a e3       	ldi	r24, 0x3A	; 58
    2d08:	17 df       	rcall	.-466    	; 0x2b38 <SD_sendCommand>
    2d0a:	ce ef       	ldi	r28, 0xFE	; 254
    2d0c:	d0 e0       	ldi	r29, 0x00	; 0
    2d0e:	db cf       	rjmp	.-74     	; 0x2cc6 <SD_init+0xce>
    2d10:	81 2f       	mov	r24, r17
    2d12:	df 91       	pop	r29
    2d14:	cf 91       	pop	r28
    2d16:	1f 91       	pop	r17
    2d18:	0f 91       	pop	r16
    2d1a:	08 95       	ret

00002d1c <SD_readSingleBlock>:
    2d1c:	0f 93       	push	r16
    2d1e:	1f 93       	push	r17
    2d20:	cf 93       	push	r28
    2d22:	df 93       	push	r29
    2d24:	ea 01       	movw	r28, r20
    2d26:	ab 01       	movw	r20, r22
    2d28:	bc 01       	movw	r22, r24
    2d2a:	81 e1       	ldi	r24, 0x11	; 17
    2d2c:	05 df       	rcall	.-502    	; 0x2b38 <SD_sendCommand>
    2d2e:	81 11       	cpse	r24, r1
    2d30:	19 c0       	rjmp	.+50     	; 0x2d64 <SD_readSingleBlock+0x48>
    2d32:	78 d0       	rcall	.+240    	; 0x2e24 <SPI_Chip_Select>
    2d34:	0a ee       	ldi	r16, 0xEA	; 234
    2d36:	1d ef       	ldi	r17, 0xFD	; 253
    2d38:	06 c0       	rjmp	.+12     	; 0x2d46 <SD_readSingleBlock+0x2a>
    2d3a:	01 50       	subi	r16, 0x01	; 1
    2d3c:	11 09       	sbc	r17, r1
    2d3e:	19 f4       	brne	.+6      	; 0x2d46 <SD_readSingleBlock+0x2a>
    2d40:	73 d0       	rcall	.+230    	; 0x2e28 <SPI_Chip_Deselect>
    2d42:	81 e0       	ldi	r24, 0x01	; 1
    2d44:	0f c0       	rjmp	.+30     	; 0x2d64 <SD_readSingleBlock+0x48>
    2d46:	67 d0       	rcall	.+206    	; 0x2e16 <SPI_receive>
    2d48:	8e 3f       	cpi	r24, 0xFE	; 254
    2d4a:	b9 f7       	brne	.-18     	; 0x2d3a <SD_readSingleBlock+0x1e>
    2d4c:	8e 01       	movw	r16, r28
    2d4e:	1e 5f       	subi	r17, 0xFE	; 254
    2d50:	62 d0       	rcall	.+196    	; 0x2e16 <SPI_receive>
    2d52:	89 93       	st	Y+, r24
    2d54:	c0 17       	cp	r28, r16
    2d56:	d1 07       	cpc	r29, r17
    2d58:	d9 f7       	brne	.-10     	; 0x2d50 <SD_readSingleBlock+0x34>
    2d5a:	5d d0       	rcall	.+186    	; 0x2e16 <SPI_receive>
    2d5c:	5c d0       	rcall	.+184    	; 0x2e16 <SPI_receive>
    2d5e:	5b d0       	rcall	.+182    	; 0x2e16 <SPI_receive>
    2d60:	63 d0       	rcall	.+198    	; 0x2e28 <SPI_Chip_Deselect>
    2d62:	80 e0       	ldi	r24, 0x00	; 0
    2d64:	df 91       	pop	r29
    2d66:	cf 91       	pop	r28
    2d68:	1f 91       	pop	r17
    2d6a:	0f 91       	pop	r16
    2d6c:	08 95       	ret

00002d6e <SD_writeSingleBlock>:
    2d6e:	0f 93       	push	r16
    2d70:	1f 93       	push	r17
    2d72:	cf 93       	push	r28
    2d74:	df 93       	push	r29
    2d76:	ea 01       	movw	r28, r20
    2d78:	ab 01       	movw	r20, r22
    2d7a:	bc 01       	movw	r22, r24
    2d7c:	88 e1       	ldi	r24, 0x18	; 24
    2d7e:	dc de       	rcall	.-584    	; 0x2b38 <SD_sendCommand>
    2d80:	81 11       	cpse	r24, r1
    2d82:	36 c0       	rjmp	.+108    	; 0x2df0 <SD_writeSingleBlock+0x82>
    2d84:	4f d0       	rcall	.+158    	; 0x2e24 <SPI_Chip_Select>
    2d86:	8e ef       	ldi	r24, 0xFE	; 254
    2d88:	40 d0       	rcall	.+128    	; 0x2e0a <SPI_transmit>
    2d8a:	8e 01       	movw	r16, r28
    2d8c:	1e 5f       	subi	r17, 0xFE	; 254
    2d8e:	89 91       	ld	r24, Y+
    2d90:	3c d0       	rcall	.+120    	; 0x2e0a <SPI_transmit>
    2d92:	0c 17       	cp	r16, r28
    2d94:	1d 07       	cpc	r17, r29
    2d96:	d9 f7       	brne	.-10     	; 0x2d8e <SD_writeSingleBlock+0x20>
    2d98:	8f ef       	ldi	r24, 0xFF	; 255
    2d9a:	37 d0       	rcall	.+110    	; 0x2e0a <SPI_transmit>
    2d9c:	8f ef       	ldi	r24, 0xFF	; 255
    2d9e:	35 d0       	rcall	.+106    	; 0x2e0a <SPI_transmit>
    2da0:	3a d0       	rcall	.+116    	; 0x2e16 <SPI_receive>
    2da2:	c8 2f       	mov	r28, r24
    2da4:	8f 71       	andi	r24, 0x1F	; 31
    2da6:	85 30       	cpi	r24, 0x05	; 5
    2da8:	59 f0       	breq	.+22     	; 0x2dc0 <SD_writeSingleBlock+0x52>
    2daa:	3e d0       	rcall	.+124    	; 0x2e28 <SPI_Chip_Deselect>
    2dac:	8c 2f       	mov	r24, r28
    2dae:	20 c0       	rjmp	.+64     	; 0x2df0 <SD_writeSingleBlock+0x82>
    2db0:	21 96       	adiw	r28, 0x01	; 1
    2db2:	ca 3e       	cpi	r28, 0xEA	; 234
    2db4:	2d ef       	ldi	r18, 0xFD	; 253
    2db6:	d2 07       	cpc	r29, r18
    2db8:	29 f4       	brne	.+10     	; 0x2dc4 <SD_writeSingleBlock+0x56>
    2dba:	36 d0       	rcall	.+108    	; 0x2e28 <SPI_Chip_Deselect>
    2dbc:	81 e0       	ldi	r24, 0x01	; 1
    2dbe:	18 c0       	rjmp	.+48     	; 0x2df0 <SD_writeSingleBlock+0x82>
    2dc0:	c0 e0       	ldi	r28, 0x00	; 0
    2dc2:	d0 e0       	ldi	r29, 0x00	; 0
    2dc4:	28 d0       	rcall	.+80     	; 0x2e16 <SPI_receive>
    2dc6:	88 23       	and	r24, r24
    2dc8:	99 f3       	breq	.-26     	; 0x2db0 <SD_writeSingleBlock+0x42>
    2dca:	2e d0       	rcall	.+92     	; 0x2e28 <SPI_Chip_Deselect>
    2dcc:	8f ef       	ldi	r24, 0xFF	; 255
    2dce:	1d d0       	rcall	.+58     	; 0x2e0a <SPI_transmit>
    2dd0:	29 d0       	rcall	.+82     	; 0x2e24 <SPI_Chip_Select>
    2dd2:	09 c0       	rjmp	.+18     	; 0x2de6 <SD_writeSingleBlock+0x78>
    2dd4:	ce 01       	movw	r24, r28
    2dd6:	01 96       	adiw	r24, 0x01	; 1
    2dd8:	c9 3e       	cpi	r28, 0xE9	; 233
    2dda:	dd 4f       	sbci	r29, 0xFD	; 253
    2ddc:	18 f0       	brcs	.+6      	; 0x2de4 <SD_writeSingleBlock+0x76>
    2dde:	24 d0       	rcall	.+72     	; 0x2e28 <SPI_Chip_Deselect>
    2de0:	81 e0       	ldi	r24, 0x01	; 1
    2de2:	06 c0       	rjmp	.+12     	; 0x2df0 <SD_writeSingleBlock+0x82>
    2de4:	ec 01       	movw	r28, r24
    2de6:	17 d0       	rcall	.+46     	; 0x2e16 <SPI_receive>
    2de8:	88 23       	and	r24, r24
    2dea:	a1 f3       	breq	.-24     	; 0x2dd4 <SD_writeSingleBlock+0x66>
    2dec:	1d d0       	rcall	.+58     	; 0x2e28 <SPI_Chip_Deselect>
    2dee:	80 e0       	ldi	r24, 0x00	; 0
    2df0:	df 91       	pop	r29
    2df2:	cf 91       	pop	r28
    2df4:	1f 91       	pop	r17
    2df6:	0f 91       	pop	r16
    2df8:	08 95       	ret

00002dfa <SPI_init>:
    2dfa:	20 9a       	sbi	0x04, 0	; 4
    2dfc:	22 9a       	sbi	0x04, 2	; 4
    2dfe:	23 98       	cbi	0x04, 3	; 4
    2e00:	21 9a       	sbi	0x04, 1	; 4
    2e02:	82 e5       	ldi	r24, 0x52	; 82
    2e04:	8c bd       	out	0x2c, r24	; 44
    2e06:	1d bc       	out	0x2d, r1	; 45
    2e08:	08 95       	ret

00002e0a <SPI_transmit>:
    2e0a:	8e bd       	out	0x2e, r24	; 46
    2e0c:	0d b4       	in	r0, 0x2d	; 45
    2e0e:	07 fe       	sbrs	r0, 7
    2e10:	fd cf       	rjmp	.-6      	; 0x2e0c <SPI_transmit+0x2>
    2e12:	8e b5       	in	r24, 0x2e	; 46
    2e14:	08 95       	ret

00002e16 <SPI_receive>:
    2e16:	8f ef       	ldi	r24, 0xFF	; 255
    2e18:	8e bd       	out	0x2e, r24	; 46
    2e1a:	0d b4       	in	r0, 0x2d	; 45
    2e1c:	07 fe       	sbrs	r0, 7
    2e1e:	fd cf       	rjmp	.-6      	; 0x2e1a <SPI_receive+0x4>
    2e20:	8e b5       	in	r24, 0x2e	; 46
    2e22:	08 95       	ret

00002e24 <SPI_Chip_Select>:
    2e24:	28 98       	cbi	0x05, 0	; 5
    2e26:	08 95       	ret

00002e28 <SPI_Chip_Deselect>:
    2e28:	28 9a       	sbi	0x05, 0	; 5
    2e2a:	08 95       	ret

00002e2c <InitUART>:
    2e2c:	0f 93       	push	r16
    2e2e:	cf 93       	push	r28
    2e30:	df 93       	push	r29
    2e32:	ec 01       	movw	r28, r24
    2e34:	db 01       	movw	r26, r22
    2e36:	ca 01       	movw	r24, r20
    2e38:	8c 52       	subi	r24, 0x2C	; 44
    2e3a:	91 40       	sbci	r25, 0x01	; 1
    2e3c:	a1 09       	sbc	r26, r1
    2e3e:	b1 09       	sbc	r27, r1
    2e40:	85 3d       	cpi	r24, 0xD5	; 213
    2e42:	90 4c       	sbci	r25, 0xC0	; 192
    2e44:	a1 40       	sbci	r26, 0x01	; 1
    2e46:	b1 05       	cpc	r27, r1
    2e48:	08 f0       	brcs	.+2      	; 0x2e4c <InitUART+0x20>
    2e4a:	40 c0       	rjmp	.+128    	; 0x2ecc <InitUART+0xa0>
    2e4c:	25 50       	subi	r18, 0x05	; 5
    2e4e:	24 30       	cpi	r18, 0x04	; 4
    2e50:	e8 f5       	brcc	.+122    	; 0x2ecc <InitUART+0xa0>
    2e52:	80 e2       	ldi	r24, 0x20	; 32
    2e54:	88 83       	st	Y, r24
    2e56:	88 e1       	ldi	r24, 0x18	; 24
    2e58:	89 83       	std	Y+1, r24	; 0x01
    2e5a:	22 0f       	add	r18, r18
    2e5c:	2a 83       	std	Y+2, r18	; 0x02
    2e5e:	05 34       	cpi	r16, 0x45	; 69
    2e60:	21 f4       	brne	.+8      	; 0x2e6a <InitUART+0x3e>
    2e62:	8a 81       	ldd	r24, Y+2	; 0x02
    2e64:	80 62       	ori	r24, 0x20	; 32
    2e66:	8a 83       	std	Y+2, r24	; 0x02
    2e68:	05 c0       	rjmp	.+10     	; 0x2e74 <InitUART+0x48>
    2e6a:	0f 34       	cpi	r16, 0x4F	; 79
    2e6c:	19 f4       	brne	.+6      	; 0x2e74 <InitUART+0x48>
    2e6e:	8a 81       	ldd	r24, Y+2	; 0x02
    2e70:	80 63       	ori	r24, 0x30	; 48
    2e72:	8a 83       	std	Y+2, r24	; 0x02
    2e74:	db 01       	movw	r26, r22
    2e76:	ca 01       	movw	r24, r20
    2e78:	80 58       	subi	r24, 0x80	; 128
    2e7a:	9b 47       	sbci	r25, 0x7B	; 123
    2e7c:	a1 4e       	sbci	r26, 0xE1	; 225
    2e7e:	bf 4f       	sbci	r27, 0xFF	; 255
    2e80:	88 0f       	add	r24, r24
    2e82:	99 1f       	adc	r25, r25
    2e84:	aa 1f       	adc	r26, r26
    2e86:	bb 1f       	adc	r27, r27
    2e88:	88 0f       	add	r24, r24
    2e8a:	99 1f       	adc	r25, r25
    2e8c:	aa 1f       	adc	r26, r26
    2e8e:	bb 1f       	adc	r27, r27
    2e90:	88 0f       	add	r24, r24
    2e92:	99 1f       	adc	r25, r25
    2e94:	aa 1f       	adc	r26, r26
    2e96:	bb 1f       	adc	r27, r27
    2e98:	44 0f       	add	r20, r20
    2e9a:	55 1f       	adc	r21, r21
    2e9c:	66 1f       	adc	r22, r22
    2e9e:	77 1f       	adc	r23, r23
    2ea0:	44 0f       	add	r20, r20
    2ea2:	55 1f       	adc	r21, r21
    2ea4:	66 1f       	adc	r22, r22
    2ea6:	77 1f       	adc	r23, r23
    2ea8:	9a 01       	movw	r18, r20
    2eaa:	ab 01       	movw	r20, r22
    2eac:	22 0f       	add	r18, r18
    2eae:	33 1f       	adc	r19, r19
    2eb0:	44 1f       	adc	r20, r20
    2eb2:	55 1f       	adc	r21, r21
    2eb4:	22 0f       	add	r18, r18
    2eb6:	33 1f       	adc	r19, r19
    2eb8:	44 1f       	adc	r20, r20
    2eba:	55 1f       	adc	r21, r21
    2ebc:	bc 01       	movw	r22, r24
    2ebe:	cd 01       	movw	r24, r26
    2ec0:	0e 94 c3 26 	call	0x4d86	; 0x4d86 <__udivmodsi4>
    2ec4:	21 50       	subi	r18, 0x01	; 1
    2ec6:	31 09       	sbc	r19, r1
    2ec8:	3d 83       	std	Y+5, r19	; 0x05
    2eca:	2c 83       	std	Y+4, r18	; 0x04
    2ecc:	df 91       	pop	r29
    2ece:	cf 91       	pop	r28
    2ed0:	0f 91       	pop	r16
    2ed2:	08 95       	ret

00002ed4 <SendChar>:
    2ed4:	fc 01       	movw	r30, r24
    2ed6:	90 81       	ld	r25, Z
    2ed8:	95 ff       	sbrs	r25, 5
    2eda:	fd cf       	rjmp	.-6      	; 0x2ed6 <SendChar+0x2>
    2edc:	66 83       	std	Z+6, r22	; 0x06
    2ede:	08 95       	ret

00002ee0 <SendString>:
    2ee0:	0f 93       	push	r16
    2ee2:	1f 93       	push	r17
    2ee4:	cf 93       	push	r28
    2ee6:	df 93       	push	r29
    2ee8:	eb 01       	movw	r28, r22
    2eea:	68 81       	ld	r22, Y
    2eec:	66 23       	and	r22, r22
    2eee:	39 f0       	breq	.+14     	; 0x2efe <SendString+0x1e>
    2ef0:	8c 01       	movw	r16, r24
    2ef2:	21 96       	adiw	r28, 0x01	; 1
    2ef4:	c8 01       	movw	r24, r16
    2ef6:	ee df       	rcall	.-36     	; 0x2ed4 <SendChar>
    2ef8:	69 91       	ld	r22, Y+
    2efa:	61 11       	cpse	r22, r1
    2efc:	fb cf       	rjmp	.-10     	; 0x2ef4 <SendString+0x14>
    2efe:	df 91       	pop	r29
    2f00:	cf 91       	pop	r28
    2f02:	1f 91       	pop	r17
    2f04:	0f 91       	pop	r16
    2f06:	08 95       	ret

00002f08 <WriteCommand>:
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    2f08:	88 b9       	out	0x08, r24	; 8
    2f0a:	5f 98       	cbi	0x0b, 7	; 11
    2f0c:	a1 98       	cbi	0x14, 1	; 20
    2f0e:	a2 98       	cbi	0x14, 2	; 20
    2f10:	00 00       	nop
    2f12:	a2 9a       	sbi	0x14, 2	; 20
    2f14:	00 00       	nop
    2f16:	08 95       	ret

00002f18 <WriteData>:
    2f18:	92 b9       	out	0x02, r25	; 2
    2f1a:	88 b9       	out	0x08, r24	; 8
    2f1c:	5f 9a       	sbi	0x0b, 7	; 11
    2f1e:	a1 98       	cbi	0x14, 1	; 20
    2f20:	a2 98       	cbi	0x14, 2	; 20
    2f22:	00 00       	nop
    2f24:	a2 9a       	sbi	0x14, 2	; 20
    2f26:	00 00       	nop
    2f28:	08 95       	ret

00002f2a <DisplayOn>:
    2f2a:	89 e2       	ldi	r24, 0x29	; 41
    2f2c:	ed cf       	rjmp	.-38     	; 0x2f08 <WriteCommand>
    2f2e:	08 95       	ret

00002f30 <SleepOut>:
    2f30:	81 e1       	ldi	r24, 0x11	; 17
    2f32:	ea cf       	rjmp	.-44     	; 0x2f08 <WriteCommand>
    2f34:	08 95       	ret

00002f36 <MemoryAccessControl>:
    2f36:	cf 93       	push	r28
    2f38:	c8 2f       	mov	r28, r24
    2f3a:	86 e3       	ldi	r24, 0x36	; 54
    2f3c:	e5 df       	rcall	.-54     	; 0x2f08 <WriteCommand>
    2f3e:	8c 2f       	mov	r24, r28
    2f40:	90 e0       	ldi	r25, 0x00	; 0
    2f42:	ea df       	rcall	.-44     	; 0x2f18 <WriteData>
    2f44:	cf 91       	pop	r28
    2f46:	08 95       	ret

00002f48 <InterfacePixelFormat>:
    2f48:	cf 93       	push	r28
    2f4a:	c8 2f       	mov	r28, r24
    2f4c:	8a e3       	ldi	r24, 0x3A	; 58
    2f4e:	dc df       	rcall	.-72     	; 0x2f08 <WriteCommand>
    2f50:	8c 2f       	mov	r24, r28
    2f52:	90 e0       	ldi	r25, 0x00	; 0
    2f54:	e1 df       	rcall	.-62     	; 0x2f18 <WriteData>
    2f56:	cf 91       	pop	r28
    2f58:	08 95       	ret

00002f5a <MemoryWrite>:
    2f5a:	8c e2       	ldi	r24, 0x2C	; 44
    2f5c:	d5 cf       	rjmp	.-86     	; 0x2f08 <WriteCommand>
    2f5e:	08 95       	ret

00002f60 <SetColumnAddress>:
	
}

// Set Column Address (0-239), Start > End
void SetColumnAddress(unsigned int Start, unsigned int End)
{
    2f60:	0f 93       	push	r16
    2f62:	1f 93       	push	r17
    2f64:	cf 93       	push	r28
    2f66:	df 93       	push	r29
    2f68:	08 2f       	mov	r16, r24
    2f6a:	d9 2f       	mov	r29, r25
    2f6c:	16 2f       	mov	r17, r22
    2f6e:	c7 2f       	mov	r28, r23
	WriteCommand(0x2A);
    2f70:	8a e2       	ldi	r24, 0x2A	; 42
    2f72:	ca df       	rcall	.-108    	; 0x2f08 <WriteCommand>
	WriteData(Start >> 8);
    2f74:	8d 2f       	mov	r24, r29
    2f76:	90 e0       	ldi	r25, 0x00	; 0
    2f78:	cf df       	rcall	.-98     	; 0x2f18 <WriteData>
	WriteData(Start);
    2f7a:	80 2f       	mov	r24, r16
    2f7c:	9d 2f       	mov	r25, r29
    2f7e:	cc df       	rcall	.-104    	; 0x2f18 <WriteData>
	WriteData(End >> 8);
    2f80:	8c 2f       	mov	r24, r28
    2f82:	90 e0       	ldi	r25, 0x00	; 0
    2f84:	c9 df       	rcall	.-110    	; 0x2f18 <WriteData>
	WriteData(End);
    2f86:	81 2f       	mov	r24, r17
    2f88:	9c 2f       	mov	r25, r28
    2f8a:	c6 df       	rcall	.-116    	; 0x2f18 <WriteData>
    2f8c:	df 91       	pop	r29
}
    2f8e:	cf 91       	pop	r28
    2f90:	1f 91       	pop	r17
    2f92:	0f 91       	pop	r16
    2f94:	08 95       	ret

00002f96 <SetPageAddress>:
    2f96:	0f 93       	push	r16

// Set Page Address (0-319), Start > End
void SetPageAddress(unsigned int Start, unsigned int End)
{
    2f98:	1f 93       	push	r17
    2f9a:	cf 93       	push	r28
    2f9c:	df 93       	push	r29
    2f9e:	08 2f       	mov	r16, r24
    2fa0:	d9 2f       	mov	r29, r25
    2fa2:	16 2f       	mov	r17, r22
    2fa4:	c7 2f       	mov	r28, r23
	WriteCommand(0x2B);
    2fa6:	8b e2       	ldi	r24, 0x2B	; 43
    2fa8:	af df       	rcall	.-162    	; 0x2f08 <WriteCommand>
	WriteData(Start >> 8);
    2faa:	8d 2f       	mov	r24, r29
    2fac:	90 e0       	ldi	r25, 0x00	; 0
    2fae:	b4 df       	rcall	.-152    	; 0x2f18 <WriteData>
	WriteData(Start);
    2fb0:	80 2f       	mov	r24, r16
    2fb2:	9d 2f       	mov	r25, r29
    2fb4:	b1 df       	rcall	.-158    	; 0x2f18 <WriteData>
	WriteData(End >> 8);
    2fb6:	8c 2f       	mov	r24, r28
    2fb8:	90 e0       	ldi	r25, 0x00	; 0
    2fba:	ae df       	rcall	.-164    	; 0x2f18 <WriteData>
	WriteData(End);
    2fbc:	81 2f       	mov	r24, r17
    2fbe:	9c 2f       	mov	r25, r28
    2fc0:	ab df       	rcall	.-170    	; 0x2f18 <WriteData>
    2fc2:	df 91       	pop	r29
	
}
    2fc4:	cf 91       	pop	r28
    2fc6:	1f 91       	pop	r17
    2fc8:	0f 91       	pop	r16
    2fca:	08 95       	ret

00002fcc <setDisplayNumberFont>:
    2fcc:	cf 93       	push	r28

void setDisplayNumberFont(unsigned int X_Position, unsigned int Y_Position) //S?tter page og column address s?ledes at det passer med font widt + font height. Der er lavet en funktion for hver font der bliver anvendt
{
    2fce:	df 93       	push	r29
    2fd0:	eb 01       	movw	r28, r22
	unsigned int Set_start_row = 0x00 | Y_Position;

	unsigned int Set_end_column = Set_start_column + Number_Font_Width-1; //(bytes -1 bit) 8 pixels = 1 byte, 16 pixels = 2 bytes
	unsigned int Set_end_row = Set_start_row + Number_Font_Height;
	
	SetColumnAddress(Set_start_column, Set_end_column);
    2fd2:	bc 01       	movw	r22, r24
    2fd4:	69 5e       	subi	r22, 0xE9	; 233
    2fd6:	7f 4f       	sbci	r23, 0xFF	; 255
    2fd8:	c3 df       	rcall	.-122    	; 0x2f60 <SetColumnAddress>
	
	SetPageAddress(Set_start_row, Set_end_row);
    2fda:	be 01       	movw	r22, r28
    2fdc:	6b 5d       	subi	r22, 0xDB	; 219
    2fde:	7f 4f       	sbci	r23, 0xFF	; 255
    2fe0:	ce 01       	movw	r24, r28

	MemoryWrite();
    2fe2:	d9 df       	rcall	.-78     	; 0x2f96 <SetPageAddress>
    2fe4:	ba df       	rcall	.-140    	; 0x2f5a <MemoryWrite>
	
}
    2fe6:	df 91       	pop	r29
    2fe8:	cf 91       	pop	r28
    2fea:	08 95       	ret

00002fec <setDisplayLetterFont>:

void setDisplayLetterFont(unsigned int X_Position, unsigned int Y_Position)
{
    2fec:	cf 93       	push	r28
    2fee:	df 93       	push	r29
    2ff0:	eb 01       	movw	r28, r22
	unsigned int Set_start_row = 0x00 | Y_Position;

	unsigned int Set_end_column = Set_start_column + Letter_Font_Width-1; //(bytes -1 bit) 8 pixels = 1 byte, 16 pixels = 2 bytes
	unsigned int Set_end_row = Set_start_row + Letter_Font_Height;
	
	SetColumnAddress(Set_start_column, Set_end_column);
    2ff2:	bc 01       	movw	r22, r24
    2ff4:	61 5f       	subi	r22, 0xF1	; 241
    2ff6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ff8:	b3 df       	rcall	.-154    	; 0x2f60 <SetColumnAddress>
	
	SetPageAddress(Set_start_row, Set_end_row);
    2ffa:	be 01       	movw	r22, r28
    2ffc:	6b 5e       	subi	r22, 0xEB	; 235
    2ffe:	7f 4f       	sbci	r23, 0xFF	; 255
    3000:	ce 01       	movw	r24, r28

	MemoryWrite();
    3002:	c9 df       	rcall	.-110    	; 0x2f96 <SetPageAddress>
    3004:	aa df       	rcall	.-172    	; 0x2f5a <MemoryWrite>
	
}
    3006:	df 91       	pop	r29
    3008:	cf 91       	pop	r28
    300a:	08 95       	ret

0000300c <setDisplayDotFont>:

void setDisplayDotFont(unsigned int X_Position, unsigned int Y_Position)
{
    300c:	cf 93       	push	r28
    300e:	df 93       	push	r29
    3010:	eb 01       	movw	r28, r22
	unsigned int Set_start_row = 0x00 | Y_Position;

	unsigned int Set_end_column = Set_start_column + Dot_Font_Width-1; //(bytes -1 bit) 8 pixels = 1 byte, 16 pixels = 2 bytes
	unsigned int Set_end_row = Set_start_row + Dot_Font_Height;
	
	SetColumnAddress(Set_start_column, Set_end_column);
    3012:	bc 01       	movw	r22, r24
    3014:	69 5f       	subi	r22, 0xF9	; 249
    3016:	7f 4f       	sbci	r23, 0xFF	; 255
    3018:	a3 df       	rcall	.-186    	; 0x2f60 <SetColumnAddress>
	
	SetPageAddress(Set_start_row, Set_end_row);
    301a:	be 01       	movw	r22, r28
    301c:	68 5f       	subi	r22, 0xF8	; 248
    301e:	7f 4f       	sbci	r23, 0xFF	; 255
    3020:	ce 01       	movw	r24, r28

	MemoryWrite();
    3022:	b9 df       	rcall	.-142    	; 0x2f96 <SetPageAddress>
    3024:	9a df       	rcall	.-204    	; 0x2f5a <MemoryWrite>
	
}
    3026:	df 91       	pop	r29
    3028:	cf 91       	pop	r28
    302a:	08 95       	ret

0000302c <setDisplayPromilleFont>:

void setDisplayPromilleFont(unsigned X_Position, unsigned int Y_Position, unsigned int ciphers)
{
    302c:	cf 93       	push	r28
    302e:	df 93       	push	r29
    3030:	eb 01       	movw	r28, r22
	unsigned int Set_start_row = 0x00 | Y_Position;

	unsigned int Set_end_column = Set_start_column + (Number_Font_Width-1)*(ciphers+1); //(bytes -1 bit) 8 pixels = 1 byte, 16 pixels = 2 bytes
	unsigned int Set_end_row = Set_start_row + Number_Font_Height;
	
	SetColumnAddress(Set_start_column, Set_end_column);
    3032:	4f 5f       	subi	r20, 0xFF	; 255
    3034:	5f 4f       	sbci	r21, 0xFF	; 255
    3036:	27 e1       	ldi	r18, 0x17	; 23
    3038:	24 9f       	mul	r18, r20
    303a:	b0 01       	movw	r22, r0
    303c:	25 9f       	mul	r18, r21
    303e:	70 0d       	add	r23, r0
    3040:	11 24       	eor	r1, r1
    3042:	68 0f       	add	r22, r24
    3044:	79 1f       	adc	r23, r25
    3046:	8c df       	rcall	.-232    	; 0x2f60 <SetColumnAddress>
	
	SetPageAddress(Set_start_row, Set_end_row);
    3048:	be 01       	movw	r22, r28
    304a:	6b 5d       	subi	r22, 0xDB	; 219
    304c:	7f 4f       	sbci	r23, 0xFF	; 255
    304e:	ce 01       	movw	r24, r28

	MemoryWrite();
    3050:	a2 df       	rcall	.-188    	; 0x2f96 <SetPageAddress>
    3052:	83 df       	rcall	.-250    	; 0x2f5a <MemoryWrite>

}
    3054:	df 91       	pop	r29
    3056:	cf 91       	pop	r28
    3058:	08 95       	ret

0000305a <clearPromille>:

unsigned int clearPromille(unsigned int X_Position, unsigned int Y_Position, unsigned char colour, unsigned int ciphers)
{
    305a:	cf 92       	push	r12
    305c:	df 92       	push	r13
    305e:	ef 92       	push	r14
    3060:	ff 92       	push	r15
    3062:	cf 93       	push	r28
    3064:	c4 2f       	mov	r28, r20
	static long int i;
	Background_Colour = 0x00 | colour;
    3066:	50 e0       	ldi	r21, 0x00	; 0
    3068:	50 93 a7 11 	sts	0x11A7, r21	; 0x8011a7 <Background_Colour+0x1>
    306c:	40 93 a6 11 	sts	0x11A6, r20	; 0x8011a6 <Background_Colour>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);
    3070:	a9 01       	movw	r20, r18
    3072:	dc df       	rcall	.-72     	; 0x302c <setDisplayPromilleFont>

	WriteCommand(0x2C); //Write Memory Start
    3074:	8c e2       	ldi	r24, 0x2C	; 44
    3076:	48 df       	rcall	.-368    	; 0x2f08 <WriteCommand>

	switch (colour)  {
    3078:	4c 2f       	mov	r20, r28
    307a:	50 e0       	ldi	r21, 0x00	; 0
    307c:	40 31       	cpi	r20, 0x10	; 16
    307e:	51 05       	cpc	r21, r1
    3080:	08 f0       	brcs	.+2      	; 0x3084 <clearPromille+0x2a>
    3082:	b6 c1       	rjmp	.+876    	; 0x33f0 <clearPromille+0x396>
    3084:	fa 01       	movw	r30, r20
    3086:	88 27       	eor	r24, r24
    3088:	ee 58       	subi	r30, 0x8E	; 142
    308a:	ff 4f       	sbci	r31, 0xFF	; 255
    308c:	8f 4f       	sbci	r24, 0xFF	; 255
    308e:	0c 94 e5 26 	jmp	0x4dca	; 0x4dca <__tablejump2__>
    3092:	c1 2c       	mov	r12, r1
    3094:	d1 2c       	mov	r13, r1
    3096:	76 01       	movw	r14, r12
    3098:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    309a:	80 e0       	ldi	r24, 0x00	; 0
    309c:	90 e0       	ldi	r25, 0x00	; 0
    309e:	3c df       	rcall	.-392    	; 0x2f18 <WriteData>

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {

		case 0:     for(i=0;i<76800;i++){
    30a0:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    30a4:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    30a8:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    30ac:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    30b0:	8f ef       	ldi	r24, 0xFF	; 255
    30b2:	c8 1a       	sub	r12, r24
    30b4:	d8 0a       	sbc	r13, r24
    30b6:	e8 0a       	sbc	r14, r24
    30b8:	f8 0a       	sbc	r15, r24
    30ba:	81 e0       	ldi	r24, 0x01	; 1
    30bc:	c8 16       	cp	r12, r24
    30be:	8c e2       	ldi	r24, 0x2C	; 44
    30c0:	d8 06       	cpc	r13, r24
    30c2:	81 e0       	ldi	r24, 0x01	; 1
    30c4:	e8 06       	cpc	r14, r24
    30c6:	f1 04       	cpc	r15, r1
    30c8:	41 f7       	brne	.-48     	; 0x309a <clearPromille+0x40>
    30ca:	ae c1       	rjmp	.+860    	; 0x3428 <clearPromille+0x3ce>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    30cc:	c1 2c       	mov	r12, r1
    30ce:	d1 2c       	mov	r13, r1
    30d0:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    30d2:	c3 94       	inc	r12
    30d4:	80 e0       	ldi	r24, 0x00	; 0
    30d6:	98 ef       	ldi	r25, 0xF8	; 248
    30d8:	1f df       	rcall	.-450    	; 0x2f18 <WriteData>
	switch (colour)  {

		case 0:     for(i=0;i<76800;i++){
			Black_Out;
		} break;
		case 2:     for(i=0;i<76800;i++){
    30da:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    30de:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    30e2:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    30e6:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    30ea:	8f ef       	ldi	r24, 0xFF	; 255
    30ec:	c8 1a       	sub	r12, r24
    30ee:	d8 0a       	sbc	r13, r24
    30f0:	e8 0a       	sbc	r14, r24
    30f2:	f8 0a       	sbc	r15, r24
    30f4:	81 e0       	ldi	r24, 0x01	; 1
    30f6:	c8 16       	cp	r12, r24
    30f8:	8c e2       	ldi	r24, 0x2C	; 44
    30fa:	d8 06       	cpc	r13, r24
    30fc:	81 e0       	ldi	r24, 0x01	; 1
    30fe:	e8 06       	cpc	r14, r24
    3100:	f1 04       	cpc	r15, r1
    3102:	41 f7       	brne	.-48     	; 0x30d4 <clearPromille+0x7a>
    3104:	91 c1       	rjmp	.+802    	; 0x3428 <clearPromille+0x3ce>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    3106:	c1 2c       	mov	r12, r1
    3108:	d1 2c       	mov	r13, r1
    310a:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    310c:	c3 94       	inc	r12
    310e:	80 e6       	ldi	r24, 0x60	; 96
    3110:	9b ef       	ldi	r25, 0xFB	; 251
    3112:	02 df       	rcall	.-508    	; 0x2f18 <WriteData>
			Black_Out;
		} break;
		case 2:     for(i=0;i<76800;i++){
			Red_Out;
		} break;
		case 3:     for(i=0;i<76800;i++){
    3114:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    3118:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    311c:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    3120:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    3124:	8f ef       	ldi	r24, 0xFF	; 255
    3126:	c8 1a       	sub	r12, r24
    3128:	d8 0a       	sbc	r13, r24
    312a:	e8 0a       	sbc	r14, r24
    312c:	f8 0a       	sbc	r15, r24
    312e:	81 e0       	ldi	r24, 0x01	; 1
    3130:	c8 16       	cp	r12, r24
    3132:	8c e2       	ldi	r24, 0x2C	; 44
    3134:	d8 06       	cpc	r13, r24
    3136:	81 e0       	ldi	r24, 0x01	; 1
    3138:	e8 06       	cpc	r14, r24
    313a:	f1 04       	cpc	r15, r1
    313c:	41 f7       	brne	.-48     	; 0x310e <clearPromille+0xb4>
    313e:	74 c1       	rjmp	.+744    	; 0x3428 <clearPromille+0x3ce>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    3140:	c1 2c       	mov	r12, r1
    3142:	d1 2c       	mov	r13, r1
    3144:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    3146:	c3 94       	inc	r12
    3148:	80 ee       	ldi	r24, 0xE0	; 224
    314a:	9f ef       	ldi	r25, 0xFF	; 255
    314c:	e5 de       	rcall	.-566    	; 0x2f18 <WriteData>
			Red_Out;
		} break;
		case 3:     for(i=0;i<76800;i++){
			Orange_Out;
		} break;
		case 4:     for(i=0;i<76800;i++){
    314e:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    3152:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    3156:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    315a:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    315e:	8f ef       	ldi	r24, 0xFF	; 255
    3160:	c8 1a       	sub	r12, r24
    3162:	d8 0a       	sbc	r13, r24
    3164:	e8 0a       	sbc	r14, r24
    3166:	f8 0a       	sbc	r15, r24
    3168:	81 e0       	ldi	r24, 0x01	; 1
    316a:	c8 16       	cp	r12, r24
    316c:	8c e2       	ldi	r24, 0x2C	; 44
    316e:	d8 06       	cpc	r13, r24
    3170:	81 e0       	ldi	r24, 0x01	; 1
    3172:	e8 06       	cpc	r14, r24
    3174:	f1 04       	cpc	r15, r1
    3176:	41 f7       	brne	.-48     	; 0x3148 <clearPromille+0xee>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    3178:	57 c1       	rjmp	.+686    	; 0x3428 <clearPromille+0x3ce>
    317a:	c1 2c       	mov	r12, r1
    317c:	d1 2c       	mov	r13, r1
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    317e:	76 01       	movw	r14, r12
    3180:	80 ee       	ldi	r24, 0xE0	; 224
    3182:	9f e1       	ldi	r25, 0x1F	; 31
    3184:	c9 de       	rcall	.-622    	; 0x2f18 <WriteData>
			Orange_Out;
		} break;
		case 4:     for(i=0;i<76800;i++){
			Yellow_Out;
		} break;
		case 5:     for(i=0;i<76800;i++){
    3186:	8f ef       	ldi	r24, 0xFF	; 255
    3188:	c8 1a       	sub	r12, r24
    318a:	d8 0a       	sbc	r13, r24
    318c:	e8 0a       	sbc	r14, r24
    318e:	f8 0a       	sbc	r15, r24
    3190:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    3194:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    3198:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    319c:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    31a0:	c1 14       	cp	r12, r1
    31a2:	8c e2       	ldi	r24, 0x2C	; 44
    31a4:	d8 06       	cpc	r13, r24
    31a6:	81 e0       	ldi	r24, 0x01	; 1
    31a8:	e8 06       	cpc	r14, r24
    31aa:	f1 04       	cpc	r15, r1
    31ac:	49 f7       	brne	.-46     	; 0x3180 <clearPromille+0x126>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    31ae:	3c c1       	rjmp	.+632    	; 0x3428 <clearPromille+0x3ce>
    31b0:	c1 2c       	mov	r12, r1
    31b2:	d1 2c       	mov	r13, r1
    31b4:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    31b6:	c3 94       	inc	r12
    31b8:	8f ef       	ldi	r24, 0xFF	; 255
    31ba:	90 e0       	ldi	r25, 0x00	; 0
    31bc:	ad de       	rcall	.-678    	; 0x2f18 <WriteData>
			Yellow_Out;
		} break;
		case 5:     for(i=0;i<76800;i++){
			Green_Out;
		} break;
		case 6:     for(i=0;i<76800;i++){
    31be:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    31c2:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    31c6:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    31ca:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    31ce:	8f ef       	ldi	r24, 0xFF	; 255
    31d0:	c8 1a       	sub	r12, r24
    31d2:	d8 0a       	sbc	r13, r24
    31d4:	e8 0a       	sbc	r14, r24
    31d6:	f8 0a       	sbc	r15, r24
    31d8:	81 e0       	ldi	r24, 0x01	; 1
    31da:	c8 16       	cp	r12, r24
    31dc:	8c e2       	ldi	r24, 0x2C	; 44
    31de:	d8 06       	cpc	r13, r24
    31e0:	81 e0       	ldi	r24, 0x01	; 1
    31e2:	e8 06       	cpc	r14, r24
    31e4:	f1 04       	cpc	r15, r1
    31e6:	41 f7       	brne	.-48     	; 0x31b8 <clearPromille+0x15e>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    31e8:	1f c1       	rjmp	.+574    	; 0x3428 <clearPromille+0x3ce>
    31ea:	c1 2c       	mov	r12, r1
    31ec:	d1 2c       	mov	r13, r1
    31ee:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    31f0:	c3 94       	inc	r12
    31f2:	8f ef       	ldi	r24, 0xFF	; 255
    31f4:	90 e2       	ldi	r25, 0x20	; 32
    31f6:	90 de       	rcall	.-736    	; 0x2f18 <WriteData>
			Green_Out;
		} break;
		case 6:     for(i=0;i<76800;i++){
			Blue_Out;
		} break;
		case 7:     for(i=0;i<76800;i++){
    31f8:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    31fc:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    3200:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    3204:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    3208:	8f ef       	ldi	r24, 0xFF	; 255
    320a:	c8 1a       	sub	r12, r24
    320c:	d8 0a       	sbc	r13, r24
    320e:	e8 0a       	sbc	r14, r24
    3210:	f8 0a       	sbc	r15, r24
    3212:	81 e0       	ldi	r24, 0x01	; 1
    3214:	c8 16       	cp	r12, r24
    3216:	8c e2       	ldi	r24, 0x2C	; 44
    3218:	d8 06       	cpc	r13, r24
    321a:	81 e0       	ldi	r24, 0x01	; 1
    321c:	e8 06       	cpc	r14, r24
    321e:	f1 04       	cpc	r15, r1
    3220:	41 f7       	brne	.-48     	; 0x31f2 <clearPromille+0x198>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    3222:	02 c1       	rjmp	.+516    	; 0x3428 <clearPromille+0x3ce>
    3224:	c1 2c       	mov	r12, r1
    3226:	d1 2c       	mov	r13, r1
    3228:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    322a:	c3 94       	inc	r12
    322c:	80 e8       	ldi	r24, 0x80	; 128
    322e:	90 e1       	ldi	r25, 0x10	; 16
    3230:	73 de       	rcall	.-794    	; 0x2f18 <WriteData>
			Blue_Out;
		} break;
		case 7:     for(i=0;i<76800;i++){
			Violet_Out;
		} break;
		case 8:     for(i=0;i<76800;i++){
    3232:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    3236:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    323a:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    323e:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    3242:	8f ef       	ldi	r24, 0xFF	; 255
    3244:	c8 1a       	sub	r12, r24
    3246:	d8 0a       	sbc	r13, r24
    3248:	e8 0a       	sbc	r14, r24
    324a:	f8 0a       	sbc	r15, r24
    324c:	81 e0       	ldi	r24, 0x01	; 1
    324e:	c8 16       	cp	r12, r24
    3250:	8c e2       	ldi	r24, 0x2C	; 44
    3252:	d8 06       	cpc	r13, r24
    3254:	81 e0       	ldi	r24, 0x01	; 1
    3256:	e8 06       	cpc	r14, r24
    3258:	f1 04       	cpc	r15, r1
    325a:	41 f7       	brne	.-48     	; 0x322c <clearPromille+0x1d2>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    325c:	e5 c0       	rjmp	.+458    	; 0x3428 <clearPromille+0x3ce>
    325e:	c1 2c       	mov	r12, r1
    3260:	d1 2c       	mov	r13, r1
    3262:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    3264:	c3 94       	inc	r12
    3266:	8f ef       	ldi	r24, 0xFF	; 255
    3268:	9f ef       	ldi	r25, 0xFF	; 255
    326a:	56 de       	rcall	.-852    	; 0x2f18 <WriteData>
			Violet_Out;
		} break;
		case 8:     for(i=0;i<76800;i++){
			Gray_Out;
		} break;
		case 9:     for(i=0;i<76800;i++){
    326c:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    3270:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    3274:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    3278:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    327c:	8f ef       	ldi	r24, 0xFF	; 255
    327e:	c8 1a       	sub	r12, r24
    3280:	d8 0a       	sbc	r13, r24
    3282:	e8 0a       	sbc	r14, r24
    3284:	f8 0a       	sbc	r15, r24
    3286:	81 e0       	ldi	r24, 0x01	; 1
    3288:	c8 16       	cp	r12, r24
    328a:	8c e2       	ldi	r24, 0x2C	; 44
    328c:	d8 06       	cpc	r13, r24
    328e:	81 e0       	ldi	r24, 0x01	; 1
    3290:	e8 06       	cpc	r14, r24
    3292:	f1 04       	cpc	r15, r1
    3294:	41 f7       	brne	.-48     	; 0x3266 <clearPromille+0x20c>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    3296:	c8 c0       	rjmp	.+400    	; 0x3428 <clearPromille+0x3ce>
    3298:	c1 2c       	mov	r12, r1
    329a:	d1 2c       	mov	r13, r1
    329c:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    329e:	c3 94       	inc	r12
    32a0:	8f ef       	ldi	r24, 0xFF	; 255
    32a2:	98 ef       	ldi	r25, 0xF8	; 248
    32a4:	39 de       	rcall	.-910    	; 0x2f18 <WriteData>
			Gray_Out;
		} break;
		case 9:     for(i=0;i<76800;i++){
			White_Out;
		} break;
		case 10:    for(i=0;i<76800;i++){
    32a6:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    32aa:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    32ae:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    32b2:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    32b6:	8f ef       	ldi	r24, 0xFF	; 255
    32b8:	c8 1a       	sub	r12, r24
    32ba:	d8 0a       	sbc	r13, r24
    32bc:	e8 0a       	sbc	r14, r24
    32be:	f8 0a       	sbc	r15, r24
    32c0:	81 e0       	ldi	r24, 0x01	; 1
    32c2:	c8 16       	cp	r12, r24
    32c4:	8c e2       	ldi	r24, 0x2C	; 44
    32c6:	d8 06       	cpc	r13, r24
    32c8:	81 e0       	ldi	r24, 0x01	; 1
    32ca:	e8 06       	cpc	r14, r24
    32cc:	f1 04       	cpc	r15, r1
    32ce:	41 f7       	brne	.-48     	; 0x32a0 <clearPromille+0x246>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    32d0:	ab c0       	rjmp	.+342    	; 0x3428 <clearPromille+0x3ce>
    32d2:	c1 2c       	mov	r12, r1
    32d4:	d1 2c       	mov	r13, r1
    32d6:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    32d8:	c3 94       	inc	r12
    32da:	80 ee       	ldi	r24, 0xE0	; 224
    32dc:	9f e7       	ldi	r25, 0x7F	; 127
    32de:	1c de       	rcall	.-968    	; 0x2f18 <WriteData>
			White_Out;
		} break;
		case 10:    for(i=0;i<76800;i++){
			Magenta_Out;
		} break;
		case 11:    for(i=0;i<76800;i++){
    32e0:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    32e4:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    32e8:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    32ec:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    32f0:	8f ef       	ldi	r24, 0xFF	; 255
    32f2:	c8 1a       	sub	r12, r24
    32f4:	d8 0a       	sbc	r13, r24
    32f6:	e8 0a       	sbc	r14, r24
    32f8:	f8 0a       	sbc	r15, r24
    32fa:	81 e0       	ldi	r24, 0x01	; 1
    32fc:	c8 16       	cp	r12, r24
    32fe:	8c e2       	ldi	r24, 0x2C	; 44
    3300:	d8 06       	cpc	r13, r24
    3302:	81 e0       	ldi	r24, 0x01	; 1
    3304:	e8 06       	cpc	r14, r24
    3306:	f1 04       	cpc	r15, r1
    3308:	41 f7       	brne	.-48     	; 0x32da <clearPromille+0x280>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    330a:	8e c0       	rjmp	.+284    	; 0x3428 <clearPromille+0x3ce>
    330c:	c1 2c       	mov	r12, r1
    330e:	d1 2c       	mov	r13, r1
    3310:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    3312:	c3 94       	inc	r12
    3314:	8e ec       	ldi	r24, 0xCE	; 206
    3316:	9f e7       	ldi	r25, 0x7F	; 127
    3318:	ff dd       	rcall	.-1026   	; 0x2f18 <WriteData>
			Magenta_Out;
		} break;
		case 11:    for(i=0;i<76800;i++){
			Lime_Out;
		} break;
		case 12:    for(i=0;i<76800;i++){
    331a:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    331e:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    3322:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    3326:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    332a:	8f ef       	ldi	r24, 0xFF	; 255
    332c:	c8 1a       	sub	r12, r24
    332e:	d8 0a       	sbc	r13, r24
    3330:	e8 0a       	sbc	r14, r24
    3332:	f8 0a       	sbc	r15, r24
    3334:	81 e0       	ldi	r24, 0x01	; 1
    3336:	c8 16       	cp	r12, r24
    3338:	8c e2       	ldi	r24, 0x2C	; 44
    333a:	d8 06       	cpc	r13, r24
    333c:	81 e0       	ldi	r24, 0x01	; 1
    333e:	e8 06       	cpc	r14, r24
    3340:	f1 04       	cpc	r15, r1
    3342:	41 f7       	brne	.-48     	; 0x3314 <clearPromille+0x2ba>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    3344:	71 c0       	rjmp	.+226    	; 0x3428 <clearPromille+0x3ce>
    3346:	c1 2c       	mov	r12, r1
    3348:	d1 2c       	mov	r13, r1
    334a:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    334c:	c3 94       	inc	r12
    334e:	8f ef       	ldi	r24, 0xFF	; 255
    3350:	9f e1       	ldi	r25, 0x1F	; 31
    3352:	e2 dd       	rcall	.-1084   	; 0x2f18 <WriteData>
			Lime_Out;
		} break;
		case 12:    for(i=0;i<76800;i++){
			Baby_Powder_Out;
		} break;
		case 13:    for(i=0;i<76800;i++){
    3354:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    3358:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    335c:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    3360:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    3364:	8f ef       	ldi	r24, 0xFF	; 255
    3366:	c8 1a       	sub	r12, r24
    3368:	d8 0a       	sbc	r13, r24
    336a:	e8 0a       	sbc	r14, r24
    336c:	f8 0a       	sbc	r15, r24
    336e:	81 e0       	ldi	r24, 0x01	; 1
    3370:	c8 16       	cp	r12, r24
    3372:	8c e2       	ldi	r24, 0x2C	; 44
    3374:	d8 06       	cpc	r13, r24
    3376:	81 e0       	ldi	r24, 0x01	; 1
    3378:	e8 06       	cpc	r14, r24
    337a:	f1 04       	cpc	r15, r1
    337c:	41 f7       	brne	.-48     	; 0x334e <clearPromille+0x2f4>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    337e:	54 c0       	rjmp	.+168    	; 0x3428 <clearPromille+0x3ce>
    3380:	c1 2c       	mov	r12, r1
    3382:	d1 2c       	mov	r13, r1
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    3384:	76 01       	movw	r14, r12
    3386:	85 ef       	ldi	r24, 0xF5	; 245
    3388:	9e ef       	ldi	r25, 0xFE	; 254
    338a:	c6 dd       	rcall	.-1140   	; 0x2f18 <WriteData>
			Baby_Powder_Out;
		} break;
		case 13:    for(i=0;i<76800;i++){
			Cyan_Out;
		} break;
		case 14:    for(i=0;i<76800;i++){
    338c:	8f ef       	ldi	r24, 0xFF	; 255
    338e:	c8 1a       	sub	r12, r24
    3390:	d8 0a       	sbc	r13, r24
    3392:	e8 0a       	sbc	r14, r24
    3394:	f8 0a       	sbc	r15, r24
    3396:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    339a:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    339e:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    33a2:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    33a6:	c1 14       	cp	r12, r1
    33a8:	8c e2       	ldi	r24, 0x2C	; 44
    33aa:	d8 06       	cpc	r13, r24
    33ac:	81 e0       	ldi	r24, 0x01	; 1
    33ae:	e8 06       	cpc	r14, r24
    33b0:	f1 04       	cpc	r15, r1
    33b2:	49 f7       	brne	.-46     	; 0x3386 <clearPromille+0x32c>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    33b4:	39 c0       	rjmp	.+114    	; 0x3428 <clearPromille+0x3ce>
    33b6:	c1 2c       	mov	r12, r1
    33b8:	d1 2c       	mov	r13, r1
    33ba:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    33bc:	c3 94       	inc	r12
    33be:	87 eb       	ldi	r24, 0xB7	; 183
    33c0:	9f e7       	ldi	r25, 0x7F	; 127
    33c2:	aa dd       	rcall	.-1196   	; 0x2f18 <WriteData>
			Cyan_Out;
		} break;
		case 14:    for(i=0;i<76800;i++){
			Lavenderblush_Out;
		} break;
		case 15:    for(i=0;i<76800;i++){
    33c4:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    33c8:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    33cc:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    33d0:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    33d4:	8f ef       	ldi	r24, 0xFF	; 255
    33d6:	c8 1a       	sub	r12, r24
    33d8:	d8 0a       	sbc	r13, r24
    33da:	e8 0a       	sbc	r14, r24
    33dc:	f8 0a       	sbc	r15, r24
    33de:	81 e0       	ldi	r24, 0x01	; 1
    33e0:	c8 16       	cp	r12, r24
    33e2:	8c e2       	ldi	r24, 0x2C	; 44
    33e4:	d8 06       	cpc	r13, r24
    33e6:	81 e0       	ldi	r24, 0x01	; 1
    33e8:	e8 06       	cpc	r14, r24
    33ea:	f1 04       	cpc	r15, r1
    33ec:	41 f7       	brne	.-48     	; 0x33be <clearPromille+0x364>
	
	setDisplayPromilleFont(X_Position, Y_Position, ciphers);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    33ee:	1c c0       	rjmp	.+56     	; 0x3428 <clearPromille+0x3ce>
    33f0:	c1 2c       	mov	r12, r1
    33f2:	d1 2c       	mov	r13, r1
    33f4:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    33f6:	c3 94       	inc	r12
    33f8:	8e ec       	ldi	r24, 0xCE	; 206
    33fa:	9f e7       	ldi	r25, 0x7F	; 127
    33fc:	8d dd       	rcall	.-1254   	; 0x2f18 <WriteData>
			Lavenderblush_Out;
		} break;
		case 15:    for(i=0;i<76800;i++){
			Beige_Out;
		} break;
		default:    for(i=0;i<76800;i++){
    33fe:	c0 92 7f 11 	sts	0x117F, r12	; 0x80117f <i.2425>
    3402:	d0 92 80 11 	sts	0x1180, r13	; 0x801180 <i.2425+0x1>
    3406:	e0 92 81 11 	sts	0x1181, r14	; 0x801181 <i.2425+0x2>
    340a:	f0 92 82 11 	sts	0x1182, r15	; 0x801182 <i.2425+0x3>
    340e:	8f ef       	ldi	r24, 0xFF	; 255
    3410:	c8 1a       	sub	r12, r24
    3412:	d8 0a       	sbc	r13, r24
    3414:	e8 0a       	sbc	r14, r24
    3416:	f8 0a       	sbc	r15, r24
    3418:	81 e0       	ldi	r24, 0x01	; 1
    341a:	c8 16       	cp	r12, r24
    341c:	8c e2       	ldi	r24, 0x2C	; 44
    341e:	d8 06       	cpc	r13, r24
    3420:	81 e0       	ldi	r24, 0x01	; 1
    3422:	e8 06       	cpc	r14, r24
    3424:	f1 04       	cpc	r15, r1
    3426:	41 f7       	brne	.-48     	; 0x33f8 <clearPromille+0x39e>
			Baby_Powder_Out;
		} break;
	}
	return Background_Colour;
}
    3428:	80 91 a6 11 	lds	r24, 0x11A6	; 0x8011a6 <Background_Colour>
    342c:	90 91 a7 11 	lds	r25, 0x11A7	; 0x8011a7 <Background_Colour+0x1>
    3430:	cf 91       	pop	r28
    3432:	ff 90       	pop	r15
    3434:	ef 90       	pop	r14
    3436:	df 90       	pop	r13
    3438:	cf 90       	pop	r12
    343a:	08 95       	ret

0000343c <ClearScreen>:

unsigned int ClearScreen(unsigned char colour)
{
    343c:	cf 92       	push	r12
    343e:	df 92       	push	r13
    3440:	ef 92       	push	r14
    3442:	ff 92       	push	r15
    3444:	cf 93       	push	r28
    3446:	c8 2f       	mov	r28, r24
	static long int i;
	Background_Colour = 0x00 | colour;
    3448:	90 e0       	ldi	r25, 0x00	; 0
    344a:	90 93 a7 11 	sts	0x11A7, r25	; 0x8011a7 <Background_Colour+0x1>
    344e:	80 93 a6 11 	sts	0x11A6, r24	; 0x8011a6 <Background_Colour>
	
	SetColumnAddress(0, 239);
    3452:	6f ee       	ldi	r22, 0xEF	; 239
    3454:	70 e0       	ldi	r23, 0x00	; 0
    3456:	80 e0       	ldi	r24, 0x00	; 0
    3458:	90 e0       	ldi	r25, 0x00	; 0
    345a:	82 dd       	rcall	.-1276   	; 0x2f60 <SetColumnAddress>
	SetPageAddress(0, 319);
    345c:	6f e3       	ldi	r22, 0x3F	; 63
    345e:	71 e0       	ldi	r23, 0x01	; 1
    3460:	80 e0       	ldi	r24, 0x00	; 0
    3462:	90 e0       	ldi	r25, 0x00	; 0
    3464:	98 dd       	rcall	.-1232   	; 0x2f96 <SetPageAddress>

	WriteCommand(0x2C); //Write Memory Start
    3466:	8c e2       	ldi	r24, 0x2C	; 44
    3468:	4f dd       	rcall	.-1378   	; 0x2f08 <WriteCommand>
    346a:	8c 2f       	mov	r24, r28

	switch (colour)  {
    346c:	90 e0       	ldi	r25, 0x00	; 0
    346e:	80 31       	cpi	r24, 0x10	; 16
    3470:	91 05       	cpc	r25, r1
    3472:	08 f0       	brcs	.+2      	; 0x3476 <ClearScreen+0x3a>
    3474:	b6 c1       	rjmp	.+876    	; 0x37e2 <ClearScreen+0x3a6>
    3476:	fc 01       	movw	r30, r24
    3478:	88 27       	eor	r24, r24
    347a:	ee 57       	subi	r30, 0x7E	; 126
    347c:	ff 4f       	sbci	r31, 0xFF	; 255
    347e:	8f 4f       	sbci	r24, 0xFF	; 255
    3480:	0c 94 e5 26 	jmp	0x4dca	; 0x4dca <__tablejump2__>
    3484:	c1 2c       	mov	r12, r1
    3486:	d1 2c       	mov	r13, r1
    3488:	76 01       	movw	r14, r12
    348a:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    348c:	80 e0       	ldi	r24, 0x00	; 0
    348e:	90 e0       	ldi	r25, 0x00	; 0
    3490:	43 dd       	rcall	.-1402   	; 0x2f18 <WriteData>
    3492:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {

		case 0:     for(i=0;i<76800;i++){
    3496:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    349a:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    349e:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    34a2:	8f ef       	ldi	r24, 0xFF	; 255
    34a4:	c8 1a       	sub	r12, r24
    34a6:	d8 0a       	sbc	r13, r24
    34a8:	e8 0a       	sbc	r14, r24
    34aa:	f8 0a       	sbc	r15, r24
    34ac:	81 e0       	ldi	r24, 0x01	; 1
    34ae:	c8 16       	cp	r12, r24
    34b0:	8c e2       	ldi	r24, 0x2C	; 44
    34b2:	d8 06       	cpc	r13, r24
    34b4:	81 e0       	ldi	r24, 0x01	; 1
    34b6:	e8 06       	cpc	r14, r24
    34b8:	f1 04       	cpc	r15, r1
    34ba:	41 f7       	brne	.-48     	; 0x348c <ClearScreen+0x50>
    34bc:	ae c1       	rjmp	.+860    	; 0x381a <ClearScreen+0x3de>
    34be:	c1 2c       	mov	r12, r1
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    34c0:	d1 2c       	mov	r13, r1
    34c2:	76 01       	movw	r14, r12
    34c4:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    34c6:	80 e0       	ldi	r24, 0x00	; 0
    34c8:	98 ef       	ldi	r25, 0xF8	; 248
    34ca:	26 dd       	rcall	.-1460   	; 0x2f18 <WriteData>
    34cc:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
	switch (colour)  {

		case 0:     for(i=0;i<76800;i++){
			Black_Out;
		} break;
		case 2:     for(i=0;i<76800;i++){
    34d0:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    34d4:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    34d8:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    34dc:	8f ef       	ldi	r24, 0xFF	; 255
    34de:	c8 1a       	sub	r12, r24
    34e0:	d8 0a       	sbc	r13, r24
    34e2:	e8 0a       	sbc	r14, r24
    34e4:	f8 0a       	sbc	r15, r24
    34e6:	81 e0       	ldi	r24, 0x01	; 1
    34e8:	c8 16       	cp	r12, r24
    34ea:	8c e2       	ldi	r24, 0x2C	; 44
    34ec:	d8 06       	cpc	r13, r24
    34ee:	81 e0       	ldi	r24, 0x01	; 1
    34f0:	e8 06       	cpc	r14, r24
    34f2:	f1 04       	cpc	r15, r1
    34f4:	41 f7       	brne	.-48     	; 0x34c6 <ClearScreen+0x8a>
    34f6:	91 c1       	rjmp	.+802    	; 0x381a <ClearScreen+0x3de>
    34f8:	c1 2c       	mov	r12, r1
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    34fa:	d1 2c       	mov	r13, r1
    34fc:	76 01       	movw	r14, r12
    34fe:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    3500:	80 e6       	ldi	r24, 0x60	; 96
    3502:	9b ef       	ldi	r25, 0xFB	; 251
    3504:	09 dd       	rcall	.-1518   	; 0x2f18 <WriteData>
    3506:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			Black_Out;
		} break;
		case 2:     for(i=0;i<76800;i++){
			Red_Out;
		} break;
		case 3:     for(i=0;i<76800;i++){
    350a:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    350e:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    3512:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    3516:	8f ef       	ldi	r24, 0xFF	; 255
    3518:	c8 1a       	sub	r12, r24
    351a:	d8 0a       	sbc	r13, r24
    351c:	e8 0a       	sbc	r14, r24
    351e:	f8 0a       	sbc	r15, r24
    3520:	81 e0       	ldi	r24, 0x01	; 1
    3522:	c8 16       	cp	r12, r24
    3524:	8c e2       	ldi	r24, 0x2C	; 44
    3526:	d8 06       	cpc	r13, r24
    3528:	81 e0       	ldi	r24, 0x01	; 1
    352a:	e8 06       	cpc	r14, r24
    352c:	f1 04       	cpc	r15, r1
    352e:	41 f7       	brne	.-48     	; 0x3500 <ClearScreen+0xc4>
    3530:	74 c1       	rjmp	.+744    	; 0x381a <ClearScreen+0x3de>
    3532:	c1 2c       	mov	r12, r1
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    3534:	d1 2c       	mov	r13, r1
    3536:	76 01       	movw	r14, r12
    3538:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    353a:	80 ee       	ldi	r24, 0xE0	; 224
    353c:	9f ef       	ldi	r25, 0xFF	; 255
    353e:	ec dc       	rcall	.-1576   	; 0x2f18 <WriteData>
    3540:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			Red_Out;
		} break;
		case 3:     for(i=0;i<76800;i++){
			Orange_Out;
		} break;
		case 4:     for(i=0;i<76800;i++){
    3544:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    3548:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    354c:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    3550:	8f ef       	ldi	r24, 0xFF	; 255
    3552:	c8 1a       	sub	r12, r24
    3554:	d8 0a       	sbc	r13, r24
    3556:	e8 0a       	sbc	r14, r24
    3558:	f8 0a       	sbc	r15, r24
    355a:	81 e0       	ldi	r24, 0x01	; 1
    355c:	c8 16       	cp	r12, r24
    355e:	8c e2       	ldi	r24, 0x2C	; 44
    3560:	d8 06       	cpc	r13, r24
    3562:	81 e0       	ldi	r24, 0x01	; 1
    3564:	e8 06       	cpc	r14, r24
    3566:	f1 04       	cpc	r15, r1
    3568:	41 f7       	brne	.-48     	; 0x353a <ClearScreen+0xfe>
    356a:	57 c1       	rjmp	.+686    	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    356c:	c1 2c       	mov	r12, r1
    356e:	d1 2c       	mov	r13, r1
    3570:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    3572:	80 ee       	ldi	r24, 0xE0	; 224
    3574:	9f e1       	ldi	r25, 0x1F	; 31
    3576:	d0 dc       	rcall	.-1632   	; 0x2f18 <WriteData>
    3578:	8f ef       	ldi	r24, 0xFF	; 255
			Orange_Out;
		} break;
		case 4:     for(i=0;i<76800;i++){
			Yellow_Out;
		} break;
		case 5:     for(i=0;i<76800;i++){
    357a:	c8 1a       	sub	r12, r24
    357c:	d8 0a       	sbc	r13, r24
    357e:	e8 0a       	sbc	r14, r24
    3580:	f8 0a       	sbc	r15, r24
    3582:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
    3586:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    358a:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    358e:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    3592:	c1 14       	cp	r12, r1
    3594:	8c e2       	ldi	r24, 0x2C	; 44
    3596:	d8 06       	cpc	r13, r24
    3598:	81 e0       	ldi	r24, 0x01	; 1
    359a:	e8 06       	cpc	r14, r24
    359c:	f1 04       	cpc	r15, r1
    359e:	49 f7       	brne	.-46     	; 0x3572 <ClearScreen+0x136>
    35a0:	3c c1       	rjmp	.+632    	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    35a2:	c1 2c       	mov	r12, r1
    35a4:	d1 2c       	mov	r13, r1
    35a6:	76 01       	movw	r14, r12
    35a8:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    35aa:	8f ef       	ldi	r24, 0xFF	; 255
    35ac:	90 e0       	ldi	r25, 0x00	; 0
    35ae:	b4 dc       	rcall	.-1688   	; 0x2f18 <WriteData>
    35b0:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			Yellow_Out;
		} break;
		case 5:     for(i=0;i<76800;i++){
			Green_Out;
		} break;
		case 6:     for(i=0;i<76800;i++){
    35b4:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    35b8:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    35bc:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    35c0:	8f ef       	ldi	r24, 0xFF	; 255
    35c2:	c8 1a       	sub	r12, r24
    35c4:	d8 0a       	sbc	r13, r24
    35c6:	e8 0a       	sbc	r14, r24
    35c8:	f8 0a       	sbc	r15, r24
    35ca:	81 e0       	ldi	r24, 0x01	; 1
    35cc:	c8 16       	cp	r12, r24
    35ce:	8c e2       	ldi	r24, 0x2C	; 44
    35d0:	d8 06       	cpc	r13, r24
    35d2:	81 e0       	ldi	r24, 0x01	; 1
    35d4:	e8 06       	cpc	r14, r24
    35d6:	f1 04       	cpc	r15, r1
    35d8:	41 f7       	brne	.-48     	; 0x35aa <ClearScreen+0x16e>
    35da:	1f c1       	rjmp	.+574    	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    35dc:	c1 2c       	mov	r12, r1
    35de:	d1 2c       	mov	r13, r1
    35e0:	76 01       	movw	r14, r12
    35e2:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    35e4:	8f ef       	ldi	r24, 0xFF	; 255
    35e6:	90 e2       	ldi	r25, 0x20	; 32
    35e8:	97 dc       	rcall	.-1746   	; 0x2f18 <WriteData>
    35ea:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			Green_Out;
		} break;
		case 6:     for(i=0;i<76800;i++){
			Blue_Out;
		} break;
		case 7:     for(i=0;i<76800;i++){
    35ee:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    35f2:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    35f6:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    35fa:	8f ef       	ldi	r24, 0xFF	; 255
    35fc:	c8 1a       	sub	r12, r24
    35fe:	d8 0a       	sbc	r13, r24
    3600:	e8 0a       	sbc	r14, r24
    3602:	f8 0a       	sbc	r15, r24
    3604:	81 e0       	ldi	r24, 0x01	; 1
    3606:	c8 16       	cp	r12, r24
    3608:	8c e2       	ldi	r24, 0x2C	; 44
    360a:	d8 06       	cpc	r13, r24
    360c:	81 e0       	ldi	r24, 0x01	; 1
    360e:	e8 06       	cpc	r14, r24
    3610:	f1 04       	cpc	r15, r1
    3612:	41 f7       	brne	.-48     	; 0x35e4 <ClearScreen+0x1a8>
    3614:	02 c1       	rjmp	.+516    	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    3616:	c1 2c       	mov	r12, r1
    3618:	d1 2c       	mov	r13, r1
    361a:	76 01       	movw	r14, r12
    361c:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    361e:	80 e8       	ldi	r24, 0x80	; 128
    3620:	90 e1       	ldi	r25, 0x10	; 16
    3622:	7a dc       	rcall	.-1804   	; 0x2f18 <WriteData>
    3624:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			Blue_Out;
		} break;
		case 7:     for(i=0;i<76800;i++){
			Violet_Out;
		} break;
		case 8:     for(i=0;i<76800;i++){
    3628:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    362c:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    3630:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    3634:	8f ef       	ldi	r24, 0xFF	; 255
    3636:	c8 1a       	sub	r12, r24
    3638:	d8 0a       	sbc	r13, r24
    363a:	e8 0a       	sbc	r14, r24
    363c:	f8 0a       	sbc	r15, r24
    363e:	81 e0       	ldi	r24, 0x01	; 1
    3640:	c8 16       	cp	r12, r24
    3642:	8c e2       	ldi	r24, 0x2C	; 44
    3644:	d8 06       	cpc	r13, r24
    3646:	81 e0       	ldi	r24, 0x01	; 1
    3648:	e8 06       	cpc	r14, r24
    364a:	f1 04       	cpc	r15, r1
    364c:	41 f7       	brne	.-48     	; 0x361e <ClearScreen+0x1e2>
    364e:	e5 c0       	rjmp	.+458    	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    3650:	c1 2c       	mov	r12, r1
    3652:	d1 2c       	mov	r13, r1
    3654:	76 01       	movw	r14, r12
    3656:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    3658:	8f ef       	ldi	r24, 0xFF	; 255
    365a:	9f ef       	ldi	r25, 0xFF	; 255
    365c:	5d dc       	rcall	.-1862   	; 0x2f18 <WriteData>
    365e:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			Violet_Out;
		} break;
		case 8:     for(i=0;i<76800;i++){
			Gray_Out;
		} break;
		case 9:     for(i=0;i<76800;i++){
    3662:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    3666:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    366a:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    366e:	8f ef       	ldi	r24, 0xFF	; 255
    3670:	c8 1a       	sub	r12, r24
    3672:	d8 0a       	sbc	r13, r24
    3674:	e8 0a       	sbc	r14, r24
    3676:	f8 0a       	sbc	r15, r24
    3678:	81 e0       	ldi	r24, 0x01	; 1
    367a:	c8 16       	cp	r12, r24
    367c:	8c e2       	ldi	r24, 0x2C	; 44
    367e:	d8 06       	cpc	r13, r24
    3680:	81 e0       	ldi	r24, 0x01	; 1
    3682:	e8 06       	cpc	r14, r24
    3684:	f1 04       	cpc	r15, r1
    3686:	41 f7       	brne	.-48     	; 0x3658 <ClearScreen+0x21c>
    3688:	c8 c0       	rjmp	.+400    	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    368a:	c1 2c       	mov	r12, r1
    368c:	d1 2c       	mov	r13, r1
    368e:	76 01       	movw	r14, r12
    3690:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    3692:	8f ef       	ldi	r24, 0xFF	; 255
    3694:	98 ef       	ldi	r25, 0xF8	; 248
    3696:	40 dc       	rcall	.-1920   	; 0x2f18 <WriteData>
    3698:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			Gray_Out;
		} break;
		case 9:     for(i=0;i<76800;i++){
			White_Out;
		} break;
		case 10:    for(i=0;i<76800;i++){
    369c:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    36a0:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    36a4:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    36a8:	8f ef       	ldi	r24, 0xFF	; 255
    36aa:	c8 1a       	sub	r12, r24
    36ac:	d8 0a       	sbc	r13, r24
    36ae:	e8 0a       	sbc	r14, r24
    36b0:	f8 0a       	sbc	r15, r24
    36b2:	81 e0       	ldi	r24, 0x01	; 1
    36b4:	c8 16       	cp	r12, r24
    36b6:	8c e2       	ldi	r24, 0x2C	; 44
    36b8:	d8 06       	cpc	r13, r24
    36ba:	81 e0       	ldi	r24, 0x01	; 1
    36bc:	e8 06       	cpc	r14, r24
    36be:	f1 04       	cpc	r15, r1
    36c0:	41 f7       	brne	.-48     	; 0x3692 <ClearScreen+0x256>
    36c2:	ab c0       	rjmp	.+342    	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    36c4:	c1 2c       	mov	r12, r1
    36c6:	d1 2c       	mov	r13, r1
    36c8:	76 01       	movw	r14, r12
    36ca:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    36cc:	80 ee       	ldi	r24, 0xE0	; 224
    36ce:	9f e7       	ldi	r25, 0x7F	; 127
    36d0:	23 dc       	rcall	.-1978   	; 0x2f18 <WriteData>
    36d2:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			White_Out;
		} break;
		case 10:    for(i=0;i<76800;i++){
			Magenta_Out;
		} break;
		case 11:    for(i=0;i<76800;i++){
    36d6:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    36da:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    36de:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    36e2:	8f ef       	ldi	r24, 0xFF	; 255
    36e4:	c8 1a       	sub	r12, r24
    36e6:	d8 0a       	sbc	r13, r24
    36e8:	e8 0a       	sbc	r14, r24
    36ea:	f8 0a       	sbc	r15, r24
    36ec:	81 e0       	ldi	r24, 0x01	; 1
    36ee:	c8 16       	cp	r12, r24
    36f0:	8c e2       	ldi	r24, 0x2C	; 44
    36f2:	d8 06       	cpc	r13, r24
    36f4:	81 e0       	ldi	r24, 0x01	; 1
    36f6:	e8 06       	cpc	r14, r24
    36f8:	f1 04       	cpc	r15, r1
    36fa:	41 f7       	brne	.-48     	; 0x36cc <ClearScreen+0x290>
    36fc:	8e c0       	rjmp	.+284    	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    36fe:	c1 2c       	mov	r12, r1
    3700:	d1 2c       	mov	r13, r1
    3702:	76 01       	movw	r14, r12
    3704:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    3706:	8e ec       	ldi	r24, 0xCE	; 206
    3708:	9f e7       	ldi	r25, 0x7F	; 127
    370a:	06 dc       	rcall	.-2036   	; 0x2f18 <WriteData>
    370c:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			Magenta_Out;
		} break;
		case 11:    for(i=0;i<76800;i++){
			Lime_Out;
		} break;
		case 12:    for(i=0;i<76800;i++){
    3710:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    3714:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    3718:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    371c:	8f ef       	ldi	r24, 0xFF	; 255
    371e:	c8 1a       	sub	r12, r24
    3720:	d8 0a       	sbc	r13, r24
    3722:	e8 0a       	sbc	r14, r24
    3724:	f8 0a       	sbc	r15, r24
    3726:	81 e0       	ldi	r24, 0x01	; 1
    3728:	c8 16       	cp	r12, r24
    372a:	8c e2       	ldi	r24, 0x2C	; 44
    372c:	d8 06       	cpc	r13, r24
    372e:	81 e0       	ldi	r24, 0x01	; 1
    3730:	e8 06       	cpc	r14, r24
    3732:	f1 04       	cpc	r15, r1
    3734:	41 f7       	brne	.-48     	; 0x3706 <ClearScreen+0x2ca>
    3736:	71 c0       	rjmp	.+226    	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    3738:	c1 2c       	mov	r12, r1
    373a:	d1 2c       	mov	r13, r1
    373c:	76 01       	movw	r14, r12
    373e:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    3740:	8f ef       	ldi	r24, 0xFF	; 255
    3742:	9f e1       	ldi	r25, 0x1F	; 31
    3744:	e9 db       	rcall	.-2094   	; 0x2f18 <WriteData>
    3746:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			Lime_Out;
		} break;
		case 12:    for(i=0;i<76800;i++){
			Baby_Powder_Out;
		} break;
		case 13:    for(i=0;i<76800;i++){
    374a:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    374e:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    3752:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    3756:	8f ef       	ldi	r24, 0xFF	; 255
    3758:	c8 1a       	sub	r12, r24
    375a:	d8 0a       	sbc	r13, r24
    375c:	e8 0a       	sbc	r14, r24
    375e:	f8 0a       	sbc	r15, r24
    3760:	81 e0       	ldi	r24, 0x01	; 1
    3762:	c8 16       	cp	r12, r24
    3764:	8c e2       	ldi	r24, 0x2C	; 44
    3766:	d8 06       	cpc	r13, r24
    3768:	81 e0       	ldi	r24, 0x01	; 1
    376a:	e8 06       	cpc	r14, r24
    376c:	f1 04       	cpc	r15, r1
    376e:	41 f7       	brne	.-48     	; 0x3740 <ClearScreen+0x304>
    3770:	54 c0       	rjmp	.+168    	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    3772:	c1 2c       	mov	r12, r1
    3774:	d1 2c       	mov	r13, r1
    3776:	76 01       	movw	r14, r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    3778:	85 ef       	ldi	r24, 0xF5	; 245
    377a:	9e ef       	ldi	r25, 0xFE	; 254
    377c:	cd db       	rcall	.-2150   	; 0x2f18 <WriteData>
    377e:	8f ef       	ldi	r24, 0xFF	; 255
			Baby_Powder_Out;
		} break;
		case 13:    for(i=0;i<76800;i++){
			Cyan_Out;
		} break;
		case 14:    for(i=0;i<76800;i++){
    3780:	c8 1a       	sub	r12, r24
    3782:	d8 0a       	sbc	r13, r24
    3784:	e8 0a       	sbc	r14, r24
    3786:	f8 0a       	sbc	r15, r24
    3788:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
    378c:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    3790:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    3794:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    3798:	c1 14       	cp	r12, r1
    379a:	8c e2       	ldi	r24, 0x2C	; 44
    379c:	d8 06       	cpc	r13, r24
    379e:	81 e0       	ldi	r24, 0x01	; 1
    37a0:	e8 06       	cpc	r14, r24
    37a2:	f1 04       	cpc	r15, r1
    37a4:	49 f7       	brne	.-46     	; 0x3778 <ClearScreen+0x33c>
    37a6:	39 c0       	rjmp	.+114    	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    37a8:	c1 2c       	mov	r12, r1
    37aa:	d1 2c       	mov	r13, r1
    37ac:	76 01       	movw	r14, r12
    37ae:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    37b0:	87 eb       	ldi	r24, 0xB7	; 183
    37b2:	9f e7       	ldi	r25, 0x7F	; 127
    37b4:	b1 db       	rcall	.-2206   	; 0x2f18 <WriteData>
    37b6:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			Cyan_Out;
		} break;
		case 14:    for(i=0;i<76800;i++){
			Lavenderblush_Out;
		} break;
		case 15:    for(i=0;i<76800;i++){
    37ba:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    37be:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    37c2:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    37c6:	8f ef       	ldi	r24, 0xFF	; 255
    37c8:	c8 1a       	sub	r12, r24
    37ca:	d8 0a       	sbc	r13, r24
    37cc:	e8 0a       	sbc	r14, r24
    37ce:	f8 0a       	sbc	r15, r24
    37d0:	81 e0       	ldi	r24, 0x01	; 1
    37d2:	c8 16       	cp	r12, r24
    37d4:	8c e2       	ldi	r24, 0x2C	; 44
    37d6:	d8 06       	cpc	r13, r24
    37d8:	81 e0       	ldi	r24, 0x01	; 1
    37da:	e8 06       	cpc	r14, r24
    37dc:	f1 04       	cpc	r15, r1
    37de:	41 f7       	brne	.-48     	; 0x37b0 <ClearScreen+0x374>
    37e0:	1c c0       	rjmp	.+56     	; 0x381a <ClearScreen+0x3de>
	SetColumnAddress(0, 239);
	SetPageAddress(0, 319);

	WriteCommand(0x2C); //Write Memory Start

	switch (colour)  {
    37e2:	c1 2c       	mov	r12, r1
    37e4:	d1 2c       	mov	r13, r1
    37e6:	76 01       	movw	r14, r12
    37e8:	c3 94       	inc	r12
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
	data |= Blue;
	
	WriteData(data);
    37ea:	8e ec       	ldi	r24, 0xCE	; 206
    37ec:	9f e7       	ldi	r25, 0x7F	; 127
    37ee:	94 db       	rcall	.-2264   	; 0x2f18 <WriteData>
    37f0:	c0 92 7b 11 	sts	0x117B, r12	; 0x80117b <i.2494>
			Lavenderblush_Out;
		} break;
		case 15:    for(i=0;i<76800;i++){
			Beige_Out;
		} break;
		default:    for(i=0;i<76800;i++){
    37f4:	d0 92 7c 11 	sts	0x117C, r13	; 0x80117c <i.2494+0x1>
    37f8:	e0 92 7d 11 	sts	0x117D, r14	; 0x80117d <i.2494+0x2>
    37fc:	f0 92 7e 11 	sts	0x117E, r15	; 0x80117e <i.2494+0x3>
    3800:	8f ef       	ldi	r24, 0xFF	; 255
    3802:	c8 1a       	sub	r12, r24
    3804:	d8 0a       	sbc	r13, r24
    3806:	e8 0a       	sbc	r14, r24
    3808:	f8 0a       	sbc	r15, r24
    380a:	81 e0       	ldi	r24, 0x01	; 1
    380c:	c8 16       	cp	r12, r24
    380e:	8c e2       	ldi	r24, 0x2C	; 44
    3810:	d8 06       	cpc	r13, r24
    3812:	81 e0       	ldi	r24, 0x01	; 1
    3814:	e8 06       	cpc	r14, r24
    3816:	f1 04       	cpc	r15, r1
    3818:	41 f7       	brne	.-48     	; 0x37ea <ClearScreen+0x3ae>
    381a:	80 91 a6 11 	lds	r24, 0x11A6	; 0x8011a6 <Background_Colour>
			Baby_Powder_Out;
		} break;
	}
	return Background_Colour;
}
    381e:	90 91 a7 11 	lds	r25, 0x11A7	; 0x8011a7 <Background_Colour+0x1>
    3822:	cf 91       	pop	r28
    3824:	ff 90       	pop	r15
    3826:	ef 90       	pop	r14
    3828:	df 90       	pop	r13
    382a:	cf 90       	pop	r12
    382c:	08 95       	ret

0000382e <setpixelColour>:
    382e:	9c 01       	movw	r18, r24

unsigned int setpixelColour(unsigned int Colour)
{
	unsigned int colour = 0x00 | Colour;

	switch (colour)  {
    3830:	80 31       	cpi	r24, 0x10	; 16
    3832:	91 05       	cpc	r25, r1
    3834:	08 f0       	brcs	.+2      	; 0x3838 <setpixelColour+0xa>
    3836:	87 c0       	rjmp	.+270    	; 0x3946 <setpixelColour+0x118>
    3838:	fc 01       	movw	r30, r24
    383a:	88 27       	eor	r24, r24
    383c:	ee 56       	subi	r30, 0x6E	; 110
    383e:	ff 4f       	sbci	r31, 0xFF	; 255
    3840:	8f 4f       	sbci	r24, 0xFF	; 255
    3842:	0c 94 e5 26 	jmp	0x4dca	; 0x4dca <__tablejump2__>

		case 0:     R = 0; G = 0, B = 0;
    3846:	10 92 ab 11 	sts	0x11AB, r1	; 0x8011ab <R>
    384a:	10 92 a9 11 	sts	0x11A9, r1	; 0x8011a9 <G>
    384e:	10 92 a5 11 	sts	0x11A5, r1	; 0x8011a5 <B>
		break;
    3852:	7f c0       	rjmp	.+254    	; 0x3952 <setpixelColour+0x124>
		case 2:     R = 255; G = 0, B = 0;
    3854:	8f ef       	ldi	r24, 0xFF	; 255
    3856:	80 93 ab 11 	sts	0x11AB, r24	; 0x8011ab <R>
    385a:	10 92 a9 11 	sts	0x11A9, r1	; 0x8011a9 <G>
    385e:	10 92 a5 11 	sts	0x11A5, r1	; 0x8011a5 <B>
		break;
    3862:	77 c0       	rjmp	.+238    	; 0x3952 <setpixelColour+0x124>
		case 3:     R = 255; G = 155, B = 0;
    3864:	8f ef       	ldi	r24, 0xFF	; 255
    3866:	80 93 ab 11 	sts	0x11AB, r24	; 0x8011ab <R>
    386a:	8b e9       	ldi	r24, 0x9B	; 155
    386c:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <G>
    3870:	10 92 a5 11 	sts	0x11A5, r1	; 0x8011a5 <B>
		break;
    3874:	6e c0       	rjmp	.+220    	; 0x3952 <setpixelColour+0x124>
		case 4:     R = 255; G = 255, B = 0;
    3876:	8f ef       	ldi	r24, 0xFF	; 255
    3878:	80 93 ab 11 	sts	0x11AB, r24	; 0x8011ab <R>
    387c:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <G>
    3880:	10 92 a5 11 	sts	0x11A5, r1	; 0x8011a5 <B>
		break;
    3884:	66 c0       	rjmp	.+204    	; 0x3952 <setpixelColour+0x124>
		case 5:     R = 0; G = 255, B = 0;
    3886:	10 92 ab 11 	sts	0x11AB, r1	; 0x8011ab <R>
    388a:	8f ef       	ldi	r24, 0xFF	; 255
    388c:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <G>
    3890:	10 92 a5 11 	sts	0x11A5, r1	; 0x8011a5 <B>
		break;
    3894:	5e c0       	rjmp	.+188    	; 0x3952 <setpixelColour+0x124>
		case 6:     R = 0; G = 0, B = 255;
    3896:	10 92 ab 11 	sts	0x11AB, r1	; 0x8011ab <R>
    389a:	10 92 a9 11 	sts	0x11A9, r1	; 0x8011a9 <G>
    389e:	8f ef       	ldi	r24, 0xFF	; 255
    38a0:	80 93 a5 11 	sts	0x11A5, r24	; 0x8011a5 <B>
		break;
    38a4:	56 c0       	rjmp	.+172    	; 0x3952 <setpixelColour+0x124>
		case 7:     R = 196; G = 0, B = 255;
    38a6:	84 ec       	ldi	r24, 0xC4	; 196
    38a8:	80 93 ab 11 	sts	0x11AB, r24	; 0x8011ab <R>
    38ac:	10 92 a9 11 	sts	0x11A9, r1	; 0x8011a9 <G>
    38b0:	8f ef       	ldi	r24, 0xFF	; 255
    38b2:	80 93 a5 11 	sts	0x11A5, r24	; 0x8011a5 <B>
		break;
    38b6:	4d c0       	rjmp	.+154    	; 0x3952 <setpixelColour+0x124>
		case 8:     R = 128; G = 128, B = 128;
    38b8:	80 e8       	ldi	r24, 0x80	; 128
    38ba:	80 93 ab 11 	sts	0x11AB, r24	; 0x8011ab <R>
    38be:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <G>
    38c2:	80 93 a5 11 	sts	0x11A5, r24	; 0x8011a5 <B>
		break;
    38c6:	45 c0       	rjmp	.+138    	; 0x3952 <setpixelColour+0x124>
		case 9:     R = 255; G = 255, B = 255;
    38c8:	8f ef       	ldi	r24, 0xFF	; 255
    38ca:	80 93 ab 11 	sts	0x11AB, r24	; 0x8011ab <R>
    38ce:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <G>
    38d2:	80 93 a5 11 	sts	0x11A5, r24	; 0x8011a5 <B>
		break;
    38d6:	3d c0       	rjmp	.+122    	; 0x3952 <setpixelColour+0x124>
		case 10:    R = 255; G = 0, B = 255;
    38d8:	8f ef       	ldi	r24, 0xFF	; 255
    38da:	80 93 ab 11 	sts	0x11AB, r24	; 0x8011ab <R>
    38de:	10 92 a9 11 	sts	0x11A9, r1	; 0x8011a9 <G>
    38e2:	80 93 a5 11 	sts	0x11A5, r24	; 0x8011a5 <B>
		break;
    38e6:	35 c0       	rjmp	.+106    	; 0x3952 <setpixelColour+0x124>
		case 11:    R = 111; G = 255, B = 0;
    38e8:	8f e6       	ldi	r24, 0x6F	; 111
    38ea:	80 93 ab 11 	sts	0x11AB, r24	; 0x8011ab <R>
    38ee:	8f ef       	ldi	r24, 0xFF	; 255
    38f0:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <G>
    38f4:	10 92 a5 11 	sts	0x11A5, r1	; 0x8011a5 <B>
		break;
    38f8:	2c c0       	rjmp	.+88     	; 0x3952 <setpixelColour+0x124>
		case 12:    R = 141; G = 186, B = 206;
    38fa:	8d e8       	ldi	r24, 0x8D	; 141
    38fc:	80 93 ab 11 	sts	0x11AB, r24	; 0x8011ab <R>
    3900:	8a eb       	ldi	r24, 0xBA	; 186
    3902:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <G>
    3906:	8e ec       	ldi	r24, 0xCE	; 206
    3908:	80 93 a5 11 	sts	0x11A5, r24	; 0x8011a5 <B>
		break;
    390c:	22 c0       	rjmp	.+68     	; 0x3952 <setpixelColour+0x124>
		case 13:    R = 0; G = 255, B = 255;
    390e:	10 92 ab 11 	sts	0x11AB, r1	; 0x8011ab <R>
    3912:	8f ef       	ldi	r24, 0xFF	; 255
    3914:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <G>
    3918:	80 93 a5 11 	sts	0x11A5, r24	; 0x8011a5 <B>
		break;
    391c:	1a c0       	rjmp	.+52     	; 0x3952 <setpixelColour+0x124>
		case 14:    R = 255; G = 240, B = 245;
    391e:	8f ef       	ldi	r24, 0xFF	; 255
    3920:	80 93 ab 11 	sts	0x11AB, r24	; 0x8011ab <R>
    3924:	80 ef       	ldi	r24, 0xF0	; 240
    3926:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <G>
    392a:	85 ef       	ldi	r24, 0xF5	; 245
    392c:	80 93 a5 11 	sts	0x11A5, r24	; 0x8011a5 <B>
		break;
    3930:	10 c0       	rjmp	.+32     	; 0x3952 <setpixelColour+0x124>
		case 15:    R = 207; G = 185, B = 151;
    3932:	8f ec       	ldi	r24, 0xCF	; 207
    3934:	80 93 ab 11 	sts	0x11AB, r24	; 0x8011ab <R>
    3938:	89 eb       	ldi	r24, 0xB9	; 185
    393a:	80 93 a9 11 	sts	0x11A9, r24	; 0x8011a9 <G>
    393e:	87 e9       	ldi	r24, 0x97	; 151
    3940:	80 93 a5 11 	sts	0x11A5, r24	; 0x8011a5 <B>
		break;
    3944:	06 c0       	rjmp	.+12     	; 0x3952 <setpixelColour+0x124>
		default:    R = 0; G = 0, B = 0;
    3946:	10 92 ab 11 	sts	0x11AB, r1	; 0x8011ab <R>
    394a:	10 92 a9 11 	sts	0x11A9, r1	; 0x8011a9 <G>
    394e:	10 92 a5 11 	sts	0x11A5, r1	; 0x8011a5 <B>
		break;
	}

	switch (Background_Colour)  {
    3952:	e0 91 a6 11 	lds	r30, 0x11A6	; 0x8011a6 <Background_Colour>
    3956:	f0 91 a7 11 	lds	r31, 0x11A7	; 0x8011a7 <Background_Colour+0x1>
    395a:	e0 31       	cpi	r30, 0x10	; 16
    395c:	f1 05       	cpc	r31, r1
    395e:	08 f0       	brcs	.+2      	; 0x3962 <setpixelColour+0x134>
    3960:	86 c0       	rjmp	.+268    	; 0x3a6e <setpixelColour+0x240>
    3962:	88 27       	eor	r24, r24
    3964:	ee 55       	subi	r30, 0x5E	; 94
    3966:	ff 4f       	sbci	r31, 0xFF	; 255
    3968:	8f 4f       	sbci	r24, 0xFF	; 255
    396a:	0c 94 e5 26 	jmp	0x4dca	; 0x4dca <__tablejump2__>

		case 0:     R_back = 0; G_back = 0, B_back = 0;
    396e:	10 92 a4 11 	sts	0x11A4, r1	; 0x8011a4 <R_back>
    3972:	10 92 ac 11 	sts	0x11AC, r1	; 0x8011ac <G_back>
    3976:	10 92 a1 11 	sts	0x11A1, r1	; 0x8011a1 <B_back>
		break;
    397a:	7f c0       	rjmp	.+254    	; 0x3a7a <setpixelColour+0x24c>
		case 2:     R_back = 255; G_back = 0, B_back = 0;
    397c:	8f ef       	ldi	r24, 0xFF	; 255
    397e:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <R_back>
    3982:	10 92 ac 11 	sts	0x11AC, r1	; 0x8011ac <G_back>
    3986:	10 92 a1 11 	sts	0x11A1, r1	; 0x8011a1 <B_back>
		break;
    398a:	77 c0       	rjmp	.+238    	; 0x3a7a <setpixelColour+0x24c>
		case 3:     R_back = 255; G_back = 155, B_back = 0;
    398c:	8f ef       	ldi	r24, 0xFF	; 255
    398e:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <R_back>
    3992:	8b e9       	ldi	r24, 0x9B	; 155
    3994:	80 93 ac 11 	sts	0x11AC, r24	; 0x8011ac <G_back>
    3998:	10 92 a1 11 	sts	0x11A1, r1	; 0x8011a1 <B_back>
		break;
    399c:	6e c0       	rjmp	.+220    	; 0x3a7a <setpixelColour+0x24c>
		case 4:     R_back = 255; G_back = 255, B_back = 0;
    399e:	8f ef       	ldi	r24, 0xFF	; 255
    39a0:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <R_back>
    39a4:	80 93 ac 11 	sts	0x11AC, r24	; 0x8011ac <G_back>
    39a8:	10 92 a1 11 	sts	0x11A1, r1	; 0x8011a1 <B_back>
		break;
    39ac:	66 c0       	rjmp	.+204    	; 0x3a7a <setpixelColour+0x24c>
		case 5:     R_back = 0; G_back = 255, B_back = 0;
    39ae:	10 92 a4 11 	sts	0x11A4, r1	; 0x8011a4 <R_back>
    39b2:	8f ef       	ldi	r24, 0xFF	; 255
    39b4:	80 93 ac 11 	sts	0x11AC, r24	; 0x8011ac <G_back>
    39b8:	10 92 a1 11 	sts	0x11A1, r1	; 0x8011a1 <B_back>
		break;
    39bc:	5e c0       	rjmp	.+188    	; 0x3a7a <setpixelColour+0x24c>
		case 6:     R_back = 0; G_back = 0, B_back = 255;
    39be:	10 92 a4 11 	sts	0x11A4, r1	; 0x8011a4 <R_back>
    39c2:	10 92 ac 11 	sts	0x11AC, r1	; 0x8011ac <G_back>
    39c6:	8f ef       	ldi	r24, 0xFF	; 255
    39c8:	80 93 a1 11 	sts	0x11A1, r24	; 0x8011a1 <B_back>
		break;
    39cc:	56 c0       	rjmp	.+172    	; 0x3a7a <setpixelColour+0x24c>
		case 7:     R_back = 196; G_back = 0, B_back = 255;
    39ce:	84 ec       	ldi	r24, 0xC4	; 196
    39d0:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <R_back>
    39d4:	10 92 ac 11 	sts	0x11AC, r1	; 0x8011ac <G_back>
    39d8:	8f ef       	ldi	r24, 0xFF	; 255
    39da:	80 93 a1 11 	sts	0x11A1, r24	; 0x8011a1 <B_back>
		break;
    39de:	4d c0       	rjmp	.+154    	; 0x3a7a <setpixelColour+0x24c>
		case 8:     R_back = 128; G_back = 128, B_back = 128;
    39e0:	80 e8       	ldi	r24, 0x80	; 128
    39e2:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <R_back>
    39e6:	80 93 ac 11 	sts	0x11AC, r24	; 0x8011ac <G_back>
    39ea:	80 93 a1 11 	sts	0x11A1, r24	; 0x8011a1 <B_back>
		break;
    39ee:	45 c0       	rjmp	.+138    	; 0x3a7a <setpixelColour+0x24c>
		case 9:     R_back = 255; G_back = 255, B_back = 255;
    39f0:	8f ef       	ldi	r24, 0xFF	; 255
    39f2:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <R_back>
    39f6:	80 93 ac 11 	sts	0x11AC, r24	; 0x8011ac <G_back>
    39fa:	80 93 a1 11 	sts	0x11A1, r24	; 0x8011a1 <B_back>
		break;
    39fe:	3d c0       	rjmp	.+122    	; 0x3a7a <setpixelColour+0x24c>
		case 10:    R_back = 255; G_back = 0, B_back = 255;
    3a00:	8f ef       	ldi	r24, 0xFF	; 255
    3a02:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <R_back>
    3a06:	10 92 ac 11 	sts	0x11AC, r1	; 0x8011ac <G_back>
    3a0a:	80 93 a1 11 	sts	0x11A1, r24	; 0x8011a1 <B_back>
		break;
    3a0e:	35 c0       	rjmp	.+106    	; 0x3a7a <setpixelColour+0x24c>
		case 11:    R_back = 111; G_back = 255, B_back = 0;
    3a10:	8f e6       	ldi	r24, 0x6F	; 111
    3a12:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <R_back>
    3a16:	8f ef       	ldi	r24, 0xFF	; 255
    3a18:	80 93 ac 11 	sts	0x11AC, r24	; 0x8011ac <G_back>
    3a1c:	10 92 a1 11 	sts	0x11A1, r1	; 0x8011a1 <B_back>
		break;
    3a20:	2c c0       	rjmp	.+88     	; 0x3a7a <setpixelColour+0x24c>
		case 12:    R_back = 141; G_back = 186, B_back = 206;
    3a22:	8d e8       	ldi	r24, 0x8D	; 141
    3a24:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <R_back>
    3a28:	8a eb       	ldi	r24, 0xBA	; 186
    3a2a:	80 93 ac 11 	sts	0x11AC, r24	; 0x8011ac <G_back>
    3a2e:	8e ec       	ldi	r24, 0xCE	; 206
    3a30:	80 93 a1 11 	sts	0x11A1, r24	; 0x8011a1 <B_back>
		break;
    3a34:	22 c0       	rjmp	.+68     	; 0x3a7a <setpixelColour+0x24c>
		case 13:    R_back = 0; G_back = 255, B_back = 255;
    3a36:	10 92 a4 11 	sts	0x11A4, r1	; 0x8011a4 <R_back>
    3a3a:	8f ef       	ldi	r24, 0xFF	; 255
    3a3c:	80 93 ac 11 	sts	0x11AC, r24	; 0x8011ac <G_back>
    3a40:	80 93 a1 11 	sts	0x11A1, r24	; 0x8011a1 <B_back>
		break;
    3a44:	1a c0       	rjmp	.+52     	; 0x3a7a <setpixelColour+0x24c>
		case 14:    R_back = 255; G_back = 240, B_back = 245;
    3a46:	8f ef       	ldi	r24, 0xFF	; 255
    3a48:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <R_back>
    3a4c:	80 ef       	ldi	r24, 0xF0	; 240
    3a4e:	80 93 ac 11 	sts	0x11AC, r24	; 0x8011ac <G_back>
    3a52:	85 ef       	ldi	r24, 0xF5	; 245
    3a54:	80 93 a1 11 	sts	0x11A1, r24	; 0x8011a1 <B_back>
		break;
    3a58:	10 c0       	rjmp	.+32     	; 0x3a7a <setpixelColour+0x24c>
		case 15:    R_back = 207; G_back = 185, B_back = 151;
    3a5a:	8f ec       	ldi	r24, 0xCF	; 207
    3a5c:	80 93 a4 11 	sts	0x11A4, r24	; 0x8011a4 <R_back>
    3a60:	89 eb       	ldi	r24, 0xB9	; 185
    3a62:	80 93 ac 11 	sts	0x11AC, r24	; 0x8011ac <G_back>
    3a66:	87 e9       	ldi	r24, 0x97	; 151
    3a68:	80 93 a1 11 	sts	0x11A1, r24	; 0x8011a1 <B_back>
		break;
    3a6c:	06 c0       	rjmp	.+12     	; 0x3a7a <setpixelColour+0x24c>
		default:    R_back = 0; G_back = 0, B_back = 0;
    3a6e:	10 92 a4 11 	sts	0x11A4, r1	; 0x8011a4 <R_back>
    3a72:	10 92 ac 11 	sts	0x11AC, r1	; 0x8011ac <G_back>
    3a76:	10 92 a1 11 	sts	0x11A1, r1	; 0x8011a1 <B_back>
	}

	return colour;
	return Background_Colour;
	
}
    3a7a:	c9 01       	movw	r24, r18
    3a7c:	08 95       	ret

00003a7e <WriteNumber>:


//Numbers *********************************************************** Numbers *************************************************
void WriteNumber(unsigned int X_pos, unsigned int Y_pos, unsigned int Colour, int NumberToWrite)
{
    3a7e:	9f 92       	push	r9
    3a80:	af 92       	push	r10
    3a82:	bf 92       	push	r11
    3a84:	cf 92       	push	r12
    3a86:	df 92       	push	r13
    3a88:	ef 92       	push	r14
    3a8a:	ff 92       	push	r15
    3a8c:	0f 93       	push	r16
    3a8e:	1f 93       	push	r17
    3a90:	cf 93       	push	r28
    3a92:	df 93       	push	r29
    3a94:	8c 01       	movw	r16, r24
    3a96:	7b 01       	movw	r14, r22
    3a98:	ca 01       	movw	r24, r20
    3a9a:	e9 01       	movw	r28, r18
	static unsigned char x=0;
	static unsigned char dataout=0;
	static unsigned int i=1;
	static unsigned int jj=0;
	
	setpixelColour(Colour);
    3a9c:	c8 de       	rcall	.-624    	; 0x382e <setpixelColour>
	setDisplayNumberFont(X_pos,Y_pos);
    3a9e:	b7 01       	movw	r22, r14
    3aa0:	c8 01       	movw	r24, r16
    3aa2:	94 da       	rcall	.-2776   	; 0x2fcc <setDisplayNumberFont>
	
	if(NumberToWrite == 0)
    3aa4:	20 97       	sbiw	r28, 0x00	; 0
    3aa6:	09 f0       	breq	.+2      	; 0x3aaa <WriteNumber+0x2c>
    3aa8:	69 c0       	rjmp	.+210    	; 0x3b7c <WriteNumber+0xfe>
	{
		for (jj=Number_Font_Start; jj<Number_Font_Length_Bytes-1; jj++)
    3aaa:	10 92 7a 11 	sts	0x117A, r1	; 0x80117a <jj.2607+0x1>
    3aae:	10 92 79 11 	sts	0x1179, r1	; 0x801179 <jj.2607>
    3ab2:	0f 2e       	mov	r0, r31
    3ab4:	fa eb       	ldi	r31, 0xBA	; 186
    3ab6:	ef 2e       	mov	r14, r31
    3ab8:	f7 e0       	ldi	r31, 0x07	; 7
    3aba:	ff 2e       	mov	r15, r31
    3abc:	f0 2d       	mov	r31, r0
    3abe:	aa 24       	eor	r10, r10
    3ac0:	a3 94       	inc	r10
    3ac2:	b1 2c       	mov	r11, r1
				}
				i=i<<1;

				if (i>=256)
				{
					i=1;
    3ac4:	cc 24       	eor	r12, r12
    3ac6:	c3 94       	inc	r12
    3ac8:	d1 2c       	mov	r13, r1
	
	if(NumberToWrite == 0)
	{
		for (jj=Number_Font_Start; jj<Number_Font_Length_Bytes-1; jj++)
		{
			for (x=0; x<8; x++)
    3aca:	10 92 78 11 	sts	0x1178, r1	; 0x801178 <x.2604>
    3ace:	11 e0       	ldi	r17, 0x01	; 1
			{
				dataout = Number_Font[jj] &i;
    3ad0:	c0 91 12 02 	lds	r28, 0x0212	; 0x800212 <i.2606>
    3ad4:	d0 91 13 02 	lds	r29, 0x0213	; 0x800213 <i.2606+0x1>
				if (dataout >=1)
    3ad8:	f7 01       	movw	r30, r14
    3ada:	80 81       	ld	r24, Z
    3adc:	8c 23       	and	r24, r28
    3ade:	a9 f0       	breq	.+42     	; 0x3b0a <WriteNumber+0x8c>
// Red 0-31, Green 0-63, Blue 0-31
void WritePixel(unsigned char Red, unsigned char Green, unsigned char Blue)
{
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
    3ae0:	80 91 ab 11 	lds	r24, 0x11AB	; 0x8011ab <R>
    3ae4:	90 e0       	ldi	r25, 0x00	; 0
    3ae6:	98 2f       	mov	r25, r24
    3ae8:	88 27       	eor	r24, r24
    3aea:	99 0f       	add	r25, r25
    3aec:	99 0f       	add	r25, r25
    3aee:	99 0f       	add	r25, r25
    3af0:	20 91 a9 11 	lds	r18, 0x11A9	; 0x8011a9 <G>
    3af4:	40 e2       	ldi	r20, 0x20	; 32
    3af6:	24 9f       	mul	r18, r20
    3af8:	90 01       	movw	r18, r0
    3afa:	11 24       	eor	r1, r1
    3afc:	82 2b       	or	r24, r18
    3afe:	93 2b       	or	r25, r19
	data |= Blue;
	
	WriteData(data);
    3b00:	20 91 a5 11 	lds	r18, 0x11A5	; 0x8011a5 <B>
    3b04:	82 2b       	or	r24, r18
    3b06:	08 da       	rcall	.-3056   	; 0x2f18 <WriteData>
    3b08:	14 c0       	rjmp	.+40     	; 0x3b32 <WriteNumber+0xb4>
// Red 0-31, Green 0-63, Blue 0-31
void WritePixel(unsigned char Red, unsigned char Green, unsigned char Blue)
{
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
    3b0a:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <R_back>
    3b0e:	90 e0       	ldi	r25, 0x00	; 0
    3b10:	98 2f       	mov	r25, r24
    3b12:	88 27       	eor	r24, r24
    3b14:	99 0f       	add	r25, r25
    3b16:	99 0f       	add	r25, r25
    3b18:	99 0f       	add	r25, r25
    3b1a:	20 91 ac 11 	lds	r18, 0x11AC	; 0x8011ac <G_back>
    3b1e:	e0 e2       	ldi	r30, 0x20	; 32
    3b20:	2e 9f       	mul	r18, r30
    3b22:	90 01       	movw	r18, r0
    3b24:	11 24       	eor	r1, r1
    3b26:	82 2b       	or	r24, r18
    3b28:	93 2b       	or	r25, r19
	data |= Blue;
	
	WriteData(data);
    3b2a:	20 91 a1 11 	lds	r18, 0x11A1	; 0x8011a1 <B_back>
    3b2e:	82 2b       	or	r24, r18
    3b30:	f3 d9       	rcall	.-3098   	; 0x2f18 <WriteData>
				}
				else
				{
					WritePixel(R_back,G_back,B_back);
				}
				i=i<<1;
    3b32:	cc 0f       	add	r28, r28
    3b34:	dd 1f       	adc	r29, r29

				if (i>=256)
    3b36:	cf 3f       	cpi	r28, 0xFF	; 255
    3b38:	d1 05       	cpc	r29, r1
    3b3a:	09 f0       	breq	.+2      	; 0x3b3e <WriteNumber+0xc0>
    3b3c:	28 f4       	brcc	.+10     	; 0x3b48 <WriteNumber+0xca>
				}
				else
				{
					WritePixel(R_back,G_back,B_back);
				}
				i=i<<1;
    3b3e:	d0 93 13 02 	sts	0x0213, r29	; 0x800213 <i.2606+0x1>
    3b42:	c0 93 12 02 	sts	0x0212, r28	; 0x800212 <i.2606>
    3b46:	04 c0       	rjmp	.+8      	; 0x3b50 <WriteNumber+0xd2>

				if (i>=256)
				{
					i=1;
    3b48:	d0 92 13 02 	sts	0x0213, r13	; 0x800213 <i.2606+0x1>
    3b4c:	c0 92 12 02 	sts	0x0212, r12	; 0x800212 <i.2606>
	
	if(NumberToWrite == 0)
	{
		for (jj=Number_Font_Start; jj<Number_Font_Length_Bytes-1; jj++)
		{
			for (x=0; x<8; x++)
    3b50:	10 93 78 11 	sts	0x1178, r17	; 0x801178 <x.2604>
    3b54:	1f 5f       	subi	r17, 0xFF	; 255
    3b56:	19 30       	cpi	r17, 0x09	; 9
    3b58:	09 f0       	breq	.+2      	; 0x3b5c <WriteNumber+0xde>
    3b5a:	ba cf       	rjmp	.-140    	; 0x3ad0 <WriteNumber+0x52>
	setpixelColour(Colour);
	setDisplayNumberFont(X_pos,Y_pos);
	
	if(NumberToWrite == 0)
	{
		for (jj=Number_Font_Start; jj<Number_Font_Length_Bytes-1; jj++)
    3b5c:	b0 92 7a 11 	sts	0x117A, r11	; 0x80117a <jj.2607+0x1>
    3b60:	a0 92 79 11 	sts	0x1179, r10	; 0x801179 <jj.2607>
    3b64:	ff ef       	ldi	r31, 0xFF	; 255
    3b66:	af 1a       	sub	r10, r31
    3b68:	bf 0a       	sbc	r11, r31
    3b6a:	42 e0       	ldi	r20, 0x02	; 2
    3b6c:	e4 0e       	add	r14, r20
    3b6e:	f1 1c       	adc	r15, r1
    3b70:	8f e6       	ldi	r24, 0x6F	; 111
    3b72:	a8 16       	cp	r10, r24
    3b74:	b1 04       	cpc	r11, r1
    3b76:	09 f0       	breq	.+2      	; 0x3b7a <WriteNumber+0xfc>
    3b78:	a8 cf       	rjmp	.-176    	; 0x3aca <WriteNumber+0x4c>
    3b7a:	71 c0       	rjmp	.+226    	; 0x3c5e <WriteNumber+0x1e0>
			}
		}
	}
	else
	{	//for (jj=Number_Font_Length_Bytes*(NumberToWrite+1)-1; jj>Number_Font_Length_Bytes*NumberToWrite; jj--)
		for (jj=Number_Font_Length_Bytes*NumberToWrite; jj<(Number_Font_Length_Bytes)*(NumberToWrite+1)-1; jj++)
    3b7c:	8f e6       	ldi	r24, 0x6F	; 111
    3b7e:	8c 9f       	mul	r24, r28
    3b80:	60 01       	movw	r12, r0
    3b82:	8d 9f       	mul	r24, r29
    3b84:	d0 0c       	add	r13, r0
    3b86:	11 24       	eor	r1, r1
    3b88:	d0 92 7a 11 	sts	0x117A, r13	; 0x80117a <jj.2607+0x1>
    3b8c:	c0 92 79 11 	sts	0x1179, r12	; 0x801179 <jj.2607>
    3b90:	56 01       	movw	r10, r12
    3b92:	9e e6       	ldi	r25, 0x6E	; 110
    3b94:	a9 0e       	add	r10, r25
    3b96:	b1 1c       	adc	r11, r1
    3b98:	ca 14       	cp	r12, r10
    3b9a:	db 04       	cpc	r13, r11
    3b9c:	08 f0       	brcs	.+2      	; 0x3ba0 <WriteNumber+0x122>
    3b9e:	5f c0       	rjmp	.+190    	; 0x3c5e <WriteNumber+0x1e0>
    3ba0:	86 01       	movw	r16, r12
    3ba2:	00 0f       	add	r16, r16
    3ba4:	11 1f       	adc	r17, r17
    3ba6:	06 54       	subi	r16, 0x46	; 70
    3ba8:	18 4f       	sbci	r17, 0xF8	; 248
				WritePixel(R_back,G_back,B_back); }

				i=i<<1;

				if (i>=256){
				i=1;}
    3baa:	ee 24       	eor	r14, r14
    3bac:	e3 94       	inc	r14
    3bae:	f1 2c       	mov	r15, r1
	}
	else
	{	//for (jj=Number_Font_Length_Bytes*(NumberToWrite+1)-1; jj>Number_Font_Length_Bytes*NumberToWrite; jj--)
		for (jj=Number_Font_Length_Bytes*NumberToWrite; jj<(Number_Font_Length_Bytes)*(NumberToWrite+1)-1; jj++)
		{
			for (x = 0; x < 8; x++){
    3bb0:	10 92 78 11 	sts	0x1178, r1	; 0x801178 <x.2604>
    3bb4:	99 24       	eor	r9, r9
    3bb6:	93 94       	inc	r9

				//dataout = Number_Font[jj] &i;
				dataout = (Number_Font[jj] & i);
    3bb8:	c0 91 12 02 	lds	r28, 0x0212	; 0x800212 <i.2606>
    3bbc:	d0 91 13 02 	lds	r29, 0x0213	; 0x800213 <i.2606+0x1>
				

				if (dataout >=1){
    3bc0:	f8 01       	movw	r30, r16
    3bc2:	80 81       	ld	r24, Z
    3bc4:	8c 23       	and	r24, r28
    3bc6:	a9 f0       	breq	.+42     	; 0x3bf2 <WriteNumber+0x174>
// Red 0-31, Green 0-63, Blue 0-31
void WritePixel(unsigned char Red, unsigned char Green, unsigned char Blue)
{
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
    3bc8:	80 91 ab 11 	lds	r24, 0x11AB	; 0x8011ab <R>
    3bcc:	90 e0       	ldi	r25, 0x00	; 0
    3bce:	98 2f       	mov	r25, r24
    3bd0:	88 27       	eor	r24, r24
    3bd2:	99 0f       	add	r25, r25
    3bd4:	99 0f       	add	r25, r25
    3bd6:	99 0f       	add	r25, r25
    3bd8:	20 91 a9 11 	lds	r18, 0x11A9	; 0x8011a9 <G>
    3bdc:	40 e2       	ldi	r20, 0x20	; 32
    3bde:	24 9f       	mul	r18, r20
    3be0:	90 01       	movw	r18, r0
    3be2:	11 24       	eor	r1, r1
    3be4:	82 2b       	or	r24, r18
	data |= Blue;
	
	WriteData(data);
    3be6:	93 2b       	or	r25, r19
    3be8:	20 91 a5 11 	lds	r18, 0x11A5	; 0x8011a5 <B>
    3bec:	82 2b       	or	r24, r18
    3bee:	94 d9       	rcall	.-3288   	; 0x2f18 <WriteData>
    3bf0:	14 c0       	rjmp	.+40     	; 0x3c1a <WriteNumber+0x19c>
// Red 0-31, Green 0-63, Blue 0-31
void WritePixel(unsigned char Red, unsigned char Green, unsigned char Blue)
{
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
    3bf2:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <R_back>
    3bf6:	90 e0       	ldi	r25, 0x00	; 0
    3bf8:	98 2f       	mov	r25, r24
    3bfa:	88 27       	eor	r24, r24
    3bfc:	99 0f       	add	r25, r25
    3bfe:	99 0f       	add	r25, r25
    3c00:	99 0f       	add	r25, r25
    3c02:	20 91 ac 11 	lds	r18, 0x11AC	; 0x8011ac <G_back>
    3c06:	e0 e2       	ldi	r30, 0x20	; 32
    3c08:	2e 9f       	mul	r18, r30
    3c0a:	90 01       	movw	r18, r0
    3c0c:	11 24       	eor	r1, r1
    3c0e:	82 2b       	or	r24, r18
	data |= Blue;
	
	WriteData(data);
    3c10:	93 2b       	or	r25, r19
    3c12:	20 91 a1 11 	lds	r18, 0x11A1	; 0x8011a1 <B_back>
    3c16:	82 2b       	or	r24, r18
    3c18:	7f d9       	rcall	.-3330   	; 0x2f18 <WriteData>
					WritePixel(R,G,B);
				} else
				{
				WritePixel(R_back,G_back,B_back); }

				i=i<<1;
    3c1a:	cc 0f       	add	r28, r28
    3c1c:	dd 1f       	adc	r29, r29

				if (i>=256){
    3c1e:	cf 3f       	cpi	r28, 0xFF	; 255
    3c20:	d1 05       	cpc	r29, r1
    3c22:	09 f0       	breq	.+2      	; 0x3c26 <WriteNumber+0x1a8>
    3c24:	28 f4       	brcc	.+10     	; 0x3c30 <WriteNumber+0x1b2>
					WritePixel(R,G,B);
				} else
				{
				WritePixel(R_back,G_back,B_back); }

				i=i<<1;
    3c26:	d0 93 13 02 	sts	0x0213, r29	; 0x800213 <i.2606+0x1>
    3c2a:	c0 93 12 02 	sts	0x0212, r28	; 0x800212 <i.2606>
    3c2e:	04 c0       	rjmp	.+8      	; 0x3c38 <WriteNumber+0x1ba>

				if (i>=256){
				i=1;}
    3c30:	f0 92 13 02 	sts	0x0213, r15	; 0x800213 <i.2606+0x1>
    3c34:	e0 92 12 02 	sts	0x0212, r14	; 0x800212 <i.2606>
	}
	else
	{	//for (jj=Number_Font_Length_Bytes*(NumberToWrite+1)-1; jj>Number_Font_Length_Bytes*NumberToWrite; jj--)
		for (jj=Number_Font_Length_Bytes*NumberToWrite; jj<(Number_Font_Length_Bytes)*(NumberToWrite+1)-1; jj++)
		{
			for (x = 0; x < 8; x++){
    3c38:	90 92 78 11 	sts	0x1178, r9	; 0x801178 <x.2604>
    3c3c:	93 94       	inc	r9
    3c3e:	f9 e0       	ldi	r31, 0x09	; 9
    3c40:	9f 12       	cpse	r9, r31
    3c42:	ba cf       	rjmp	.-140    	; 0x3bb8 <WriteNumber+0x13a>
			}
		}
	}
	else
	{	//for (jj=Number_Font_Length_Bytes*(NumberToWrite+1)-1; jj>Number_Font_Length_Bytes*NumberToWrite; jj--)
		for (jj=Number_Font_Length_Bytes*NumberToWrite; jj<(Number_Font_Length_Bytes)*(NumberToWrite+1)-1; jj++)
    3c44:	4f ef       	ldi	r20, 0xFF	; 255
    3c46:	c4 1a       	sub	r12, r20
    3c48:	d4 0a       	sbc	r13, r20
    3c4a:	d0 92 7a 11 	sts	0x117A, r13	; 0x80117a <jj.2607+0x1>
    3c4e:	c0 92 79 11 	sts	0x1179, r12	; 0x801179 <jj.2607>
    3c52:	0e 5f       	subi	r16, 0xFE	; 254
    3c54:	1f 4f       	sbci	r17, 0xFF	; 255
    3c56:	ca 14       	cp	r12, r10
    3c58:	db 04       	cpc	r13, r11
    3c5a:	08 f4       	brcc	.+2      	; 0x3c5e <WriteNumber+0x1e0>
    3c5c:	a9 cf       	rjmp	.-174    	; 0x3bb0 <WriteNumber+0x132>
				if (i>=256){
				i=1;}
			}
		}
	}
}
    3c5e:	df 91       	pop	r29
    3c60:	cf 91       	pop	r28
    3c62:	1f 91       	pop	r17
    3c64:	0f 91       	pop	r16
    3c66:	ff 90       	pop	r15
    3c68:	ef 90       	pop	r14
    3c6a:	df 90       	pop	r13
    3c6c:	cf 90       	pop	r12
    3c6e:	bf 90       	pop	r11
    3c70:	af 90       	pop	r10
    3c72:	9f 90       	pop	r9
    3c74:	08 95       	ret

00003c76 <WriteDot>:


//Letters *********************************************************** Letters *************************************************

void WriteDot(unsigned int X_pos, unsigned int Y_pos, unsigned int Colour)
{
    3c76:	af 92       	push	r10
    3c78:	bf 92       	push	r11
    3c7a:	cf 92       	push	r12
    3c7c:	df 92       	push	r13
    3c7e:	ef 92       	push	r14
    3c80:	ff 92       	push	r15
    3c82:	1f 93       	push	r17
    3c84:	cf 93       	push	r28
    3c86:	df 93       	push	r29
    3c88:	ec 01       	movw	r28, r24
    3c8a:	7b 01       	movw	r14, r22
    3c8c:	ca 01       	movw	r24, r20
	static unsigned char x=0;
	static unsigned char dataout=0;
	static unsigned int i=1;
	static unsigned int jj=0;
	
	setpixelColour(Colour);
    3c8e:	cf dd       	rcall	.-1122   	; 0x382e <setpixelColour>
	setDisplayDotFont(X_pos,Y_pos);
    3c90:	b7 01       	movw	r22, r14
    3c92:	ce 01       	movw	r24, r28
    3c94:	bb d9       	rcall	.-3210   	; 0x300c <setDisplayDotFont>
	
	
	for (jj=Dot_Font_Start; jj<Dot_Font_Length_Bytes; jj++)
    3c96:	10 92 71 11 	sts	0x1171, r1	; 0x801171 <jj.2656+0x1>
    3c9a:	10 92 70 11 	sts	0x1170, r1	; 0x801170 <jj.2656>
    3c9e:	0f 2e       	mov	r0, r31
    3ca0:	fa ea       	ldi	r31, 0xAA	; 170
    3ca2:	ef 2e       	mov	r14, r31
    3ca4:	f7 e0       	ldi	r31, 0x07	; 7
    3ca6:	ff 2e       	mov	r15, r31
    3ca8:	f0 2d       	mov	r31, r0
    3caa:	aa 24       	eor	r10, r10
    3cac:	a3 94       	inc	r10
    3cae:	b1 2c       	mov	r11, r1
			}
			i=i<<1;

			if (i>=256)
			{
				i=1;
    3cb0:	cc 24       	eor	r12, r12
    3cb2:	c3 94       	inc	r12
    3cb4:	d1 2c       	mov	r13, r1
	setDisplayDotFont(X_pos,Y_pos);
	
	
	for (jj=Dot_Font_Start; jj<Dot_Font_Length_Bytes; jj++)
	{
		for (x=0; x<8; x++)
    3cb6:	10 92 6f 11 	sts	0x116F, r1	; 0x80116f <x.2653>
    3cba:	11 e0       	ldi	r17, 0x01	; 1
		{
			dataout = Dot_font[jj] &i;
    3cbc:	c0 91 10 02 	lds	r28, 0x0210	; 0x800210 <i.2655>
    3cc0:	d0 91 11 02 	lds	r29, 0x0211	; 0x800211 <i.2655+0x1>
			if (dataout >=1)
    3cc4:	f7 01       	movw	r30, r14
    3cc6:	80 81       	ld	r24, Z
    3cc8:	8c 23       	and	r24, r28
    3cca:	a9 f0       	breq	.+42     	; 0x3cf6 <WriteDot+0x80>
// Red 0-31, Green 0-63, Blue 0-31
void WritePixel(unsigned char Red, unsigned char Green, unsigned char Blue)
{
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
    3ccc:	80 91 ab 11 	lds	r24, 0x11AB	; 0x8011ab <R>
    3cd0:	90 e0       	ldi	r25, 0x00	; 0
    3cd2:	98 2f       	mov	r25, r24
    3cd4:	88 27       	eor	r24, r24
    3cd6:	99 0f       	add	r25, r25
    3cd8:	99 0f       	add	r25, r25
    3cda:	99 0f       	add	r25, r25
    3cdc:	20 91 a9 11 	lds	r18, 0x11A9	; 0x8011a9 <G>
    3ce0:	40 e2       	ldi	r20, 0x20	; 32
    3ce2:	24 9f       	mul	r18, r20
    3ce4:	90 01       	movw	r18, r0
    3ce6:	11 24       	eor	r1, r1
    3ce8:	82 2b       	or	r24, r18
    3cea:	93 2b       	or	r25, r19
	data |= Blue;
	
	WriteData(data);
    3cec:	20 91 a5 11 	lds	r18, 0x11A5	; 0x8011a5 <B>
    3cf0:	82 2b       	or	r24, r18
    3cf2:	12 d9       	rcall	.-3548   	; 0x2f18 <WriteData>
    3cf4:	14 c0       	rjmp	.+40     	; 0x3d1e <WriteDot+0xa8>
// Red 0-31, Green 0-63, Blue 0-31
void WritePixel(unsigned char Red, unsigned char Green, unsigned char Blue)
{
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
    3cf6:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <R_back>
    3cfa:	90 e0       	ldi	r25, 0x00	; 0
    3cfc:	98 2f       	mov	r25, r24
    3cfe:	88 27       	eor	r24, r24
    3d00:	99 0f       	add	r25, r25
    3d02:	99 0f       	add	r25, r25
    3d04:	99 0f       	add	r25, r25
    3d06:	20 91 ac 11 	lds	r18, 0x11AC	; 0x8011ac <G_back>
    3d0a:	e0 e2       	ldi	r30, 0x20	; 32
    3d0c:	2e 9f       	mul	r18, r30
    3d0e:	90 01       	movw	r18, r0
    3d10:	11 24       	eor	r1, r1
    3d12:	82 2b       	or	r24, r18
    3d14:	93 2b       	or	r25, r19
	data |= Blue;
	
	WriteData(data);
    3d16:	20 91 a1 11 	lds	r18, 0x11A1	; 0x8011a1 <B_back>
    3d1a:	82 2b       	or	r24, r18
    3d1c:	fd d8       	rcall	.-3590   	; 0x2f18 <WriteData>
			}
			else
			{
				WritePixel(R_back,G_back,B_back);
			}
			i=i<<1;
    3d1e:	cc 0f       	add	r28, r28
    3d20:	dd 1f       	adc	r29, r29

			if (i>=256)
    3d22:	cf 3f       	cpi	r28, 0xFF	; 255
    3d24:	d1 05       	cpc	r29, r1
    3d26:	09 f0       	breq	.+2      	; 0x3d2a <WriteDot+0xb4>
    3d28:	28 f4       	brcc	.+10     	; 0x3d34 <WriteDot+0xbe>
			}
			else
			{
				WritePixel(R_back,G_back,B_back);
			}
			i=i<<1;
    3d2a:	d0 93 11 02 	sts	0x0211, r29	; 0x800211 <i.2655+0x1>
    3d2e:	c0 93 10 02 	sts	0x0210, r28	; 0x800210 <i.2655>
    3d32:	04 c0       	rjmp	.+8      	; 0x3d3c <WriteDot+0xc6>

			if (i>=256)
			{
				i=1;
    3d34:	d0 92 11 02 	sts	0x0211, r13	; 0x800211 <i.2655+0x1>
    3d38:	c0 92 10 02 	sts	0x0210, r12	; 0x800210 <i.2655>
	setDisplayDotFont(X_pos,Y_pos);
	
	
	for (jj=Dot_Font_Start; jj<Dot_Font_Length_Bytes; jj++)
	{
		for (x=0; x<8; x++)
    3d3c:	10 93 6f 11 	sts	0x116F, r17	; 0x80116f <x.2653>
    3d40:	1f 5f       	subi	r17, 0xFF	; 255
    3d42:	19 30       	cpi	r17, 0x09	; 9
    3d44:	09 f0       	breq	.+2      	; 0x3d48 <WriteDot+0xd2>
    3d46:	ba cf       	rjmp	.-140    	; 0x3cbc <WriteDot+0x46>
	
	setpixelColour(Colour);
	setDisplayDotFont(X_pos,Y_pos);
	
	
	for (jj=Dot_Font_Start; jj<Dot_Font_Length_Bytes; jj++)
    3d48:	b0 92 71 11 	sts	0x1171, r11	; 0x801171 <jj.2656+0x1>
    3d4c:	a0 92 70 11 	sts	0x1170, r10	; 0x801170 <jj.2656>
    3d50:	ff ef       	ldi	r31, 0xFF	; 255
    3d52:	af 1a       	sub	r10, r31
    3d54:	bf 0a       	sbc	r11, r31
    3d56:	42 e0       	ldi	r20, 0x02	; 2
    3d58:	e4 0e       	add	r14, r20
    3d5a:	f1 1c       	adc	r15, r1
    3d5c:	89 e0       	ldi	r24, 0x09	; 9
    3d5e:	a8 16       	cp	r10, r24
    3d60:	b1 04       	cpc	r11, r1
    3d62:	09 f0       	breq	.+2      	; 0x3d66 <WriteDot+0xf0>
    3d64:	a8 cf       	rjmp	.-176    	; 0x3cb6 <WriteDot+0x40>
				i=1;
			}
		}
	}
	
}
    3d66:	df 91       	pop	r29
    3d68:	cf 91       	pop	r28
    3d6a:	1f 91       	pop	r17
    3d6c:	ff 90       	pop	r15
    3d6e:	ef 90       	pop	r14
    3d70:	df 90       	pop	r13
    3d72:	cf 90       	pop	r12
    3d74:	bf 90       	pop	r11
    3d76:	af 90       	pop	r10
    3d78:	08 95       	ret

00003d7a <WriteNumberFromADC>:
	}
}


void WriteNumberFromADC(unsigned int X_Position, unsigned int Y_Position, unsigned int setColour, float num)
{
    3d7a:	2f 92       	push	r2
    3d7c:	3f 92       	push	r3
    3d7e:	4f 92       	push	r4
    3d80:	5f 92       	push	r5
    3d82:	6f 92       	push	r6
    3d84:	7f 92       	push	r7
    3d86:	8f 92       	push	r8
    3d88:	9f 92       	push	r9
    3d8a:	af 92       	push	r10
    3d8c:	bf 92       	push	r11
    3d8e:	cf 92       	push	r12
    3d90:	df 92       	push	r13
    3d92:	ef 92       	push	r14
    3d94:	ff 92       	push	r15
    3d96:	0f 93       	push	r16
    3d98:	1f 93       	push	r17
    3d9a:	cf 93       	push	r28
    3d9c:	df 93       	push	r29
    3d9e:	cd b7       	in	r28, 0x3d	; 61
    3da0:	de b7       	in	r29, 0x3e	; 62
    3da2:	e4 97       	sbiw	r28, 0x34	; 52
    3da4:	0f b6       	in	r0, 0x3f	; 63
    3da6:	f8 94       	cli
    3da8:	de bf       	out	0x3e, r29	; 62
    3daa:	0f be       	out	0x3f, r0	; 63
    3dac:	cd bf       	out	0x3d, r28	; 61
    3dae:	4c 01       	movw	r8, r24
    3db0:	5b 01       	movw	r10, r22
    3db2:	5c ab       	std	Y+52, r21	; 0x34
    3db4:	4b ab       	std	Y+51, r20	; 0x33
    3db6:	c9 01       	movw	r24, r18
    3db8:	b8 01       	movw	r22, r16
	static unsigned char numberstring[6];
	
	// === FOR DEBUGGING === //
	char debugMsg[50];
	
	dtostrf(num, 3, 3, numberstring);     // Converts input unsigned long integer number to a string
    3dba:	02 e7       	ldi	r16, 0x72	; 114
    3dbc:	11 e1       	ldi	r17, 0x11	; 17
    3dbe:	23 e0       	ldi	r18, 0x03	; 3
    3dc0:	43 e0       	ldi	r20, 0x03	; 3
    3dc2:	0e 94 06 27 	call	0x4e0c	; 0x4e0c <dtostrf>
	sprintf(debugMsg, "WriteNumber is %6s\r\n", numberstring);
    3dc6:	78 01       	movw	r14, r16
    3dc8:	ff 92       	push	r15
    3dca:	0f 93       	push	r16
    3dcc:	81 ec       	ldi	r24, 0xC1	; 193
    3dce:	92 e0       	ldi	r25, 0x02	; 2
    3dd0:	9f 93       	push	r25
    3dd2:	8f 93       	push	r24
    3dd4:	8e 01       	movw	r16, r28
    3dd6:	0f 5f       	subi	r16, 0xFF	; 255
    3dd8:	1f 4f       	sbci	r17, 0xFF	; 255
    3dda:	1f 93       	push	r17
    3ddc:	0f 93       	push	r16
    3dde:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <sprintf>
	SendString(UART0, debugMsg );
    3de2:	b8 01       	movw	r22, r16
    3de4:	80 ec       	ldi	r24, 0xC0	; 192
    3de6:	90 e0       	ldi	r25, 0x00	; 0
    3de8:	7b d8       	rcall	.-3850   	; 0x2ee0 <SendString>
	clearPromille(X_Position, Y_Position, Background_Colour, strlen(numberstring));
    3dea:	f7 01       	movw	r30, r14
    3dec:	01 90       	ld	r0, Z+
    3dee:	00 20       	and	r0, r0
    3df0:	e9 f7       	brne	.-6      	; 0x3dec <WriteNumberFromADC+0x72>
    3df2:	31 97       	sbiw	r30, 0x01	; 1
    3df4:	9f 01       	movw	r18, r30
    3df6:	22 57       	subi	r18, 0x72	; 114
    3df8:	31 41       	sbci	r19, 0x11	; 17
    3dfa:	40 91 a6 11 	lds	r20, 0x11A6	; 0x8011a6 <Background_Colour>
    3dfe:	b5 01       	movw	r22, r10
    3e00:	c4 01       	movw	r24, r8
    3e02:	2b d9       	rcall	.-3498   	; 0x305a <clearPromille>
    3e04:	87 01       	movw	r16, r14
	
	for (i = 0; i < strlen(numberstring); i++)
    3e06:	0f 90       	pop	r0
    3e08:	0f 90       	pop	r0
    3e0a:	0f 90       	pop	r0
    3e0c:	0f 90       	pop	r0
    3e0e:	0f 90       	pop	r0
    3e10:	0f 90       	pop	r0
{
	unsigned int Font_Width;
	Font_Width = Number_Font_Width + Number_Font_Spacing;
	unsigned int posX;
	unsigned int i = 0;
	unsigned int tempIndex = 0;
    3e12:	61 2c       	mov	r6, r1
    3e14:	71 2c       	mov	r7, r1
	dtostrf(num, 3, 3, numberstring);     // Converts input unsigned long integer number to a string
	sprintf(debugMsg, "WriteNumber is %6s\r\n", numberstring);
	SendString(UART0, debugMsg );
	clearPromille(X_Position, Y_Position, Background_Colour, strlen(numberstring));
	
	for (i = 0; i < strlen(numberstring); i++)
    3e16:	e1 2c       	mov	r14, r1
    3e18:	f1 2c       	mov	r15, r1
    3e1a:	28 01       	movw	r4, r16
    3e1c:	97 c0       	rjmp	.+302    	; 0x3f4c <WriteNumberFromADC+0x1d2>
    3e1e:	18 01       	movw	r2, r16
	{

		if(numberstring[i] == 46)
    3e20:	d8 01       	movw	r26, r16
    3e22:	8c 91       	ld	r24, X
    3e24:	8e 32       	cpi	r24, 0x2E	; 46
    3e26:	49 f4       	brne	.+18     	; 0x3e3a <WriteNumberFromADC+0xc0>
		{
			posX = posX + Font_Width;
    3e28:	b9 e1       	ldi	r27, 0x19	; 25
    3e2a:	cb 0e       	add	r12, r27
    3e2c:	d1 1c       	adc	r13, r1
			SendString(UART0, "NumberString[i]");
    3e2e:	66 ed       	ldi	r22, 0xD6	; 214
    3e30:	72 e0       	ldi	r23, 0x02	; 2
    3e32:	80 ec       	ldi	r24, 0xC0	; 192
    3e34:	90 e0       	ldi	r25, 0x00	; 0
    3e36:	54 d8       	rcall	.-3928   	; 0x2ee0 <SendString>
    3e38:	20 c0       	rjmp	.+64     	; 0x3e7a <WriteNumberFromADC+0x100>
			
		}
		else if (numberstring[i-1] == 46)
    3e3a:	f8 01       	movw	r30, r16
    3e3c:	31 97       	sbiw	r30, 0x01	; 1
    3e3e:	80 81       	ld	r24, Z
    3e40:	8e 32       	cpi	r24, 0x2E	; 46
    3e42:	59 f4       	brne	.+22     	; 0x3e5a <WriteNumberFromADC+0xe0>
		{
			posX = posX + Number_Font_Spacing*8;
    3e44:	e8 e0       	ldi	r30, 0x08	; 8
    3e46:	ce 0e       	add	r12, r30
    3e48:	d1 1c       	adc	r13, r1
			X_Position = posX;
			SendString(UART0, "NumberString[i-1]");
    3e4a:	66 ee       	ldi	r22, 0xE6	; 230
    3e4c:	72 e0       	ldi	r23, 0x02	; 2
    3e4e:	80 ec       	ldi	r24, 0xC0	; 192
    3e50:	90 e0       	ldi	r25, 0x00	; 0
    3e52:	46 d8       	rcall	.-3956   	; 0x2ee0 <SendString>
			tempIndex = i;
    3e54:	37 01       	movw	r6, r14
			
		}
		else if (numberstring[i-1] == 46)
		{
			posX = posX + Number_Font_Spacing*8;
			X_Position = posX;
    3e56:	46 01       	movw	r8, r12
    3e58:	10 c0       	rjmp	.+32     	; 0x3e7a <WriteNumberFromADC+0x100>
			SendString(UART0, "NumberString[i-1]");
			tempIndex = i;
		}
		else
		{
			posX = X_Position + Font_Width*(i-tempIndex);
    3e5a:	c7 01       	movw	r24, r14
    3e5c:	86 19       	sub	r24, r6
    3e5e:	97 09       	sbc	r25, r7
    3e60:	f9 e1       	ldi	r31, 0x19	; 25
    3e62:	f8 9f       	mul	r31, r24
    3e64:	60 01       	movw	r12, r0
    3e66:	f9 9f       	mul	r31, r25
    3e68:	d0 0c       	add	r13, r0
    3e6a:	11 24       	eor	r1, r1
    3e6c:	c8 0c       	add	r12, r8
    3e6e:	d9 1c       	adc	r13, r9
			SendString(UART0, "Else");
    3e70:	68 ef       	ldi	r22, 0xF8	; 248
    3e72:	72 e0       	ldi	r23, 0x02	; 2
    3e74:	80 ec       	ldi	r24, 0xC0	; 192
    3e76:	90 e0       	ldi	r25, 0x00	; 0
    3e78:	33 d8       	rcall	.-3994   	; 0x2ee0 <SendString>
    3e7a:	0f 5f       	subi	r16, 0xFF	; 255
    3e7c:	1f 4f       	sbci	r17, 0xFF	; 255
		}
		
		switch (numberstring[i])  {  //units position
    3e7e:	d1 01       	movw	r26, r2
    3e80:	ec 91       	ld	r30, X
    3e82:	8e 2f       	mov	r24, r30
    3e84:	90 e0       	ldi	r25, 0x00	; 0
    3e86:	fc 01       	movw	r30, r24
    3e88:	be 97       	sbiw	r30, 0x2e	; 46
    3e8a:	ec 30       	cpi	r30, 0x0C	; 12
    3e8c:	f1 05       	cpc	r31, r1
    3e8e:	08 f0       	brcs	.+2      	; 0x3e92 <WriteNumberFromADC+0x118>
    3e90:	5a c0       	rjmp	.+180    	; 0x3f46 <WriteNumberFromADC+0x1cc>
    3e92:	88 27       	eor	r24, r24
    3e94:	ee 54       	subi	r30, 0x4E	; 78
    3e96:	ff 4f       	sbci	r31, 0xFF	; 255
    3e98:	8f 4f       	sbci	r24, 0xFF	; 255
    3e9a:	97 c7       	rjmp	.+3886   	; 0x4dca <__tablejump2__>
			case 46: WriteDot(posX, Y_Position, setColour);
    3e9c:	4b a9       	ldd	r20, Y+51	; 0x33
    3e9e:	5c a9       	ldd	r21, Y+52	; 0x34
    3ea0:	b5 01       	movw	r22, r10
    3ea2:	c6 01       	movw	r24, r12
    3ea4:	e8 de       	rcall	.-560    	; 0x3c76 <WriteDot>
			break;
    3ea6:	4f c0       	rjmp	.+158    	; 0x3f46 <WriteNumberFromADC+0x1cc>
			case 48:
			WriteNumber(posX,Y_Position, setColour, 0);
    3ea8:	20 e0       	ldi	r18, 0x00	; 0
    3eaa:	30 e0       	ldi	r19, 0x00	; 0
    3eac:	4b a9       	ldd	r20, Y+51	; 0x33
    3eae:	5c a9       	ldd	r21, Y+52	; 0x34
    3eb0:	b5 01       	movw	r22, r10
    3eb2:	c6 01       	movw	r24, r12
    3eb4:	e4 dd       	rcall	.-1080   	; 0x3a7e <WriteNumber>
			break;
    3eb6:	47 c0       	rjmp	.+142    	; 0x3f46 <WriteNumberFromADC+0x1cc>
			case 49:
			WriteNumber(posX,Y_Position, setColour, 1);
    3eb8:	21 e0       	ldi	r18, 0x01	; 1
    3eba:	30 e0       	ldi	r19, 0x00	; 0
    3ebc:	4b a9       	ldd	r20, Y+51	; 0x33
    3ebe:	5c a9       	ldd	r21, Y+52	; 0x34
    3ec0:	b5 01       	movw	r22, r10
    3ec2:	c6 01       	movw	r24, r12
    3ec4:	dc dd       	rcall	.-1096   	; 0x3a7e <WriteNumber>
			break;
    3ec6:	3f c0       	rjmp	.+126    	; 0x3f46 <WriteNumberFromADC+0x1cc>
			case 50:
			WriteNumber(posX,Y_Position, setColour, 2);
    3ec8:	22 e0       	ldi	r18, 0x02	; 2
    3eca:	30 e0       	ldi	r19, 0x00	; 0
    3ecc:	4b a9       	ldd	r20, Y+51	; 0x33
    3ece:	5c a9       	ldd	r21, Y+52	; 0x34
    3ed0:	b5 01       	movw	r22, r10
    3ed2:	c6 01       	movw	r24, r12
    3ed4:	d4 dd       	rcall	.-1112   	; 0x3a7e <WriteNumber>
			break;
    3ed6:	37 c0       	rjmp	.+110    	; 0x3f46 <WriteNumberFromADC+0x1cc>
			case 51:
			WriteNumber(posX,Y_Position, setColour, 3);
    3ed8:	23 e0       	ldi	r18, 0x03	; 3
    3eda:	30 e0       	ldi	r19, 0x00	; 0
    3edc:	4b a9       	ldd	r20, Y+51	; 0x33
    3ede:	5c a9       	ldd	r21, Y+52	; 0x34
    3ee0:	b5 01       	movw	r22, r10
    3ee2:	c6 01       	movw	r24, r12
    3ee4:	cc dd       	rcall	.-1128   	; 0x3a7e <WriteNumber>
			break;
    3ee6:	2f c0       	rjmp	.+94     	; 0x3f46 <WriteNumberFromADC+0x1cc>
			case 52:
			WriteNumber(posX,Y_Position, setColour, 4);
    3ee8:	24 e0       	ldi	r18, 0x04	; 4
    3eea:	30 e0       	ldi	r19, 0x00	; 0
    3eec:	4b a9       	ldd	r20, Y+51	; 0x33
    3eee:	5c a9       	ldd	r21, Y+52	; 0x34
    3ef0:	b5 01       	movw	r22, r10
    3ef2:	c6 01       	movw	r24, r12
    3ef4:	c4 dd       	rcall	.-1144   	; 0x3a7e <WriteNumber>
			break;
    3ef6:	27 c0       	rjmp	.+78     	; 0x3f46 <WriteNumberFromADC+0x1cc>
			case 53:
			WriteNumber(posX,Y_Position, setColour, 5);
    3ef8:	25 e0       	ldi	r18, 0x05	; 5
    3efa:	30 e0       	ldi	r19, 0x00	; 0
    3efc:	4b a9       	ldd	r20, Y+51	; 0x33
    3efe:	5c a9       	ldd	r21, Y+52	; 0x34
    3f00:	b5 01       	movw	r22, r10
    3f02:	c6 01       	movw	r24, r12
    3f04:	bc dd       	rcall	.-1160   	; 0x3a7e <WriteNumber>
			break;
			case 54:
			WriteNumber(posX,Y_Position, setColour, 6);
    3f06:	1f c0       	rjmp	.+62     	; 0x3f46 <WriteNumberFromADC+0x1cc>
    3f08:	26 e0       	ldi	r18, 0x06	; 6
    3f0a:	30 e0       	ldi	r19, 0x00	; 0
    3f0c:	4b a9       	ldd	r20, Y+51	; 0x33
    3f0e:	5c a9       	ldd	r21, Y+52	; 0x34
    3f10:	b5 01       	movw	r22, r10
    3f12:	c6 01       	movw	r24, r12
			break;
    3f14:	b4 dd       	rcall	.-1176   	; 0x3a7e <WriteNumber>
			case 55:
			WriteNumber(posX,Y_Position, setColour, 7);
    3f16:	17 c0       	rjmp	.+46     	; 0x3f46 <WriteNumberFromADC+0x1cc>
    3f18:	27 e0       	ldi	r18, 0x07	; 7
    3f1a:	30 e0       	ldi	r19, 0x00	; 0
    3f1c:	4b a9       	ldd	r20, Y+51	; 0x33
    3f1e:	5c a9       	ldd	r21, Y+52	; 0x34
    3f20:	b5 01       	movw	r22, r10
    3f22:	c6 01       	movw	r24, r12
			break;
    3f24:	ac dd       	rcall	.-1192   	; 0x3a7e <WriteNumber>
			case 56:
			WriteNumber(posX,Y_Position, setColour, 8);
    3f26:	0f c0       	rjmp	.+30     	; 0x3f46 <WriteNumberFromADC+0x1cc>
    3f28:	28 e0       	ldi	r18, 0x08	; 8
    3f2a:	30 e0       	ldi	r19, 0x00	; 0
    3f2c:	4b a9       	ldd	r20, Y+51	; 0x33
    3f2e:	5c a9       	ldd	r21, Y+52	; 0x34
    3f30:	b5 01       	movw	r22, r10
    3f32:	c6 01       	movw	r24, r12
			break;
    3f34:	a4 dd       	rcall	.-1208   	; 0x3a7e <WriteNumber>
			case 57:
			WriteNumber(posX,Y_Position, setColour, 9);
    3f36:	07 c0       	rjmp	.+14     	; 0x3f46 <WriteNumberFromADC+0x1cc>
    3f38:	29 e0       	ldi	r18, 0x09	; 9
    3f3a:	30 e0       	ldi	r19, 0x00	; 0
    3f3c:	4b a9       	ldd	r20, Y+51	; 0x33
    3f3e:	5c a9       	ldd	r21, Y+52	; 0x34
    3f40:	b5 01       	movw	r22, r10
    3f42:	c6 01       	movw	r24, r12
    3f44:	9c dd       	rcall	.-1224   	; 0x3a7e <WriteNumber>
	dtostrf(num, 3, 3, numberstring);     // Converts input unsigned long integer number to a string
	sprintf(debugMsg, "WriteNumber is %6s\r\n", numberstring);
	SendString(UART0, debugMsg );
	clearPromille(X_Position, Y_Position, Background_Colour, strlen(numberstring));
	
	for (i = 0; i < strlen(numberstring); i++)
    3f46:	bf ef       	ldi	r27, 0xFF	; 255
    3f48:	eb 1a       	sub	r14, r27
    3f4a:	fb 0a       	sbc	r15, r27
    3f4c:	f2 01       	movw	r30, r4
    3f4e:	01 90       	ld	r0, Z+
    3f50:	00 20       	and	r0, r0
    3f52:	e9 f7       	brne	.-6      	; 0x3f4e <WriteNumberFromADC+0x1d4>
    3f54:	31 97       	sbiw	r30, 0x01	; 1
    3f56:	e2 57       	subi	r30, 0x72	; 114
    3f58:	f1 41       	sbci	r31, 0x11	; 17
    3f5a:	ee 16       	cp	r14, r30
    3f5c:	ff 06       	cpc	r15, r31
    3f5e:	08 f4       	brcc	.+2      	; 0x3f62 <WriteNumberFromADC+0x1e8>
    3f60:	5e cf       	rjmp	.-324    	; 0x3e1e <WriteNumberFromADC+0xa4>
			default:    break;
		}
	}


}
    3f62:	e4 96       	adiw	r28, 0x34	; 52
    3f64:	0f b6       	in	r0, 0x3f	; 63
    3f66:	f8 94       	cli
    3f68:	de bf       	out	0x3e, r29	; 62
    3f6a:	0f be       	out	0x3f, r0	; 63
    3f6c:	cd bf       	out	0x3d, r28	; 61
    3f6e:	df 91       	pop	r29
    3f70:	cf 91       	pop	r28
    3f72:	1f 91       	pop	r17
    3f74:	0f 91       	pop	r16
    3f76:	ff 90       	pop	r15
    3f78:	ef 90       	pop	r14
    3f7a:	df 90       	pop	r13
    3f7c:	cf 90       	pop	r12
    3f7e:	bf 90       	pop	r11
    3f80:	af 90       	pop	r10
    3f82:	9f 90       	pop	r9
    3f84:	8f 90       	pop	r8
    3f86:	7f 90       	pop	r7
    3f88:	6f 90       	pop	r6
    3f8a:	5f 90       	pop	r5
    3f8c:	4f 90       	pop	r4
    3f8e:	3f 90       	pop	r3
    3f90:	2f 90       	pop	r2
    3f92:	08 95       	ret

00003f94 <AsciiToFontIndex>:
	
}

unsigned int AsciiToFontIndex(char Letter)
{
	switch(Letter){ // Returnerer det rigtige index for de forskellige bogstavers hexkode
    3f94:	90 e0       	ldi	r25, 0x00	; 0
    3f96:	fc 01       	movw	r30, r24
    3f98:	fa 97       	sbiw	r30, 0x3a	; 58
    3f9a:	e1 34       	cpi	r30, 0x41	; 65
    3f9c:	f1 05       	cpc	r31, r1
    3f9e:	48 f5       	brcc	.+82     	; 0x3ff2 <AsciiToFontIndex+0x5e>
    3fa0:	88 27       	eor	r24, r24
    3fa2:	e2 54       	subi	r30, 0x42	; 66
    3fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    3fa6:	8f 4f       	sbci	r24, 0xFF	; 255
    3fa8:	10 c7       	rjmp	.+3616   	; 0x4dca <__tablejump2__>
		case 66:	return 1;	break;
		case 114:	return 2;	break;
    3faa:	82 e0       	ldi	r24, 0x02	; 2
    3fac:	90 e0       	ldi	r25, 0x00	; 0
    3fae:	08 95       	ret
		case 101:	return 3;	break;
		case 97:	return 4;	break;
    3fb0:	84 e0       	ldi	r24, 0x04	; 4
    3fb2:	90 e0       	ldi	r25, 0x00	; 0
    3fb4:	08 95       	ret
		case 116:	return 5;	break;
    3fb6:	85 e0       	ldi	r24, 0x05	; 5
    3fb8:	90 e0       	ldi	r25, 0x00	; 0
    3fba:	08 95       	ret
		case 104:	return 6;	break;
    3fbc:	86 e0       	ldi	r24, 0x06	; 6
    3fbe:	90 e0       	ldi	r25, 0x00	; 0
    3fc0:	08 95       	ret
		case 108:	return 7;	break;
    3fc2:	87 e0       	ldi	r24, 0x07	; 7
    3fc4:	90 e0       	ldi	r25, 0x00	; 0
    3fc6:	08 95       	ret
		case 121:	return 8;	break;
    3fc8:	88 e0       	ldi	r24, 0x08	; 8
    3fca:	90 e0       	ldi	r25, 0x00	; 0
    3fcc:	08 95       	ret
		case 122:	return 9;	break;
    3fce:	89 e0       	ldi	r24, 0x09	; 9
    3fd0:	90 e0       	ldi	r25, 0x00	; 0
    3fd2:	08 95       	ret
		case 80:	return 10;	break;
    3fd4:	8a e0       	ldi	r24, 0x0A	; 10
    3fd6:	90 e0       	ldi	r25, 0x00	; 0
    3fd8:	08 95       	ret
		case 111:	return 11;	break;
    3fda:	8b e0       	ldi	r24, 0x0B	; 11
    3fdc:	90 e0       	ldi	r25, 0x00	; 0
    3fde:	08 95       	ret
		case 109:	return 12;	break;
    3fe0:	8c e0       	ldi	r24, 0x0C	; 12
    3fe2:	90 e0       	ldi	r25, 0x00	; 0
    3fe4:	08 95       	ret
		case 105:	return 13;	break;
    3fe6:	8d e0       	ldi	r24, 0x0D	; 13
    3fe8:	90 e0       	ldi	r25, 0x00	; 0
    3fea:	08 95       	ret
		case 58:	return 14;	break;
    3fec:	8e e0       	ldi	r24, 0x0E	; 14
    3fee:	90 e0       	ldi	r25, 0x00	; 0
    3ff0:	08 95       	ret
		default: break;
	}
	
}
    3ff2:	08 95       	ret
}

unsigned int AsciiToFontIndex(char Letter)
{
	switch(Letter){ // Returnerer det rigtige index for de forskellige bogstavers hexkode
		case 66:	return 1;	break;
    3ff4:	81 e0       	ldi	r24, 0x01	; 1
    3ff6:	90 e0       	ldi	r25, 0x00	; 0
    3ff8:	08 95       	ret
		case 114:	return 2;	break;
		case 101:	return 3;	break;
    3ffa:	83 e0       	ldi	r24, 0x03	; 3
    3ffc:	90 e0       	ldi	r25, 0x00	; 0
		case 105:	return 13;	break;
		case 58:	return 14;	break;
		default: break;
	}
	
}
    3ffe:	08 95       	ret

00004000 <WriteLetter>:

void WriteLetter(unsigned int X_pos, unsigned int Y_pos, unsigned int Colour, char LetterToWrite)
{
    4000:	7f 92       	push	r7
    4002:	8f 92       	push	r8
    4004:	9f 92       	push	r9
    4006:	af 92       	push	r10
    4008:	bf 92       	push	r11
    400a:	cf 92       	push	r12
    400c:	df 92       	push	r13
    400e:	ef 92       	push	r14
    4010:	ff 92       	push	r15
    4012:	0f 93       	push	r16
    4014:	1f 93       	push	r17
    4016:	cf 93       	push	r28
    4018:	df 93       	push	r29
    401a:	cd b7       	in	r28, 0x3d	; 61
    401c:	de b7       	in	r29, 0x3e	; 62
    401e:	e2 97       	sbiw	r28, 0x32	; 50
    4020:	0f b6       	in	r0, 0x3f	; 63
    4022:	f8 94       	cli
    4024:	de bf       	out	0x3e, r29	; 62
    4026:	0f be       	out	0x3f, r0	; 63
    4028:	cd bf       	out	0x3d, r28	; 61
    402a:	6c 01       	movw	r12, r24
    402c:	5b 01       	movw	r10, r22
    402e:	4a 01       	movw	r8, r20
    4030:	82 2f       	mov	r24, r18
	static unsigned char x=0;
	static unsigned char dataout=0;
	static unsigned int i=1;
	static unsigned int jj=0;
	unsigned int LetterIndex = AsciiToFontIndex(LetterToWrite);
    4032:	b0 df       	rcall	.-160    	; 0x3f94 <AsciiToFontIndex>
    4034:	7c 01       	movw	r14, r24
	// === FOR DEBUGGING === //
	char debugMsg[50];
	static unsigned char numberstring[6];
	
	dtostrf(LetterIndex, 3, 3, numberstring);     // Converts input unsigned long integer number to a string
    4036:	bc 01       	movw	r22, r24
    4038:	80 e0       	ldi	r24, 0x00	; 0
    403a:	90 e0       	ldi	r25, 0x00	; 0
    403c:	2a d4       	rcall	.+2132   	; 0x4892 <__floatunsisf>
    403e:	09 e6       	ldi	r16, 0x69	; 105
    4040:	11 e1       	ldi	r17, 0x11	; 17
    4042:	23 e0       	ldi	r18, 0x03	; 3
    4044:	43 e0       	ldi	r20, 0x03	; 3
    4046:	e2 d6       	rcall	.+3524   	; 0x4e0c <dtostrf>
	sprintf(debugMsg, "WriteLetter is %6s\r\n", numberstring);
    4048:	c8 01       	movw	r24, r16
    404a:	9f 93       	push	r25
    404c:	0f 93       	push	r16
    404e:	8d ef       	ldi	r24, 0xFD	; 253
    4050:	92 e0       	ldi	r25, 0x02	; 2
    4052:	9f 93       	push	r25
    4054:	8f 93       	push	r24
    4056:	8e 01       	movw	r16, r28
    4058:	0f 5f       	subi	r16, 0xFF	; 255
    405a:	1f 4f       	sbci	r17, 0xFF	; 255
    405c:	1f 93       	push	r17
    405e:	0f 93       	push	r16
    4060:	fb d6       	rcall	.+3574   	; 0x4e58 <sprintf>
	SendString(UART0, debugMsg );
    4062:	b8 01       	movw	r22, r16
    4064:	80 ec       	ldi	r24, 0xC0	; 192
    4066:	90 e0       	ldi	r25, 0x00	; 0
    4068:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <SendString>
	
	setpixelColour(Colour);
    406c:	c4 01       	movw	r24, r8
    406e:	df db       	rcall	.-2114   	; 0x382e <setpixelColour>
	setDisplayLetterFont(X_pos,Y_pos);
    4070:	b5 01       	movw	r22, r10
    4072:	c6 01       	movw	r24, r12
    4074:	0e 94 f6 17 	call	0x2fec	; 0x2fec <setDisplayLetterFont>
	
	if(LetterIndex == 1) //Index 1 = start ved 0 ellers start ved index -1. Derved f?r den fat i den rigtige hex kode inde fra Letter_font arrayet
    4078:	0f 90       	pop	r0
    407a:	0f 90       	pop	r0
    407c:	0f 90       	pop	r0
    407e:	0f 90       	pop	r0
    4080:	0f 90       	pop	r0
    4082:	0f 90       	pop	r0
    4084:	21 e0       	ldi	r18, 0x01	; 1
    4086:	e2 16       	cp	r14, r18
    4088:	f1 04       	cpc	r15, r1
    408a:	09 f0       	breq	.+2      	; 0x408e <WriteLetter+0x8e>
    408c:	6c c0       	rjmp	.+216    	; 0x4166 <WriteLetter+0x166>
	{
		for (jj=Letter_Font_Start; jj<Letter_Font_Length_Bytes-1; jj++)
    408e:	10 92 68 11 	sts	0x1168, r1	; 0x801168 <jj.2691+0x1>
    4092:	10 92 67 11 	sts	0x1167, r1	; 0x801167 <jj.2691>
    4096:	0f 2e       	mov	r0, r31
    4098:	f2 e1       	ldi	r31, 0x12	; 18
    409a:	ef 2e       	mov	r14, r31
    409c:	f3 e0       	ldi	r31, 0x03	; 3
    409e:	ff 2e       	mov	r15, r31
    40a0:	f0 2d       	mov	r31, r0
    40a2:	aa 24       	eor	r10, r10
    40a4:	a3 94       	inc	r10
    40a6:	b1 2c       	mov	r11, r1
				}
				i=i<<1;

				if (i>=256)
				{
					i=1;
    40a8:	cc 24       	eor	r12, r12
    40aa:	c3 94       	inc	r12
    40ac:	d1 2c       	mov	r13, r1
	
	if(LetterIndex == 1) //Index 1 = start ved 0 ellers start ved index -1. Derved f?r den fat i den rigtige hex kode inde fra Letter_font arrayet
	{
		for (jj=Letter_Font_Start; jj<Letter_Font_Length_Bytes-1; jj++)
		{
			for (x=0; x<8; x++)
    40ae:	10 92 66 11 	sts	0x1166, r1	; 0x801166 <x.2688>
    40b2:	99 24       	eor	r9, r9
    40b4:	93 94       	inc	r9
			{
				dataout = Letter_Font[jj] &i;
    40b6:	00 91 0e 02 	lds	r16, 0x020E	; 0x80020e <i.2690>
    40ba:	10 91 0f 02 	lds	r17, 0x020F	; 0x80020f <i.2690+0x1>
				if (dataout >=1)
    40be:	f7 01       	movw	r30, r14
    40c0:	80 81       	ld	r24, Z
    40c2:	80 23       	and	r24, r16
    40c4:	b1 f0       	breq	.+44     	; 0x40f2 <WriteLetter+0xf2>
// Red 0-31, Green 0-63, Blue 0-31
void WritePixel(unsigned char Red, unsigned char Green, unsigned char Blue)
{
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
    40c6:	80 91 ab 11 	lds	r24, 0x11AB	; 0x8011ab <R>
    40ca:	90 e0       	ldi	r25, 0x00	; 0
    40cc:	98 2f       	mov	r25, r24
    40ce:	88 27       	eor	r24, r24
    40d0:	99 0f       	add	r25, r25
    40d2:	99 0f       	add	r25, r25
    40d4:	99 0f       	add	r25, r25
    40d6:	20 91 a9 11 	lds	r18, 0x11A9	; 0x8011a9 <G>
    40da:	f0 e2       	ldi	r31, 0x20	; 32
    40dc:	2f 9f       	mul	r18, r31
    40de:	90 01       	movw	r18, r0
    40e0:	11 24       	eor	r1, r1
    40e2:	82 2b       	or	r24, r18
    40e4:	93 2b       	or	r25, r19
	data |= Blue;
	
	WriteData(data);
    40e6:	20 91 a5 11 	lds	r18, 0x11A5	; 0x8011a5 <B>
    40ea:	82 2b       	or	r24, r18
    40ec:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <WriteData>
    40f0:	15 c0       	rjmp	.+42     	; 0x411c <WriteLetter+0x11c>
// Red 0-31, Green 0-63, Blue 0-31
void WritePixel(unsigned char Red, unsigned char Green, unsigned char Blue)
{
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
    40f2:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <R_back>
    40f6:	90 e0       	ldi	r25, 0x00	; 0
    40f8:	98 2f       	mov	r25, r24
    40fa:	88 27       	eor	r24, r24
    40fc:	99 0f       	add	r25, r25
    40fe:	99 0f       	add	r25, r25
    4100:	99 0f       	add	r25, r25
    4102:	20 91 ac 11 	lds	r18, 0x11AC	; 0x8011ac <G_back>
    4106:	40 e2       	ldi	r20, 0x20	; 32
    4108:	24 9f       	mul	r18, r20
    410a:	90 01       	movw	r18, r0
    410c:	11 24       	eor	r1, r1
    410e:	82 2b       	or	r24, r18
    4110:	93 2b       	or	r25, r19
	data |= Blue;
	
	WriteData(data);
    4112:	20 91 a1 11 	lds	r18, 0x11A1	; 0x8011a1 <B_back>
    4116:	82 2b       	or	r24, r18
    4118:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <WriteData>
				}
				else
				{
					WritePixel(R_back,G_back,B_back);
				}
				i=i<<1;
    411c:	00 0f       	add	r16, r16
    411e:	11 1f       	adc	r17, r17

				if (i>=256)
    4120:	0f 3f       	cpi	r16, 0xFF	; 255
    4122:	11 05       	cpc	r17, r1
    4124:	09 f0       	breq	.+2      	; 0x4128 <WriteLetter+0x128>
    4126:	28 f4       	brcc	.+10     	; 0x4132 <WriteLetter+0x132>
				}
				else
				{
					WritePixel(R_back,G_back,B_back);
				}
				i=i<<1;
    4128:	10 93 0f 02 	sts	0x020F, r17	; 0x80020f <i.2690+0x1>
    412c:	00 93 0e 02 	sts	0x020E, r16	; 0x80020e <i.2690>
    4130:	04 c0       	rjmp	.+8      	; 0x413a <WriteLetter+0x13a>

				if (i>=256)
				{
					i=1;
    4132:	d0 92 0f 02 	sts	0x020F, r13	; 0x80020f <i.2690+0x1>
    4136:	c0 92 0e 02 	sts	0x020E, r12	; 0x80020e <i.2690>
	
	if(LetterIndex == 1) //Index 1 = start ved 0 ellers start ved index -1. Derved f?r den fat i den rigtige hex kode inde fra Letter_font arrayet
	{
		for (jj=Letter_Font_Start; jj<Letter_Font_Length_Bytes-1; jj++)
		{
			for (x=0; x<8; x++)
    413a:	90 92 66 11 	sts	0x1166, r9	; 0x801166 <x.2688>
    413e:	93 94       	inc	r9
    4140:	89 e0       	ldi	r24, 0x09	; 9
    4142:	98 12       	cpse	r9, r24
    4144:	b8 cf       	rjmp	.-144    	; 0x40b6 <WriteLetter+0xb6>
	setpixelColour(Colour);
	setDisplayLetterFont(X_pos,Y_pos);
	
	if(LetterIndex == 1) //Index 1 = start ved 0 ellers start ved index -1. Derved f?r den fat i den rigtige hex kode inde fra Letter_font arrayet
	{
		for (jj=Letter_Font_Start; jj<Letter_Font_Length_Bytes-1; jj++)
    4146:	b0 92 68 11 	sts	0x1168, r11	; 0x801168 <jj.2691+0x1>
    414a:	a0 92 67 11 	sts	0x1167, r10	; 0x801167 <jj.2691>
    414e:	ef ef       	ldi	r30, 0xFF	; 255
    4150:	ae 1a       	sub	r10, r30
    4152:	be 0a       	sbc	r11, r30
    4154:	f2 e0       	ldi	r31, 0x02	; 2
    4156:	ef 0e       	add	r14, r31
    4158:	f1 1c       	adc	r15, r1
    415a:	2a e2       	ldi	r18, 0x2A	; 42
    415c:	a2 16       	cp	r10, r18
    415e:	b1 04       	cpc	r11, r1
    4160:	09 f0       	breq	.+2      	; 0x4164 <WriteLetter+0x164>
    4162:	a5 cf       	rjmp	.-182    	; 0x40ae <WriteLetter+0xae>
    4164:	7b c0       	rjmp	.+246    	; 0x425c <WriteLetter+0x25c>
			}
		}
	}
	else
	{	//for (jj=Number_Font_Length_Bytes*(NumberToWrite+1)-1; jj>Number_Font_Length_Bytes*NumberToWrite; jj--)
		for (jj=Letter_Font_Length_Bytes*(LetterIndex-1); jj<(Letter_Font_Length_Bytes*LetterIndex)-1; jj++)
    4166:	8a e2       	ldi	r24, 0x2A	; 42
    4168:	8e 9d       	mul	r24, r14
    416a:	40 01       	movw	r8, r0
    416c:	8f 9d       	mul	r24, r15
    416e:	90 0c       	add	r9, r0
    4170:	11 24       	eor	r1, r1
    4172:	c4 01       	movw	r24, r8
    4174:	8a 97       	sbiw	r24, 0x2a	; 42
    4176:	90 93 68 11 	sts	0x1168, r25	; 0x801168 <jj.2691+0x1>
    417a:	80 93 67 11 	sts	0x1167, r24	; 0x801167 <jj.2691>
    417e:	94 01       	movw	r18, r8
    4180:	21 50       	subi	r18, 0x01	; 1
    4182:	31 09       	sbc	r19, r1
    4184:	82 17       	cp	r24, r18
    4186:	93 07       	cpc	r25, r19
    4188:	08 f0       	brcs	.+2      	; 0x418c <WriteLetter+0x18c>
    418a:	68 c0       	rjmp	.+208    	; 0x425c <WriteLetter+0x25c>
    418c:	54 01       	movw	r10, r8
    418e:	39 e2       	ldi	r19, 0x29	; 41
    4190:	a3 1a       	sub	r10, r19
    4192:	b1 08       	sbc	r11, r1
    4194:	c4 01       	movw	r24, r8
    4196:	88 0f       	add	r24, r24
    4198:	99 1f       	adc	r25, r25
    419a:	fc 01       	movw	r30, r24
    419c:	e2 54       	subi	r30, 0x42	; 66
    419e:	fd 4f       	sbci	r31, 0xFD	; 253
    41a0:	7f 01       	movw	r14, r30
				WritePixel(R_back,G_back,B_back); }

				i=i<<1;

				if (i>=256){
				i=1;}
    41a2:	cc 24       	eor	r12, r12
    41a4:	c3 94       	inc	r12
    41a6:	d1 2c       	mov	r13, r1
	}
	else
	{	//for (jj=Number_Font_Length_Bytes*(NumberToWrite+1)-1; jj>Number_Font_Length_Bytes*NumberToWrite; jj--)
		for (jj=Letter_Font_Length_Bytes*(LetterIndex-1); jj<(Letter_Font_Length_Bytes*LetterIndex)-1; jj++)
		{
			for (x = 0; x < 8; x++){
    41a8:	10 92 66 11 	sts	0x1166, r1	; 0x801166 <x.2688>
    41ac:	77 24       	eor	r7, r7
    41ae:	73 94       	inc	r7

				//dataout = Number_Font[jj] &i;
				dataout = (Letter_Font[jj] & i);
    41b0:	00 91 0e 02 	lds	r16, 0x020E	; 0x80020e <i.2690>
    41b4:	10 91 0f 02 	lds	r17, 0x020F	; 0x80020f <i.2690+0x1>
				

				if (dataout >=1){
    41b8:	f7 01       	movw	r30, r14
    41ba:	80 81       	ld	r24, Z
    41bc:	80 23       	and	r24, r16
    41be:	b1 f0       	breq	.+44     	; 0x41ec <WriteLetter+0x1ec>
// Red 0-31, Green 0-63, Blue 0-31
void WritePixel(unsigned char Red, unsigned char Green, unsigned char Blue)
{
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
    41c0:	80 91 ab 11 	lds	r24, 0x11AB	; 0x8011ab <R>
    41c4:	90 e0       	ldi	r25, 0x00	; 0
    41c6:	98 2f       	mov	r25, r24
    41c8:	88 27       	eor	r24, r24
    41ca:	99 0f       	add	r25, r25
    41cc:	99 0f       	add	r25, r25
    41ce:	99 0f       	add	r25, r25
    41d0:	20 91 a9 11 	lds	r18, 0x11A9	; 0x8011a9 <G>
    41d4:	f0 e2       	ldi	r31, 0x20	; 32
    41d6:	2f 9f       	mul	r18, r31
    41d8:	90 01       	movw	r18, r0
    41da:	11 24       	eor	r1, r1
    41dc:	82 2b       	or	r24, r18
    41de:	93 2b       	or	r25, r19
	data |= Blue;
	
	WriteData(data);
    41e0:	20 91 a5 11 	lds	r18, 0x11A5	; 0x8011a5 <B>
    41e4:	82 2b       	or	r24, r18
    41e6:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <WriteData>
    41ea:	15 c0       	rjmp	.+42     	; 0x4216 <WriteLetter+0x216>
// Red 0-31, Green 0-63, Blue 0-31
void WritePixel(unsigned char Red, unsigned char Green, unsigned char Blue)
{
	unsigned int data = 0;
	data |= Red << 11;
	data |= Green << 5;
    41ec:	80 91 a4 11 	lds	r24, 0x11A4	; 0x8011a4 <R_back>
    41f0:	90 e0       	ldi	r25, 0x00	; 0
    41f2:	98 2f       	mov	r25, r24
    41f4:	88 27       	eor	r24, r24
    41f6:	99 0f       	add	r25, r25
    41f8:	99 0f       	add	r25, r25
    41fa:	99 0f       	add	r25, r25
    41fc:	20 91 ac 11 	lds	r18, 0x11AC	; 0x8011ac <G_back>
    4200:	40 e2       	ldi	r20, 0x20	; 32
    4202:	24 9f       	mul	r18, r20
    4204:	90 01       	movw	r18, r0
    4206:	11 24       	eor	r1, r1
    4208:	82 2b       	or	r24, r18
    420a:	93 2b       	or	r25, r19
	data |= Blue;
	
	WriteData(data);
    420c:	20 91 a1 11 	lds	r18, 0x11A1	; 0x8011a1 <B_back>
    4210:	82 2b       	or	r24, r18
    4212:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <WriteData>
					WritePixel(R,G,B);
				} else
				{
				WritePixel(R_back,G_back,B_back); }

				i=i<<1;
    4216:	00 0f       	add	r16, r16
    4218:	11 1f       	adc	r17, r17

				if (i>=256){
    421a:	0f 3f       	cpi	r16, 0xFF	; 255
    421c:	11 05       	cpc	r17, r1
    421e:	09 f0       	breq	.+2      	; 0x4222 <WriteLetter+0x222>
    4220:	28 f4       	brcc	.+10     	; 0x422c <WriteLetter+0x22c>
					WritePixel(R,G,B);
				} else
				{
				WritePixel(R_back,G_back,B_back); }

				i=i<<1;
    4222:	10 93 0f 02 	sts	0x020F, r17	; 0x80020f <i.2690+0x1>
    4226:	00 93 0e 02 	sts	0x020E, r16	; 0x80020e <i.2690>
    422a:	04 c0       	rjmp	.+8      	; 0x4234 <WriteLetter+0x234>

				if (i>=256){
				i=1;}
    422c:	d0 92 0f 02 	sts	0x020F, r13	; 0x80020f <i.2690+0x1>
    4230:	c0 92 0e 02 	sts	0x020E, r12	; 0x80020e <i.2690>
	}
	else
	{	//for (jj=Number_Font_Length_Bytes*(NumberToWrite+1)-1; jj>Number_Font_Length_Bytes*NumberToWrite; jj--)
		for (jj=Letter_Font_Length_Bytes*(LetterIndex-1); jj<(Letter_Font_Length_Bytes*LetterIndex)-1; jj++)
		{
			for (x = 0; x < 8; x++){
    4234:	70 92 66 11 	sts	0x1166, r7	; 0x801166 <x.2688>
    4238:	73 94       	inc	r7
    423a:	89 e0       	ldi	r24, 0x09	; 9
    423c:	78 12       	cpse	r7, r24
    423e:	b8 cf       	rjmp	.-144    	; 0x41b0 <WriteLetter+0x1b0>
			}
		}
	}
	else
	{	//for (jj=Number_Font_Length_Bytes*(NumberToWrite+1)-1; jj>Number_Font_Length_Bytes*NumberToWrite; jj--)
		for (jj=Letter_Font_Length_Bytes*(LetterIndex-1); jj<(Letter_Font_Length_Bytes*LetterIndex)-1; jj++)
    4240:	b0 92 68 11 	sts	0x1168, r11	; 0x801168 <jj.2691+0x1>
    4244:	a0 92 67 11 	sts	0x1167, r10	; 0x801167 <jj.2691>
    4248:	ef ef       	ldi	r30, 0xFF	; 255
    424a:	ae 1a       	sub	r10, r30
    424c:	be 0a       	sbc	r11, r30
    424e:	f2 e0       	ldi	r31, 0x02	; 2
    4250:	ef 0e       	add	r14, r31
    4252:	f1 1c       	adc	r15, r1
    4254:	8a 14       	cp	r8, r10
    4256:	9b 04       	cpc	r9, r11
    4258:	09 f0       	breq	.+2      	; 0x425c <WriteLetter+0x25c>
    425a:	a6 cf       	rjmp	.-180    	; 0x41a8 <WriteLetter+0x1a8>
				if (i>=256){
				i=1;}
			}
		}
	}
    425c:	e2 96       	adiw	r28, 0x32	; 50
    425e:	0f b6       	in	r0, 0x3f	; 63
    4260:	f8 94       	cli
    4262:	de bf       	out	0x3e, r29	; 62
    4264:	0f be       	out	0x3f, r0	; 63
    4266:	cd bf       	out	0x3d, r28	; 61
    4268:	df 91       	pop	r29
    426a:	cf 91       	pop	r28
    426c:	1f 91       	pop	r17
    426e:	0f 91       	pop	r16
    4270:	ff 90       	pop	r15
    4272:	ef 90       	pop	r14
    4274:	df 90       	pop	r13
    4276:	cf 90       	pop	r12
    4278:	bf 90       	pop	r11
    427a:	af 90       	pop	r10
    427c:	9f 90       	pop	r9
    427e:	8f 90       	pop	r8
    4280:	7f 90       	pop	r7
    4282:	08 95       	ret

00004284 <DisplayInit>:

// PUBLIC FUNCTIONS ////////////////////////////////////////////////////////////

// Initializes (resets) the display
void DisplayInit(unsigned char colourBackground, unsigned char colourText)
{
    4284:	cf 93       	push	r28
    4286:	df 93       	push	r29
    4288:	d8 2f       	mov	r29, r24
    428a:	c6 2f       	mov	r28, r22
	//Controlpins skal v?re input
	DDRG |= 0b00000111;
    428c:	83 b3       	in	r24, 0x13	; 19
    428e:	87 60       	ori	r24, 0x07	; 7
    4290:	83 bb       	out	0x13, r24	; 19
	DDRD |= 0b10000000;
    4292:	57 9a       	sbi	0x0a, 7	; 10
	//Data pins skal v?re outputs
	DDRA = 0xFF;
    4294:	8f ef       	ldi	r24, 0xFF	; 255
    4296:	81 b9       	out	0x01, r24	; 1
	DDRC = 0xFF;
    4298:	87 b9       	out	0x07, r24	; 7
	
	PORTG |= 0b00000111;
    429a:	84 b3       	in	r24, 0x14	; 20
    429c:	87 60       	ori	r24, 0x07	; 7
    429e:	84 bb       	out	0x14, r24	; 20
	PORTD |= 0b10000000;
    42a0:	5f 9a       	sbi	0x0b, 7	; 11
	
	RST_PORT &= ~(1<<RST_BIT);
    42a2:	a0 98       	cbi	0x14, 0	; 20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    42a4:	2f ef       	ldi	r18, 0xFF	; 255
    42a6:	89 e6       	ldi	r24, 0x69	; 105
    42a8:	98 e1       	ldi	r25, 0x18	; 24
    42aa:	21 50       	subi	r18, 0x01	; 1
    42ac:	80 40       	sbci	r24, 0x00	; 0
    42ae:	90 40       	sbci	r25, 0x00	; 0
    42b0:	e1 f7       	brne	.-8      	; 0x42aa <DisplayInit+0x26>
    42b2:	00 c0       	rjmp	.+0      	; 0x42b4 <DisplayInit+0x30>
    42b4:	00 00       	nop
	
	_delay_ms(500);
	
	RST_PORT |= (1<<RST_BIT);
    42b6:	a0 9a       	sbi	0x14, 0	; 20
    42b8:	2f ef       	ldi	r18, 0xFF	; 255
    42ba:	88 e5       	ldi	r24, 0x58	; 88
    42bc:	96 e0       	ldi	r25, 0x06	; 6
    42be:	21 50       	subi	r18, 0x01	; 1
    42c0:	80 40       	sbci	r24, 0x00	; 0
    42c2:	90 40       	sbci	r25, 0x00	; 0
    42c4:	e1 f7       	brne	.-8      	; 0x42be <DisplayInit+0x3a>
    42c6:	00 c0       	rjmp	.+0      	; 0x42c8 <DisplayInit+0x44>
    42c8:	00 00       	nop
	
	_delay_ms(130);
	
	SleepOut();
    42ca:	0e 94 98 17 	call	0x2f30	; 0x2f30 <SleepOut>

	DisplayOn();
    42ce:	0e 94 95 17 	call	0x2f2a	; 0x2f2a <DisplayOn>
	
	
	MemoryAccessControl(0b00001000);
    42d2:	88 e0       	ldi	r24, 0x08	; 8
    42d4:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <MemoryAccessControl>
	InterfacePixelFormat(0b00000101);
    42d8:	85 e0       	ldi	r24, 0x05	; 5
    42da:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <InterfacePixelFormat>
	
	ClearScreen(colourBackground);
    42de:	8d 2f       	mov	r24, r29
    42e0:	ad d8       	rcall	.-3750   	; 0x343c <ClearScreen>
	
	WriteLetter(30,		290,	colourText, 'B');
    42e2:	d0 e0       	ldi	r29, 0x00	; 0
    42e4:	22 e4       	ldi	r18, 0x42	; 66
    42e6:	ae 01       	movw	r20, r28
    42e8:	62 e2       	ldi	r22, 0x22	; 34
    42ea:	71 e0       	ldi	r23, 0x01	; 1
    42ec:	8e e1       	ldi	r24, 0x1E	; 30
    42ee:	90 e0       	ldi	r25, 0x00	; 0
    42f0:	87 de       	rcall	.-754    	; 0x4000 <WriteLetter>
	WriteLetter(45,		290,	colourText, 'r');
    42f2:	22 e7       	ldi	r18, 0x72	; 114
    42f4:	ae 01       	movw	r20, r28
    42f6:	62 e2       	ldi	r22, 0x22	; 34
    42f8:	71 e0       	ldi	r23, 0x01	; 1
    42fa:	8d e2       	ldi	r24, 0x2D	; 45
    42fc:	90 e0       	ldi	r25, 0x00	; 0
    42fe:	80 de       	rcall	.-768    	; 0x4000 <WriteLetter>
	WriteLetter(57,		290,	colourText, 'e');
    4300:	25 e6       	ldi	r18, 0x65	; 101
    4302:	ae 01       	movw	r20, r28
    4304:	62 e2       	ldi	r22, 0x22	; 34
    4306:	71 e0       	ldi	r23, 0x01	; 1
    4308:	89 e3       	ldi	r24, 0x39	; 57
    430a:	90 e0       	ldi	r25, 0x00	; 0
    430c:	79 de       	rcall	.-782    	; 0x4000 <WriteLetter>
	WriteLetter(73,		290,	colourText, 'a');
    430e:	21 e6       	ldi	r18, 0x61	; 97
    4310:	ae 01       	movw	r20, r28
    4312:	62 e2       	ldi	r22, 0x22	; 34
    4314:	71 e0       	ldi	r23, 0x01	; 1
    4316:	89 e4       	ldi	r24, 0x49	; 73
    4318:	90 e0       	ldi	r25, 0x00	; 0
    431a:	72 de       	rcall	.-796    	; 0x4000 <WriteLetter>
	WriteLetter(89,		290,	colourText, 't');
    431c:	24 e7       	ldi	r18, 0x74	; 116
    431e:	ae 01       	movw	r20, r28
    4320:	62 e2       	ldi	r22, 0x22	; 34
    4322:	71 e0       	ldi	r23, 0x01	; 1
    4324:	89 e5       	ldi	r24, 0x59	; 89
    4326:	90 e0       	ldi	r25, 0x00	; 0
    4328:	6b de       	rcall	.-810    	; 0x4000 <WriteLetter>
	WriteLetter(105,	290,	colourText, 'h');
    432a:	28 e6       	ldi	r18, 0x68	; 104
    432c:	ae 01       	movw	r20, r28
    432e:	62 e2       	ldi	r22, 0x22	; 34
    4330:	71 e0       	ldi	r23, 0x01	; 1
    4332:	89 e6       	ldi	r24, 0x69	; 105
    4334:	90 e0       	ldi	r25, 0x00	; 0
    4336:	64 de       	rcall	.-824    	; 0x4000 <WriteLetter>
	WriteLetter(121,	290,	colourText, 'a');
    4338:	21 e6       	ldi	r18, 0x61	; 97
    433a:	ae 01       	movw	r20, r28
    433c:	62 e2       	ldi	r22, 0x22	; 34
    433e:	71 e0       	ldi	r23, 0x01	; 1
    4340:	89 e7       	ldi	r24, 0x79	; 121
    4342:	90 e0       	ldi	r25, 0x00	; 0
    4344:	5d de       	rcall	.-838    	; 0x4000 <WriteLetter>
	WriteLetter(137,	290,	colourText, 'l');
    4346:	2c e6       	ldi	r18, 0x6C	; 108
    4348:	ae 01       	movw	r20, r28
    434a:	62 e2       	ldi	r22, 0x22	; 34
    434c:	71 e0       	ldi	r23, 0x01	; 1
    434e:	89 e8       	ldi	r24, 0x89	; 137
    4350:	90 e0       	ldi	r25, 0x00	; 0
    4352:	56 de       	rcall	.-852    	; 0x4000 <WriteLetter>
	WriteLetter(152,	285,	colourText, 'y');
    4354:	29 e7       	ldi	r18, 0x79	; 121
    4356:	ae 01       	movw	r20, r28
    4358:	6d e1       	ldi	r22, 0x1D	; 29
    435a:	71 e0       	ldi	r23, 0x01	; 1
    435c:	88 e9       	ldi	r24, 0x98	; 152
    435e:	90 e0       	ldi	r25, 0x00	; 0
    4360:	4f de       	rcall	.-866    	; 0x4000 <WriteLetter>
	WriteLetter(168,	290,	colourText, 'z');
    4362:	2a e7       	ldi	r18, 0x7A	; 122
    4364:	ae 01       	movw	r20, r28
    4366:	62 e2       	ldi	r22, 0x22	; 34
    4368:	71 e0       	ldi	r23, 0x01	; 1
    436a:	88 ea       	ldi	r24, 0xA8	; 168
    436c:	90 e0       	ldi	r25, 0x00	; 0
    436e:	48 de       	rcall	.-880    	; 0x4000 <WriteLetter>
	WriteLetter(184,	290,	colourText, 'e');
    4370:	25 e6       	ldi	r18, 0x65	; 101
    4372:	ae 01       	movw	r20, r28
    4374:	62 e2       	ldi	r22, 0x22	; 34
    4376:	71 e0       	ldi	r23, 0x01	; 1
    4378:	88 eb       	ldi	r24, 0xB8	; 184
    437a:	90 e0       	ldi	r25, 0x00	; 0
    437c:	41 de       	rcall	.-894    	; 0x4000 <WriteLetter>
	WriteLetter(200,	290,	colourText, 'r');
    437e:	22 e7       	ldi	r18, 0x72	; 114
    4380:	ae 01       	movw	r20, r28
    4382:	62 e2       	ldi	r22, 0x22	; 34
    4384:	71 e0       	ldi	r23, 0x01	; 1
    4386:	88 ec       	ldi	r24, 0xC8	; 200
    4388:	90 e0       	ldi	r25, 0x00	; 0
    438a:	3a de       	rcall	.-908    	; 0x4000 <WriteLetter>
	
	WriteLetter(60,		140,	colourText, 'P');
    438c:	20 e5       	ldi	r18, 0x50	; 80
    438e:	ae 01       	movw	r20, r28
    4390:	6c e8       	ldi	r22, 0x8C	; 140
    4392:	70 e0       	ldi	r23, 0x00	; 0
    4394:	8c e3       	ldi	r24, 0x3C	; 60
    4396:	90 e0       	ldi	r25, 0x00	; 0
    4398:	33 de       	rcall	.-922    	; 0x4000 <WriteLetter>
	WriteLetter(75,		140,	colourText, 'r');
    439a:	22 e7       	ldi	r18, 0x72	; 114
    439c:	ae 01       	movw	r20, r28
    439e:	6c e8       	ldi	r22, 0x8C	; 140
    43a0:	70 e0       	ldi	r23, 0x00	; 0
    43a2:	8b e4       	ldi	r24, 0x4B	; 75
    43a4:	90 e0       	ldi	r25, 0x00	; 0
    43a6:	2c de       	rcall	.-936    	; 0x4000 <WriteLetter>
	WriteLetter(87,		140,	colourText, 'o');
    43a8:	2f e6       	ldi	r18, 0x6F	; 111
    43aa:	ae 01       	movw	r20, r28
    43ac:	6c e8       	ldi	r22, 0x8C	; 140
    43ae:	70 e0       	ldi	r23, 0x00	; 0
    43b0:	87 e5       	ldi	r24, 0x57	; 87
    43b2:	90 e0       	ldi	r25, 0x00	; 0
    43b4:	25 de       	rcall	.-950    	; 0x4000 <WriteLetter>
	WriteLetter(116,	140,	colourText, 'i');
    43b6:	29 e6       	ldi	r18, 0x69	; 105
    43b8:	ae 01       	movw	r20, r28
    43ba:	6c e8       	ldi	r22, 0x8C	; 140
    43bc:	70 e0       	ldi	r23, 0x00	; 0
    43be:	84 e7       	ldi	r24, 0x74	; 116
    43c0:	90 e0       	ldi	r25, 0x00	; 0
    43c2:	1e de       	rcall	.-964    	; 0x4000 <WriteLetter>
	WriteLetter(104,	140,	colourText, 'm');
    43c4:	2d e6       	ldi	r18, 0x6D	; 109
    43c6:	ae 01       	movw	r20, r28
    43c8:	6c e8       	ldi	r22, 0x8C	; 140
    43ca:	70 e0       	ldi	r23, 0x00	; 0
    43cc:	88 e6       	ldi	r24, 0x68	; 104
    43ce:	90 e0       	ldi	r25, 0x00	; 0
    43d0:	17 de       	rcall	.-978    	; 0x4000 <WriteLetter>
	WriteLetter(127,	140,	colourText, 'l');
    43d2:	2c e6       	ldi	r18, 0x6C	; 108
    43d4:	ae 01       	movw	r20, r28
    43d6:	6c e8       	ldi	r22, 0x8C	; 140
    43d8:	70 e0       	ldi	r23, 0x00	; 0
    43da:	8f e7       	ldi	r24, 0x7F	; 127
    43dc:	90 e0       	ldi	r25, 0x00	; 0
    43de:	10 de       	rcall	.-992    	; 0x4000 <WriteLetter>
	WriteLetter(139,	140,	colourText, 'l');
    43e0:	2c e6       	ldi	r18, 0x6C	; 108
    43e2:	ae 01       	movw	r20, r28
    43e4:	6c e8       	ldi	r22, 0x8C	; 140
    43e6:	70 e0       	ldi	r23, 0x00	; 0
    43e8:	8b e8       	ldi	r24, 0x8B	; 139
    43ea:	90 e0       	ldi	r25, 0x00	; 0
    43ec:	09 de       	rcall	.-1006   	; 0x4000 <WriteLetter>
	WriteLetter(153,	140,	colourText, 'e');
    43ee:	25 e6       	ldi	r18, 0x65	; 101
    43f0:	ae 01       	movw	r20, r28
    43f2:	6c e8       	ldi	r22, 0x8C	; 140
    43f4:	70 e0       	ldi	r23, 0x00	; 0
    43f6:	89 e9       	ldi	r24, 0x99	; 153
    43f8:	90 e0       	ldi	r25, 0x00	; 0
    43fa:	02 de       	rcall	.-1020   	; 0x4000 <WriteLetter>
    43fc:	2a e3       	ldi	r18, 0x3A	; 58
	WriteLetter(167,	137,	colourText, ':');
    43fe:	ae 01       	movw	r20, r28
    4400:	69 e8       	ldi	r22, 0x89	; 137
    4402:	70 e0       	ldi	r23, 0x00	; 0
    4404:	87 ea       	ldi	r24, 0xA7	; 167
    4406:	90 e0       	ldi	r25, 0x00	; 0
    4408:	fb dd       	rcall	.-1034   	; 0x4000 <WriteLetter>
    440a:	df 91       	pop	r29
    440c:	cf 91       	pop	r28
	
}
    440e:	08 95       	ret

00004410 <main>:
    4410:	cf 93       	push	r28
    4412:	df 93       	push	r29

FATFS FatFs;		/* FatFs work area needed for each volume */
FIL Fil;			/* File object needed for each open file */

int main(void)
{
    4414:	cd b7       	in	r28, 0x3d	; 61
    4416:	de b7       	in	r29, 0x3e	; 62
    4418:	cc 5e       	subi	r28, 0xEC	; 236
    441a:	d1 09       	sbc	r29, r1
    441c:	0f b6       	in	r0, 0x3f	; 63
    441e:	f8 94       	cli
    4420:	de bf       	out	0x3e, r29	; 62
    4422:	0f be       	out	0x3f, r0	; 63
    4424:	cd bf       	out	0x3d, r28	; 61
	char debugMsg[50];
	char debugString[20];
	// ========================================= //
	
	// Initialize UART0 (Baud Rate = 9600, 8 Databits, No Parity)
	InitUART(UART0, 9600, 8,'A');
    4426:	01 e4       	ldi	r16, 0x41	; 65
    4428:	28 e0       	ldi	r18, 0x08	; 8
    442a:	40 e8       	ldi	r20, 0x80	; 128
    442c:	55 e2       	ldi	r21, 0x25	; 37
    442e:	60 e0       	ldi	r22, 0x00	; 0
    4430:	70 e0       	ldi	r23, 0x00	; 0
    4432:	80 ec       	ldi	r24, 0xC0	; 192
    4434:	90 e0       	ldi	r25, 0x00	; 0
    4436:	0e 94 16 17 	call	0x2e2c	; 0x2e2c <InitUART>
	SendString(UART0, "UART Initialized\r\n");
    443a:	66 e6       	ldi	r22, 0x66	; 102
    443c:	70 e1       	ldi	r23, 0x10	; 16
    443e:	80 ec       	ldi	r24, 0xC0	; 192
    4440:	90 e0       	ldi	r25, 0x00	; 0
    4442:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <SendString>
	
	// Initialize Digital Pin 13 (= PB7) to input (Actually Pin 8-13 are all inputs now)
	InitButton(0);
    4446:	80 e0       	ldi	r24, 0x00	; 0
    4448:	0e 94 ab 02 	call	0x556	; 0x556 <InitButton>
	
	// Initialize the Breathalyzer/Gas Sensor
	breathalyzerInit();
    444c:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <breathalyzerInit>
	float BAC = 0;
	bool newMeasurement = false;
	SendString(UART0, "Breathalyzer Initialized\r\n");
    4450:	69 e7       	ldi	r22, 0x79	; 121
    4452:	70 e1       	ldi	r23, 0x10	; 16
    4454:	80 ec       	ldi	r24, 0xC0	; 192
    4456:	90 e0       	ldi	r25, 0x00	; 0
    4458:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <SendString>
	
	// Initialize the TFT Display
	DisplayInit(MAGENTA, BLACK);
    445c:	60 e0       	ldi	r22, 0x00	; 0
    445e:	8a e0       	ldi	r24, 0x0A	; 10
    4460:	11 df       	rcall	.-478    	; 0x4284 <DisplayInit>
	SendString(UART0, "TFT Display Initialized\r\n");
    4462:	64 e9       	ldi	r22, 0x94	; 148
    4464:	70 e1       	ldi	r23, 0x10	; 16
    4466:	80 ec       	ldi	r24, 0xC0	; 192
    4468:	90 e0       	ldi	r25, 0x00	; 0
    446a:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <SendString>

	// Setup of SD card
	uint16_t pressCount = 0;
	UINT bw;
	FRESULT fr;
	f_mount(&FatFs, "", 0);											/* Give a work area to the default drive */
    446e:	40 e0       	ldi	r20, 0x00	; 0
    4470:	64 ed       	ldi	r22, 0xD4	; 212
    4472:	70 e1       	ldi	r23, 0x10	; 16
    4474:	8d ea       	ldi	r24, 0xAD	; 173
    4476:	91 e1       	ldi	r25, 0x11	; 17
    4478:	0e 94 1f 11 	call	0x223e	; 0x223e <f_mount>
	
	fr = f_open(&Fil, "Datalog.txt", FA_WRITE | FA_CREATE_ALWAYS);	// Change to FA_CREATE_NEW to only create a new one when no file exists
    447c:	4a e0       	ldi	r20, 0x0A	; 10
    447e:	6e ea       	ldi	r22, 0xAE	; 174
    4480:	70 e1       	ldi	r23, 0x10	; 16
    4482:	8c ed       	ldi	r24, 0xDC	; 220
    4484:	93 e1       	ldi	r25, 0x13	; 19
    4486:	0e 94 63 11 	call	0x22c6	; 0x22c6 <f_open>
	
	char msg[50];
	int btw = 0;
	btw = sprintf(msg, "Breathalyzer Datalogger!\r\n");
    448a:	9b e1       	ldi	r25, 0x1B	; 27
    448c:	ea eb       	ldi	r30, 0xBA	; 186
    448e:	f0 e1       	ldi	r31, 0x10	; 16
    4490:	de 01       	movw	r26, r28
    4492:	a7 5b       	subi	r26, 0xB7	; 183
    4494:	bf 4f       	sbci	r27, 0xFF	; 255
    4496:	01 90       	ld	r0, Z+
    4498:	0d 92       	st	X+, r0
    449a:	9a 95       	dec	r25
    449c:	e1 f7       	brne	.-8      	; 0x4496 <main+0x86>
	
	if (fr == FR_OK) {
    449e:	81 11       	cpse	r24, r1
    44a0:	1e c0       	rjmp	.+60     	; 0x44de <main+0xce>
		f_write(&Fil, msg, btw, &bw);
    44a2:	9e 01       	movw	r18, r28
    44a4:	29 5b       	subi	r18, 0xB9	; 185
    44a6:	3f 4f       	sbci	r19, 0xFF	; 255
    44a8:	4a e1       	ldi	r20, 0x1A	; 26
    44aa:	50 e0       	ldi	r21, 0x00	; 0
    44ac:	be 01       	movw	r22, r28
    44ae:	67 5b       	subi	r22, 0xB7	; 183
    44b0:	7f 4f       	sbci	r23, 0xFF	; 255
    44b2:	8c ed       	ldi	r24, 0xDC	; 220
    44b4:	93 e1       	ldi	r25, 0x13	; 19
    44b6:	0e 94 37 13 	call	0x266e	; 0x266e <f_write>
		fr = f_close(&Fil);
    44ba:	8c ed       	ldi	r24, 0xDC	; 220
    44bc:	93 e1       	ldi	r25, 0x13	; 19
    44be:	0e 94 7e 15 	call	0x2afc	; 0x2afc <f_close>
		if (fr == FR_OK && bw == btw) {
    44c2:	81 11       	cpse	r24, r1
    44c4:	0c c0       	rjmp	.+24     	; 0x44de <main+0xce>
    44c6:	29 96       	adiw	r28, 0x09	; 9
    44c8:	8e ad       	ldd	r24, Y+62	; 0x3e
    44ca:	9f ad       	ldd	r25, Y+63	; 0x3f
    44cc:	29 97       	sbiw	r28, 0x09	; 9
    44ce:	4a 97       	sbiw	r24, 0x1a	; 26
    44d0:	31 f4       	brne	.+12     	; 0x44de <main+0xce>
			SendString(UART0,"Datalog.txt er oprettet!\r\n");
    44d2:	65 ed       	ldi	r22, 0xD5	; 213
    44d4:	70 e1       	ldi	r23, 0x10	; 16
    44d6:	80 ec       	ldi	r24, 0xC0	; 192
    44d8:	90 e0       	ldi	r25, 0x00	; 0
    44da:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <SendString>
	
	if(newMeasurement == true){
		/* Display new BAC value */
		WriteNumberFromADC(60, 100, BLACK, BAC);
		// Reset 
		newMeasurement = false;
    44de:	61 2c       	mov	r6, r1
    44e0:	71 2c       	mov	r7, r1
    44e2:	f1 2c       	mov	r15, r1
    44e4:	c7 51       	subi	r28, 0x17	; 23
    44e6:	df 4f       	sbci	r29, 0xFF	; 255
    44e8:	18 82       	st	Y, r1
    44ea:	19 82       	std	Y+1, r1	; 0x01
    44ec:	1a 82       	std	Y+2, r1	; 0x02
    44ee:	1b 82       	std	Y+3, r1	; 0x03
    44f0:	c9 5e       	subi	r28, 0xE9	; 233
    44f2:	d0 40       	sbci	r29, 0x00	; 0
				
		// ============= FOR DEBUGGING ============= //
		SendString(UART0, "Displaying new measurement\r\n");
		
		memset(debugMsg,'0', strlen(debugMsg));
    44f4:	ce 01       	movw	r24, r28
    44f6:	01 96       	adiw	r24, 0x01	; 1
    44f8:	5c 01       	movw	r10, r24
		memset(debugString,'0', strlen(debugString));
    44fa:	6e 01       	movw	r12, r28
    44fc:	93 e3       	ldi	r25, 0x33	; 51
    44fe:	c9 0e       	add	r12, r25
    4500:	d1 1c       	adc	r13, r1
	
		dtostrf(BAC, 3, 3, debugString);
		sprintf(debugMsg, "BAC Level is %6s\r\n", debugString);
    4502:	0f 2e       	mov	r0, r31
    4504:	f2 e3       	ldi	r31, 0x32	; 50
    4506:	8f 2e       	mov	r8, r31
    4508:	f1 e1       	ldi	r31, 0x11	; 17
    450a:	9f 2e       	mov	r9, r31
    450c:	f0 2d       	mov	r31, r0
	
	if(newMeasurement == true){
		/* Display new BAC value */
		WriteNumberFromADC(60, 100, BLACK, BAC);
		// Reset 
		newMeasurement = false;
    450e:	e1 2c       	mov	r14, r1
		{
			char stringBAC[10];													// String used to store value of converted float
			char msg[50];														// String to store Datalogging msg.
			int btw;															// Size of string msg.
		
			dtostrf(BAC, 3, 3, stringBAC);
    4510:	2e 01       	movw	r4, r28
    4512:	2f ed       	ldi	r18, 0xDF	; 223
    4514:	42 0e       	add	r4, r18
    4516:	51 1c       	adc	r5, r1
			btw = sprintf(msg, "BAC Level is %6s\r\n",stringBAC);
    4518:	1e 01       	movw	r2, r28
    451a:	8b e7       	ldi	r24, 0x7B	; 123
    451c:	28 0e       	add	r2, r24
    451e:	31 1c       	adc	r3, r1
    4520:	91 c0       	rjmp	.+290    	; 0x4644 <main+0x234>
  {
	
	while(readButtonState(7) != 0){ // Check if Pin 13 (= 7th Pin in PINB) is set
		//SendString(UART0, "Button Pressed\r\n");
			  								
	    BAC = BacLevel();														// Get the current BAC Level
    4522:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <BacLevel>
    4526:	c7 51       	subi	r28, 0x17	; 23
    4528:	df 4f       	sbci	r29, 0xFF	; 255
    452a:	68 83       	st	Y, r22
    452c:	79 83       	std	Y+1, r23	; 0x01
    452e:	8a 83       	std	Y+2, r24	; 0x02
    4530:	9b 83       	std	Y+3, r25	; 0x03
    4532:	c9 5e       	subi	r28, 0xE9	; 233
    4534:	d0 40       	sbci	r29, 0x00	; 0
		
		if (newMeasurement == false)
    4536:	f1 10       	cpse	r15, r1
    4538:	37 c0       	rjmp	.+110    	; 0x45a8 <main+0x198>
		{
			pressCount++;
    453a:	9f ef       	ldi	r25, 0xFF	; 255
    453c:	69 1a       	sub	r6, r25
    453e:	79 0a       	sbc	r7, r25
			
			fr = f_open(&Fil, "Datalog.txt", FA_WRITE | FA_OPEN_APPEND);			// Open the existing Datalog file
    4540:	42 e3       	ldi	r20, 0x32	; 50
    4542:	6e ea       	ldi	r22, 0xAE	; 174
    4544:	70 e1       	ldi	r23, 0x10	; 16
    4546:	8c ed       	ldi	r24, 0xDC	; 220
    4548:	93 e1       	ldi	r25, 0x13	; 19
    454a:	0e 94 63 11 	call	0x22c6	; 0x22c6 <f_open>
			
			if (fr == FR_OK)
    454e:	81 11       	cpse	r24, r1
    4550:	2b c0       	rjmp	.+86     	; 0x45a8 <main+0x198>
			{
				char msg[100];														// String to store Datalogging msg.
				int btw;															// Size of string msg.
				
				btw = sprintf(msg, "// ==================== Measurement #%d ==================== //\r\n", pressCount);
    4552:	7f 92       	push	r7
    4554:	6f 92       	push	r6
    4556:	80 ef       	ldi	r24, 0xF0	; 240
    4558:	90 e1       	ldi	r25, 0x10	; 16
    455a:	9f 93       	push	r25
    455c:	8f 93       	push	r24
    455e:	3f 92       	push	r3
    4560:	2f 92       	push	r2
    4562:	7a d4       	rcall	.+2292   	; 0x4e58 <sprintf>
    4564:	8c 01       	movw	r16, r24
				
				f_write(&Fil, msg, btw, &bw);										// Writes the msg onto the SD Card
    4566:	9e 01       	movw	r18, r28
    4568:	29 5b       	subi	r18, 0xB9	; 185
    456a:	3f 4f       	sbci	r19, 0xFF	; 255
    456c:	ac 01       	movw	r20, r24
    456e:	b1 01       	movw	r22, r2
    4570:	8c ed       	ldi	r24, 0xDC	; 220
    4572:	93 e1       	ldi	r25, 0x13	; 19
    4574:	0e 94 37 13 	call	0x266e	; 0x266e <f_write>
				
				fr = f_close(&Fil);													// Closes the opened file
    4578:	8c ed       	ldi	r24, 0xDC	; 220
    457a:	93 e1       	ldi	r25, 0x13	; 19
    457c:	0e 94 7e 15 	call	0x2afc	; 0x2afc <f_close>
				
				if (fr == FR_OK && bw == btw)										// If it was successful, send a UART message.
    4580:	0f 90       	pop	r0
    4582:	0f 90       	pop	r0
    4584:	0f 90       	pop	r0
    4586:	0f 90       	pop	r0
    4588:	0f 90       	pop	r0
    458a:	0f 90       	pop	r0
    458c:	81 11       	cpse	r24, r1
    458e:	0c c0       	rjmp	.+24     	; 0x45a8 <main+0x198>
    4590:	29 96       	adiw	r28, 0x09	; 9
    4592:	8e ad       	ldd	r24, Y+62	; 0x3e
    4594:	9f ad       	ldd	r25, Y+63	; 0x3f
    4596:	29 97       	sbiw	r28, 0x09	; 9
    4598:	08 17       	cp	r16, r24
    459a:	19 07       	cpc	r17, r25
    459c:	29 f4       	brne	.+10     	; 0x45a8 <main+0x198>
				{
					SendString(UART0, msg);
    459e:	b1 01       	movw	r22, r2
    45a0:	80 ec       	ldi	r24, 0xC0	; 192
    45a2:	90 e0       	ldi	r25, 0x00	; 0
    45a4:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <SendString>
				}
			}
		}
		
		if(BAC != 0){
    45a8:	20 e0       	ldi	r18, 0x00	; 0
    45aa:	30 e0       	ldi	r19, 0x00	; 0
    45ac:	a9 01       	movw	r20, r18
    45ae:	c7 51       	subi	r28, 0x17	; 23
    45b0:	df 4f       	sbci	r29, 0xFF	; 255
    45b2:	68 81       	ld	r22, Y
    45b4:	79 81       	ldd	r23, Y+1	; 0x01
    45b6:	8a 81       	ldd	r24, Y+2	; 0x02
    45b8:	9b 81       	ldd	r25, Y+3	; 0x03
    45ba:	c9 5e       	subi	r28, 0xE9	; 233
    45bc:	d0 40       	sbci	r29, 0x00	; 0
    45be:	fd d0       	rcall	.+506    	; 0x47ba <__cmpsf2>
    45c0:	88 23       	and	r24, r24
    45c2:	11 f0       	breq	.+4      	; 0x45c8 <main+0x1b8>
			newMeasurement = true;
    45c4:	ff 24       	eor	r15, r15
    45c6:	f3 94       	inc	r15
		dtostrf(BAC, 3, 3, debugString);
		sprintf(debugMsg, "BAC Level is %6s\r\n", debugString);
		SendString(UART0, debugMsg);*/
		// ========================================= //
	
		fr = f_open(&Fil, "Datalog.txt", FA_WRITE | FA_OPEN_APPEND);			// Open the existing Datalog file
    45c8:	42 e3       	ldi	r20, 0x32	; 50
    45ca:	6e ea       	ldi	r22, 0xAE	; 174
    45cc:	70 e1       	ldi	r23, 0x10	; 16
    45ce:	8c ed       	ldi	r24, 0xDC	; 220
    45d0:	93 e1       	ldi	r25, 0x13	; 19
    45d2:	0e 94 63 11 	call	0x22c6	; 0x22c6 <f_open>
		
		if (fr == FR_OK)
    45d6:	81 11       	cpse	r24, r1
    45d8:	35 c0       	rjmp	.+106    	; 0x4644 <main+0x234>
		{
			char stringBAC[10];													// String used to store value of converted float
			char msg[50];														// String to store Datalogging msg.
			int btw;															// Size of string msg.
		
			dtostrf(BAC, 3, 3, stringBAC);
    45da:	82 01       	movw	r16, r4
    45dc:	23 e0       	ldi	r18, 0x03	; 3
    45de:	43 e0       	ldi	r20, 0x03	; 3
    45e0:	c7 51       	subi	r28, 0x17	; 23
    45e2:	df 4f       	sbci	r29, 0xFF	; 255
    45e4:	68 81       	ld	r22, Y
    45e6:	79 81       	ldd	r23, Y+1	; 0x01
    45e8:	8a 81       	ldd	r24, Y+2	; 0x02
    45ea:	9b 81       	ldd	r25, Y+3	; 0x03
    45ec:	c9 5e       	subi	r28, 0xE9	; 233
    45ee:	d0 40       	sbci	r29, 0x00	; 0
    45f0:	0d d4       	rcall	.+2074   	; 0x4e0c <dtostrf>
			btw = sprintf(msg, "BAC Level is %6s\r\n",stringBAC);
    45f2:	5f 92       	push	r5
    45f4:	4f 92       	push	r4
    45f6:	9f 92       	push	r9
    45f8:	8f 92       	push	r8
    45fa:	3f 92       	push	r3
    45fc:	2f 92       	push	r2
    45fe:	2c d4       	rcall	.+2136   	; 0x4e58 <sprintf>
    4600:	8c 01       	movw	r16, r24
		
			f_write(&Fil, msg, btw, &bw);										// Writes the msg onto the SD Card
    4602:	9e 01       	movw	r18, r28
    4604:	29 5b       	subi	r18, 0xB9	; 185
    4606:	3f 4f       	sbci	r19, 0xFF	; 255
    4608:	ac 01       	movw	r20, r24
    460a:	b1 01       	movw	r22, r2
    460c:	8c ed       	ldi	r24, 0xDC	; 220
    460e:	93 e1       	ldi	r25, 0x13	; 19
    4610:	0e 94 37 13 	call	0x266e	; 0x266e <f_write>
		
			fr = f_close(&Fil);													// Closes the opened file
    4614:	8c ed       	ldi	r24, 0xDC	; 220
    4616:	93 e1       	ldi	r25, 0x13	; 19
    4618:	0e 94 7e 15 	call	0x2afc	; 0x2afc <f_close>
		
			if (fr == FR_OK && bw == btw)										// If it was successful, send a UART message.
    461c:	0f 90       	pop	r0
    461e:	0f 90       	pop	r0
    4620:	0f 90       	pop	r0
    4622:	0f 90       	pop	r0
    4624:	0f 90       	pop	r0
    4626:	0f 90       	pop	r0
    4628:	81 11       	cpse	r24, r1
    462a:	0c c0       	rjmp	.+24     	; 0x4644 <main+0x234>
    462c:	29 96       	adiw	r28, 0x09	; 9
    462e:	8e ad       	ldd	r24, Y+62	; 0x3e
    4630:	9f ad       	ldd	r25, Y+63	; 0x3f
    4632:	29 97       	sbiw	r28, 0x09	; 9
    4634:	08 17       	cp	r16, r24
    4636:	19 07       	cpc	r17, r25
    4638:	29 f4       	brne	.+10     	; 0x4644 <main+0x234>
			{
				SendString(UART0, msg);
    463a:	b1 01       	movw	r22, r2
    463c:	80 ec       	ldi	r24, 0xC0	; 192
    463e:	90 e0       	ldi	r25, 0x00	; 0
    4640:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <SendString>
	}
 
  while(1) 
  {
	
	while(readButtonState(7) != 0){ // Check if Pin 13 (= 7th Pin in PINB) is set
    4644:	87 e0       	ldi	r24, 0x07	; 7
    4646:	90 e0       	ldi	r25, 0x00	; 0
    4648:	0e 94 ae 02 	call	0x55c	; 0x55c <readButtonState>
    464c:	89 2b       	or	r24, r25
    464e:	09 f0       	breq	.+2      	; 0x4652 <main+0x242>
    4650:	68 cf       	rjmp	.-304    	; 0x4522 <main+0x112>
			}
		
		}
	}
	
	if(newMeasurement == true){
    4652:	ff 20       	and	r15, r15
    4654:	b9 f3       	breq	.-18     	; 0x4644 <main+0x234>
		/* Display new BAC value */
		WriteNumberFromADC(60, 100, BLACK, BAC);
    4656:	c7 51       	subi	r28, 0x17	; 23
    4658:	df 4f       	sbci	r29, 0xFF	; 255
    465a:	08 81       	ld	r16, Y
    465c:	19 81       	ldd	r17, Y+1	; 0x01
    465e:	2a 81       	ldd	r18, Y+2	; 0x02
    4660:	3b 81       	ldd	r19, Y+3	; 0x03
    4662:	c9 5e       	subi	r28, 0xE9	; 233
    4664:	d0 40       	sbci	r29, 0x00	; 0
    4666:	40 e0       	ldi	r20, 0x00	; 0
    4668:	50 e0       	ldi	r21, 0x00	; 0
    466a:	64 e6       	ldi	r22, 0x64	; 100
    466c:	70 e0       	ldi	r23, 0x00	; 0
    466e:	8c e3       	ldi	r24, 0x3C	; 60
    4670:	90 e0       	ldi	r25, 0x00	; 0
    4672:	83 db       	rcall	.-2298   	; 0x3d7a <WriteNumberFromADC>
		// Reset 
		newMeasurement = false;
				
		// ============= FOR DEBUGGING ============= //
		SendString(UART0, "Displaying new measurement\r\n");
    4674:	65 e4       	ldi	r22, 0x45	; 69
    4676:	71 e1       	ldi	r23, 0x11	; 17
    4678:	80 ec       	ldi	r24, 0xC0	; 192
    467a:	90 e0       	ldi	r25, 0x00	; 0
    467c:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <SendString>
		
		memset(debugMsg,'0', strlen(debugMsg));
    4680:	f5 01       	movw	r30, r10
    4682:	01 90       	ld	r0, Z+
    4684:	00 20       	and	r0, r0
    4686:	e9 f7       	brne	.-6      	; 0x4682 <main+0x272>
    4688:	31 97       	sbiw	r30, 0x01	; 1
    468a:	af 01       	movw	r20, r30
    468c:	4a 19       	sub	r20, r10
    468e:	5b 09       	sbc	r21, r11
    4690:	60 e3       	ldi	r22, 0x30	; 48
    4692:	70 e0       	ldi	r23, 0x00	; 0
    4694:	c5 01       	movw	r24, r10
    4696:	d9 d3       	rcall	.+1970   	; 0x4e4a <memset>
		memset(debugString,'0', strlen(debugString));
    4698:	f6 01       	movw	r30, r12
    469a:	01 90       	ld	r0, Z+
    469c:	00 20       	and	r0, r0
    469e:	e9 f7       	brne	.-6      	; 0x469a <main+0x28a>
    46a0:	31 97       	sbiw	r30, 0x01	; 1
    46a2:	af 01       	movw	r20, r30
    46a4:	4c 19       	sub	r20, r12
    46a6:	5d 09       	sbc	r21, r13
    46a8:	60 e3       	ldi	r22, 0x30	; 48
    46aa:	70 e0       	ldi	r23, 0x00	; 0
    46ac:	c6 01       	movw	r24, r12
    46ae:	cd d3       	rcall	.+1946   	; 0x4e4a <memset>
	
		dtostrf(BAC, 3, 3, debugString);
    46b0:	86 01       	movw	r16, r12
    46b2:	23 e0       	ldi	r18, 0x03	; 3
    46b4:	43 e0       	ldi	r20, 0x03	; 3
    46b6:	c7 51       	subi	r28, 0x17	; 23
    46b8:	df 4f       	sbci	r29, 0xFF	; 255
    46ba:	68 81       	ld	r22, Y
    46bc:	79 81       	ldd	r23, Y+1	; 0x01
    46be:	8a 81       	ldd	r24, Y+2	; 0x02
    46c0:	9b 81       	ldd	r25, Y+3	; 0x03
    46c2:	c9 5e       	subi	r28, 0xE9	; 233
    46c4:	d0 40       	sbci	r29, 0x00	; 0
		sprintf(debugMsg, "BAC Level is %6s\r\n", debugString);
    46c6:	a2 d3       	rcall	.+1860   	; 0x4e0c <dtostrf>
    46c8:	df 92       	push	r13
    46ca:	cf 92       	push	r12
    46cc:	9f 92       	push	r9
    46ce:	8f 92       	push	r8
    46d0:	bf 92       	push	r11
    46d2:	af 92       	push	r10
    46d4:	c1 d3       	rcall	.+1922   	; 0x4e58 <sprintf>
		SendString(UART0, debugMsg);
    46d6:	b5 01       	movw	r22, r10
    46d8:	80 ec       	ldi	r24, 0xC0	; 192
    46da:	90 e0       	ldi	r25, 0x00	; 0
    46dc:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <SendString>
    46e0:	0f 90       	pop	r0
    46e2:	0f 90       	pop	r0
    46e4:	0f 90       	pop	r0
    46e6:	0f 90       	pop	r0
    46e8:	0f 90       	pop	r0
    46ea:	0f 90       	pop	r0
	
	if(newMeasurement == true){
		/* Display new BAC value */
		WriteNumberFromADC(60, 100, BLACK, BAC);
		// Reset 
		newMeasurement = false;
    46ec:	fe 2c       	mov	r15, r14
    46ee:	aa cf       	rjmp	.-172    	; 0x4644 <main+0x234>

000046f0 <__subsf3>:
    46f0:	50 58       	subi	r21, 0x80	; 128

000046f2 <__addsf3>:
    46f2:	bb 27       	eor	r27, r27
    46f4:	aa 27       	eor	r26, r26
    46f6:	0e d0       	rcall	.+28     	; 0x4714 <__addsf3x>
    46f8:	44 c1       	rjmp	.+648    	; 0x4982 <__fp_round>
    46fa:	35 d1       	rcall	.+618    	; 0x4966 <__fp_pscA>
    46fc:	30 f0       	brcs	.+12     	; 0x470a <__addsf3+0x18>
    46fe:	3a d1       	rcall	.+628    	; 0x4974 <__fp_pscB>
    4700:	20 f0       	brcs	.+8      	; 0x470a <__addsf3+0x18>
    4702:	31 f4       	brne	.+12     	; 0x4710 <__addsf3+0x1e>
    4704:	9f 3f       	cpi	r25, 0xFF	; 255
    4706:	11 f4       	brne	.+4      	; 0x470c <__addsf3+0x1a>
    4708:	1e f4       	brtc	.+6      	; 0x4710 <__addsf3+0x1e>
    470a:	2a c1       	rjmp	.+596    	; 0x4960 <__fp_nan>
    470c:	0e f4       	brtc	.+2      	; 0x4710 <__addsf3+0x1e>
    470e:	e0 95       	com	r30
    4710:	e7 fb       	bst	r30, 7
    4712:	20 c1       	rjmp	.+576    	; 0x4954 <__fp_inf>

00004714 <__addsf3x>:
    4714:	e9 2f       	mov	r30, r25
    4716:	46 d1       	rcall	.+652    	; 0x49a4 <__fp_split3>
    4718:	80 f3       	brcs	.-32     	; 0x46fa <__addsf3+0x8>
    471a:	ba 17       	cp	r27, r26
    471c:	62 07       	cpc	r22, r18
    471e:	73 07       	cpc	r23, r19
    4720:	84 07       	cpc	r24, r20
    4722:	95 07       	cpc	r25, r21
    4724:	18 f0       	brcs	.+6      	; 0x472c <__addsf3x+0x18>
    4726:	71 f4       	brne	.+28     	; 0x4744 <__addsf3x+0x30>
    4728:	9e f5       	brtc	.+102    	; 0x4790 <__addsf3x+0x7c>
    472a:	5e c1       	rjmp	.+700    	; 0x49e8 <__fp_zero>
    472c:	0e f4       	brtc	.+2      	; 0x4730 <__addsf3x+0x1c>
    472e:	e0 95       	com	r30
    4730:	0b 2e       	mov	r0, r27
    4732:	ba 2f       	mov	r27, r26
    4734:	a0 2d       	mov	r26, r0
    4736:	0b 01       	movw	r0, r22
    4738:	b9 01       	movw	r22, r18
    473a:	90 01       	movw	r18, r0
    473c:	0c 01       	movw	r0, r24
    473e:	ca 01       	movw	r24, r20
    4740:	a0 01       	movw	r20, r0
    4742:	11 24       	eor	r1, r1
    4744:	ff 27       	eor	r31, r31
    4746:	59 1b       	sub	r21, r25
    4748:	99 f0       	breq	.+38     	; 0x4770 <__addsf3x+0x5c>
    474a:	59 3f       	cpi	r21, 0xF9	; 249
    474c:	50 f4       	brcc	.+20     	; 0x4762 <__addsf3x+0x4e>
    474e:	50 3e       	cpi	r21, 0xE0	; 224
    4750:	68 f1       	brcs	.+90     	; 0x47ac <__addsf3x+0x98>
    4752:	1a 16       	cp	r1, r26
    4754:	f0 40       	sbci	r31, 0x00	; 0
    4756:	a2 2f       	mov	r26, r18
    4758:	23 2f       	mov	r18, r19
    475a:	34 2f       	mov	r19, r20
    475c:	44 27       	eor	r20, r20
    475e:	58 5f       	subi	r21, 0xF8	; 248
    4760:	f3 cf       	rjmp	.-26     	; 0x4748 <__addsf3x+0x34>
    4762:	46 95       	lsr	r20
    4764:	37 95       	ror	r19
    4766:	27 95       	ror	r18
    4768:	a7 95       	ror	r26
    476a:	f0 40       	sbci	r31, 0x00	; 0
    476c:	53 95       	inc	r21
    476e:	c9 f7       	brne	.-14     	; 0x4762 <__addsf3x+0x4e>
    4770:	7e f4       	brtc	.+30     	; 0x4790 <__addsf3x+0x7c>
    4772:	1f 16       	cp	r1, r31
    4774:	ba 0b       	sbc	r27, r26
    4776:	62 0b       	sbc	r22, r18
    4778:	73 0b       	sbc	r23, r19
    477a:	84 0b       	sbc	r24, r20
    477c:	ba f0       	brmi	.+46     	; 0x47ac <__addsf3x+0x98>
    477e:	91 50       	subi	r25, 0x01	; 1
    4780:	a1 f0       	breq	.+40     	; 0x47aa <__addsf3x+0x96>
    4782:	ff 0f       	add	r31, r31
    4784:	bb 1f       	adc	r27, r27
    4786:	66 1f       	adc	r22, r22
    4788:	77 1f       	adc	r23, r23
    478a:	88 1f       	adc	r24, r24
    478c:	c2 f7       	brpl	.-16     	; 0x477e <__addsf3x+0x6a>
    478e:	0e c0       	rjmp	.+28     	; 0x47ac <__addsf3x+0x98>
    4790:	ba 0f       	add	r27, r26
    4792:	62 1f       	adc	r22, r18
    4794:	73 1f       	adc	r23, r19
    4796:	84 1f       	adc	r24, r20
    4798:	48 f4       	brcc	.+18     	; 0x47ac <__addsf3x+0x98>
    479a:	87 95       	ror	r24
    479c:	77 95       	ror	r23
    479e:	67 95       	ror	r22
    47a0:	b7 95       	ror	r27
    47a2:	f7 95       	ror	r31
    47a4:	9e 3f       	cpi	r25, 0xFE	; 254
    47a6:	08 f0       	brcs	.+2      	; 0x47aa <__addsf3x+0x96>
    47a8:	b3 cf       	rjmp	.-154    	; 0x4710 <__addsf3+0x1e>
    47aa:	93 95       	inc	r25
    47ac:	88 0f       	add	r24, r24
    47ae:	08 f0       	brcs	.+2      	; 0x47b2 <__addsf3x+0x9e>
    47b0:	99 27       	eor	r25, r25
    47b2:	ee 0f       	add	r30, r30
    47b4:	97 95       	ror	r25
    47b6:	87 95       	ror	r24
    47b8:	08 95       	ret

000047ba <__cmpsf2>:
    47ba:	a8 d0       	rcall	.+336    	; 0x490c <__fp_cmp>
    47bc:	08 f4       	brcc	.+2      	; 0x47c0 <__cmpsf2+0x6>
    47be:	81 e0       	ldi	r24, 0x01	; 1
    47c0:	08 95       	ret

000047c2 <__divsf3>:
    47c2:	0c d0       	rcall	.+24     	; 0x47dc <__divsf3x>
    47c4:	de c0       	rjmp	.+444    	; 0x4982 <__fp_round>
    47c6:	d6 d0       	rcall	.+428    	; 0x4974 <__fp_pscB>
    47c8:	40 f0       	brcs	.+16     	; 0x47da <__divsf3+0x18>
    47ca:	cd d0       	rcall	.+410    	; 0x4966 <__fp_pscA>
    47cc:	30 f0       	brcs	.+12     	; 0x47da <__divsf3+0x18>
    47ce:	21 f4       	brne	.+8      	; 0x47d8 <__divsf3+0x16>
    47d0:	5f 3f       	cpi	r21, 0xFF	; 255
    47d2:	19 f0       	breq	.+6      	; 0x47da <__divsf3+0x18>
    47d4:	bf c0       	rjmp	.+382    	; 0x4954 <__fp_inf>
    47d6:	51 11       	cpse	r21, r1
    47d8:	08 c1       	rjmp	.+528    	; 0x49ea <__fp_szero>
    47da:	c2 c0       	rjmp	.+388    	; 0x4960 <__fp_nan>

000047dc <__divsf3x>:
    47dc:	e3 d0       	rcall	.+454    	; 0x49a4 <__fp_split3>
    47de:	98 f3       	brcs	.-26     	; 0x47c6 <__divsf3+0x4>

000047e0 <__divsf3_pse>:
    47e0:	99 23       	and	r25, r25
    47e2:	c9 f3       	breq	.-14     	; 0x47d6 <__divsf3+0x14>
    47e4:	55 23       	and	r21, r21
    47e6:	b1 f3       	breq	.-20     	; 0x47d4 <__divsf3+0x12>
    47e8:	95 1b       	sub	r25, r21
    47ea:	55 0b       	sbc	r21, r21
    47ec:	bb 27       	eor	r27, r27
    47ee:	aa 27       	eor	r26, r26
    47f0:	62 17       	cp	r22, r18
    47f2:	73 07       	cpc	r23, r19
    47f4:	84 07       	cpc	r24, r20
    47f6:	38 f0       	brcs	.+14     	; 0x4806 <__divsf3_pse+0x26>
    47f8:	9f 5f       	subi	r25, 0xFF	; 255
    47fa:	5f 4f       	sbci	r21, 0xFF	; 255
    47fc:	22 0f       	add	r18, r18
    47fe:	33 1f       	adc	r19, r19
    4800:	44 1f       	adc	r20, r20
    4802:	aa 1f       	adc	r26, r26
    4804:	a9 f3       	breq	.-22     	; 0x47f0 <__divsf3_pse+0x10>
    4806:	33 d0       	rcall	.+102    	; 0x486e <__divsf3_pse+0x8e>
    4808:	0e 2e       	mov	r0, r30
    480a:	3a f0       	brmi	.+14     	; 0x481a <__divsf3_pse+0x3a>
    480c:	e0 e8       	ldi	r30, 0x80	; 128
    480e:	30 d0       	rcall	.+96     	; 0x4870 <__divsf3_pse+0x90>
    4810:	91 50       	subi	r25, 0x01	; 1
    4812:	50 40       	sbci	r21, 0x00	; 0
    4814:	e6 95       	lsr	r30
    4816:	00 1c       	adc	r0, r0
    4818:	ca f7       	brpl	.-14     	; 0x480c <__divsf3_pse+0x2c>
    481a:	29 d0       	rcall	.+82     	; 0x486e <__divsf3_pse+0x8e>
    481c:	fe 2f       	mov	r31, r30
    481e:	27 d0       	rcall	.+78     	; 0x486e <__divsf3_pse+0x8e>
    4820:	66 0f       	add	r22, r22
    4822:	77 1f       	adc	r23, r23
    4824:	88 1f       	adc	r24, r24
    4826:	bb 1f       	adc	r27, r27
    4828:	26 17       	cp	r18, r22
    482a:	37 07       	cpc	r19, r23
    482c:	48 07       	cpc	r20, r24
    482e:	ab 07       	cpc	r26, r27
    4830:	b0 e8       	ldi	r27, 0x80	; 128
    4832:	09 f0       	breq	.+2      	; 0x4836 <__divsf3_pse+0x56>
    4834:	bb 0b       	sbc	r27, r27
    4836:	80 2d       	mov	r24, r0
    4838:	bf 01       	movw	r22, r30
    483a:	ff 27       	eor	r31, r31
    483c:	93 58       	subi	r25, 0x83	; 131
    483e:	5f 4f       	sbci	r21, 0xFF	; 255
    4840:	2a f0       	brmi	.+10     	; 0x484c <__divsf3_pse+0x6c>
    4842:	9e 3f       	cpi	r25, 0xFE	; 254
    4844:	51 05       	cpc	r21, r1
    4846:	68 f0       	brcs	.+26     	; 0x4862 <__divsf3_pse+0x82>
    4848:	85 c0       	rjmp	.+266    	; 0x4954 <__fp_inf>
    484a:	cf c0       	rjmp	.+414    	; 0x49ea <__fp_szero>
    484c:	5f 3f       	cpi	r21, 0xFF	; 255
    484e:	ec f3       	brlt	.-6      	; 0x484a <__divsf3_pse+0x6a>
    4850:	98 3e       	cpi	r25, 0xE8	; 232
    4852:	dc f3       	brlt	.-10     	; 0x484a <__divsf3_pse+0x6a>
    4854:	86 95       	lsr	r24
    4856:	77 95       	ror	r23
    4858:	67 95       	ror	r22
    485a:	b7 95       	ror	r27
    485c:	f7 95       	ror	r31
    485e:	9f 5f       	subi	r25, 0xFF	; 255
    4860:	c9 f7       	brne	.-14     	; 0x4854 <__divsf3_pse+0x74>
    4862:	88 0f       	add	r24, r24
    4864:	91 1d       	adc	r25, r1
    4866:	96 95       	lsr	r25
    4868:	87 95       	ror	r24
    486a:	97 f9       	bld	r25, 7
    486c:	08 95       	ret
    486e:	e1 e0       	ldi	r30, 0x01	; 1
    4870:	66 0f       	add	r22, r22
    4872:	77 1f       	adc	r23, r23
    4874:	88 1f       	adc	r24, r24
    4876:	bb 1f       	adc	r27, r27
    4878:	62 17       	cp	r22, r18
    487a:	73 07       	cpc	r23, r19
    487c:	84 07       	cpc	r24, r20
    487e:	ba 07       	cpc	r27, r26
    4880:	20 f0       	brcs	.+8      	; 0x488a <__divsf3_pse+0xaa>
    4882:	62 1b       	sub	r22, r18
    4884:	73 0b       	sbc	r23, r19
    4886:	84 0b       	sbc	r24, r20
    4888:	ba 0b       	sbc	r27, r26
    488a:	ee 1f       	adc	r30, r30
    488c:	88 f7       	brcc	.-30     	; 0x4870 <__divsf3_pse+0x90>
    488e:	e0 95       	com	r30
    4890:	08 95       	ret

00004892 <__floatunsisf>:
    4892:	e8 94       	clt
    4894:	09 c0       	rjmp	.+18     	; 0x48a8 <__floatsisf+0x12>

00004896 <__floatsisf>:
    4896:	97 fb       	bst	r25, 7
    4898:	3e f4       	brtc	.+14     	; 0x48a8 <__floatsisf+0x12>
    489a:	90 95       	com	r25
    489c:	80 95       	com	r24
    489e:	70 95       	com	r23
    48a0:	61 95       	neg	r22
    48a2:	7f 4f       	sbci	r23, 0xFF	; 255
    48a4:	8f 4f       	sbci	r24, 0xFF	; 255
    48a6:	9f 4f       	sbci	r25, 0xFF	; 255
    48a8:	99 23       	and	r25, r25
    48aa:	a9 f0       	breq	.+42     	; 0x48d6 <__floatsisf+0x40>
    48ac:	f9 2f       	mov	r31, r25
    48ae:	96 e9       	ldi	r25, 0x96	; 150
    48b0:	bb 27       	eor	r27, r27
    48b2:	93 95       	inc	r25
    48b4:	f6 95       	lsr	r31
    48b6:	87 95       	ror	r24
    48b8:	77 95       	ror	r23
    48ba:	67 95       	ror	r22
    48bc:	b7 95       	ror	r27
    48be:	f1 11       	cpse	r31, r1
    48c0:	f8 cf       	rjmp	.-16     	; 0x48b2 <__floatsisf+0x1c>
    48c2:	fa f4       	brpl	.+62     	; 0x4902 <__floatsisf+0x6c>
    48c4:	bb 0f       	add	r27, r27
    48c6:	11 f4       	brne	.+4      	; 0x48cc <__floatsisf+0x36>
    48c8:	60 ff       	sbrs	r22, 0
    48ca:	1b c0       	rjmp	.+54     	; 0x4902 <__floatsisf+0x6c>
    48cc:	6f 5f       	subi	r22, 0xFF	; 255
    48ce:	7f 4f       	sbci	r23, 0xFF	; 255
    48d0:	8f 4f       	sbci	r24, 0xFF	; 255
    48d2:	9f 4f       	sbci	r25, 0xFF	; 255
    48d4:	16 c0       	rjmp	.+44     	; 0x4902 <__floatsisf+0x6c>
    48d6:	88 23       	and	r24, r24
    48d8:	11 f0       	breq	.+4      	; 0x48de <__floatsisf+0x48>
    48da:	96 e9       	ldi	r25, 0x96	; 150
    48dc:	11 c0       	rjmp	.+34     	; 0x4900 <__floatsisf+0x6a>
    48de:	77 23       	and	r23, r23
    48e0:	21 f0       	breq	.+8      	; 0x48ea <__floatsisf+0x54>
    48e2:	9e e8       	ldi	r25, 0x8E	; 142
    48e4:	87 2f       	mov	r24, r23
    48e6:	76 2f       	mov	r23, r22
    48e8:	05 c0       	rjmp	.+10     	; 0x48f4 <__floatsisf+0x5e>
    48ea:	66 23       	and	r22, r22
    48ec:	71 f0       	breq	.+28     	; 0x490a <__floatsisf+0x74>
    48ee:	96 e8       	ldi	r25, 0x86	; 134
    48f0:	86 2f       	mov	r24, r22
    48f2:	70 e0       	ldi	r23, 0x00	; 0
    48f4:	60 e0       	ldi	r22, 0x00	; 0
    48f6:	2a f0       	brmi	.+10     	; 0x4902 <__floatsisf+0x6c>
    48f8:	9a 95       	dec	r25
    48fa:	66 0f       	add	r22, r22
    48fc:	77 1f       	adc	r23, r23
    48fe:	88 1f       	adc	r24, r24
    4900:	da f7       	brpl	.-10     	; 0x48f8 <__floatsisf+0x62>
    4902:	88 0f       	add	r24, r24
    4904:	96 95       	lsr	r25
    4906:	87 95       	ror	r24
    4908:	97 f9       	bld	r25, 7
    490a:	08 95       	ret

0000490c <__fp_cmp>:
    490c:	99 0f       	add	r25, r25
    490e:	00 08       	sbc	r0, r0
    4910:	55 0f       	add	r21, r21
    4912:	aa 0b       	sbc	r26, r26
    4914:	e0 e8       	ldi	r30, 0x80	; 128
    4916:	fe ef       	ldi	r31, 0xFE	; 254
    4918:	16 16       	cp	r1, r22
    491a:	17 06       	cpc	r1, r23
    491c:	e8 07       	cpc	r30, r24
    491e:	f9 07       	cpc	r31, r25
    4920:	c0 f0       	brcs	.+48     	; 0x4952 <__fp_cmp+0x46>
    4922:	12 16       	cp	r1, r18
    4924:	13 06       	cpc	r1, r19
    4926:	e4 07       	cpc	r30, r20
    4928:	f5 07       	cpc	r31, r21
    492a:	98 f0       	brcs	.+38     	; 0x4952 <__fp_cmp+0x46>
    492c:	62 1b       	sub	r22, r18
    492e:	73 0b       	sbc	r23, r19
    4930:	84 0b       	sbc	r24, r20
    4932:	95 0b       	sbc	r25, r21
    4934:	39 f4       	brne	.+14     	; 0x4944 <__fp_cmp+0x38>
    4936:	0a 26       	eor	r0, r26
    4938:	61 f0       	breq	.+24     	; 0x4952 <__fp_cmp+0x46>
    493a:	23 2b       	or	r18, r19
    493c:	24 2b       	or	r18, r20
    493e:	25 2b       	or	r18, r21
    4940:	21 f4       	brne	.+8      	; 0x494a <__fp_cmp+0x3e>
    4942:	08 95       	ret
    4944:	0a 26       	eor	r0, r26
    4946:	09 f4       	brne	.+2      	; 0x494a <__fp_cmp+0x3e>
    4948:	a1 40       	sbci	r26, 0x01	; 1
    494a:	a6 95       	lsr	r26
    494c:	8f ef       	ldi	r24, 0xFF	; 255
    494e:	81 1d       	adc	r24, r1
    4950:	81 1d       	adc	r24, r1
    4952:	08 95       	ret

00004954 <__fp_inf>:
    4954:	97 f9       	bld	r25, 7
    4956:	9f 67       	ori	r25, 0x7F	; 127
    4958:	80 e8       	ldi	r24, 0x80	; 128
    495a:	70 e0       	ldi	r23, 0x00	; 0
    495c:	60 e0       	ldi	r22, 0x00	; 0
    495e:	08 95       	ret

00004960 <__fp_nan>:
    4960:	9f ef       	ldi	r25, 0xFF	; 255
    4962:	80 ec       	ldi	r24, 0xC0	; 192
    4964:	08 95       	ret

00004966 <__fp_pscA>:
    4966:	00 24       	eor	r0, r0
    4968:	0a 94       	dec	r0
    496a:	16 16       	cp	r1, r22
    496c:	17 06       	cpc	r1, r23
    496e:	18 06       	cpc	r1, r24
    4970:	09 06       	cpc	r0, r25
    4972:	08 95       	ret

00004974 <__fp_pscB>:
    4974:	00 24       	eor	r0, r0
    4976:	0a 94       	dec	r0
    4978:	12 16       	cp	r1, r18
    497a:	13 06       	cpc	r1, r19
    497c:	14 06       	cpc	r1, r20
    497e:	05 06       	cpc	r0, r21
    4980:	08 95       	ret

00004982 <__fp_round>:
    4982:	09 2e       	mov	r0, r25
    4984:	03 94       	inc	r0
    4986:	00 0c       	add	r0, r0
    4988:	11 f4       	brne	.+4      	; 0x498e <__fp_round+0xc>
    498a:	88 23       	and	r24, r24
    498c:	52 f0       	brmi	.+20     	; 0x49a2 <__fp_round+0x20>
    498e:	bb 0f       	add	r27, r27
    4990:	40 f4       	brcc	.+16     	; 0x49a2 <__fp_round+0x20>
    4992:	bf 2b       	or	r27, r31
    4994:	11 f4       	brne	.+4      	; 0x499a <__fp_round+0x18>
    4996:	60 ff       	sbrs	r22, 0
    4998:	04 c0       	rjmp	.+8      	; 0x49a2 <__fp_round+0x20>
    499a:	6f 5f       	subi	r22, 0xFF	; 255
    499c:	7f 4f       	sbci	r23, 0xFF	; 255
    499e:	8f 4f       	sbci	r24, 0xFF	; 255
    49a0:	9f 4f       	sbci	r25, 0xFF	; 255
    49a2:	08 95       	ret

000049a4 <__fp_split3>:
    49a4:	57 fd       	sbrc	r21, 7
    49a6:	90 58       	subi	r25, 0x80	; 128
    49a8:	44 0f       	add	r20, r20
    49aa:	55 1f       	adc	r21, r21
    49ac:	59 f0       	breq	.+22     	; 0x49c4 <__fp_splitA+0x10>
    49ae:	5f 3f       	cpi	r21, 0xFF	; 255
    49b0:	71 f0       	breq	.+28     	; 0x49ce <__fp_splitA+0x1a>
    49b2:	47 95       	ror	r20

000049b4 <__fp_splitA>:
    49b4:	88 0f       	add	r24, r24
    49b6:	97 fb       	bst	r25, 7
    49b8:	99 1f       	adc	r25, r25
    49ba:	61 f0       	breq	.+24     	; 0x49d4 <__fp_splitA+0x20>
    49bc:	9f 3f       	cpi	r25, 0xFF	; 255
    49be:	79 f0       	breq	.+30     	; 0x49de <__fp_splitA+0x2a>
    49c0:	87 95       	ror	r24
    49c2:	08 95       	ret
    49c4:	12 16       	cp	r1, r18
    49c6:	13 06       	cpc	r1, r19
    49c8:	14 06       	cpc	r1, r20
    49ca:	55 1f       	adc	r21, r21
    49cc:	f2 cf       	rjmp	.-28     	; 0x49b2 <__fp_split3+0xe>
    49ce:	46 95       	lsr	r20
    49d0:	f1 df       	rcall	.-30     	; 0x49b4 <__fp_splitA>
    49d2:	08 c0       	rjmp	.+16     	; 0x49e4 <__fp_splitA+0x30>
    49d4:	16 16       	cp	r1, r22
    49d6:	17 06       	cpc	r1, r23
    49d8:	18 06       	cpc	r1, r24
    49da:	99 1f       	adc	r25, r25
    49dc:	f1 cf       	rjmp	.-30     	; 0x49c0 <__fp_splitA+0xc>
    49de:	86 95       	lsr	r24
    49e0:	71 05       	cpc	r23, r1
    49e2:	61 05       	cpc	r22, r1
    49e4:	08 94       	sec
    49e6:	08 95       	ret

000049e8 <__fp_zero>:
    49e8:	e8 94       	clt

000049ea <__fp_szero>:
    49ea:	bb 27       	eor	r27, r27
    49ec:	66 27       	eor	r22, r22
    49ee:	77 27       	eor	r23, r23
    49f0:	cb 01       	movw	r24, r22
    49f2:	97 f9       	bld	r25, 7
    49f4:	08 95       	ret

000049f6 <__mulsf3>:
    49f6:	0b d0       	rcall	.+22     	; 0x4a0e <__mulsf3x>
    49f8:	c4 cf       	rjmp	.-120    	; 0x4982 <__fp_round>
    49fa:	b5 df       	rcall	.-150    	; 0x4966 <__fp_pscA>
    49fc:	28 f0       	brcs	.+10     	; 0x4a08 <__mulsf3+0x12>
    49fe:	ba df       	rcall	.-140    	; 0x4974 <__fp_pscB>
    4a00:	18 f0       	brcs	.+6      	; 0x4a08 <__mulsf3+0x12>
    4a02:	95 23       	and	r25, r21
    4a04:	09 f0       	breq	.+2      	; 0x4a08 <__mulsf3+0x12>
    4a06:	a6 cf       	rjmp	.-180    	; 0x4954 <__fp_inf>
    4a08:	ab cf       	rjmp	.-170    	; 0x4960 <__fp_nan>
    4a0a:	11 24       	eor	r1, r1
    4a0c:	ee cf       	rjmp	.-36     	; 0x49ea <__fp_szero>

00004a0e <__mulsf3x>:
    4a0e:	ca df       	rcall	.-108    	; 0x49a4 <__fp_split3>
    4a10:	a0 f3       	brcs	.-24     	; 0x49fa <__mulsf3+0x4>

00004a12 <__mulsf3_pse>:
    4a12:	95 9f       	mul	r25, r21
    4a14:	d1 f3       	breq	.-12     	; 0x4a0a <__mulsf3+0x14>
    4a16:	95 0f       	add	r25, r21
    4a18:	50 e0       	ldi	r21, 0x00	; 0
    4a1a:	55 1f       	adc	r21, r21
    4a1c:	62 9f       	mul	r22, r18
    4a1e:	f0 01       	movw	r30, r0
    4a20:	72 9f       	mul	r23, r18
    4a22:	bb 27       	eor	r27, r27
    4a24:	f0 0d       	add	r31, r0
    4a26:	b1 1d       	adc	r27, r1
    4a28:	63 9f       	mul	r22, r19
    4a2a:	aa 27       	eor	r26, r26
    4a2c:	f0 0d       	add	r31, r0
    4a2e:	b1 1d       	adc	r27, r1
    4a30:	aa 1f       	adc	r26, r26
    4a32:	64 9f       	mul	r22, r20
    4a34:	66 27       	eor	r22, r22
    4a36:	b0 0d       	add	r27, r0
    4a38:	a1 1d       	adc	r26, r1
    4a3a:	66 1f       	adc	r22, r22
    4a3c:	82 9f       	mul	r24, r18
    4a3e:	22 27       	eor	r18, r18
    4a40:	b0 0d       	add	r27, r0
    4a42:	a1 1d       	adc	r26, r1
    4a44:	62 1f       	adc	r22, r18
    4a46:	73 9f       	mul	r23, r19
    4a48:	b0 0d       	add	r27, r0
    4a4a:	a1 1d       	adc	r26, r1
    4a4c:	62 1f       	adc	r22, r18
    4a4e:	83 9f       	mul	r24, r19
    4a50:	a0 0d       	add	r26, r0
    4a52:	61 1d       	adc	r22, r1
    4a54:	22 1f       	adc	r18, r18
    4a56:	74 9f       	mul	r23, r20
    4a58:	33 27       	eor	r19, r19
    4a5a:	a0 0d       	add	r26, r0
    4a5c:	61 1d       	adc	r22, r1
    4a5e:	23 1f       	adc	r18, r19
    4a60:	84 9f       	mul	r24, r20
    4a62:	60 0d       	add	r22, r0
    4a64:	21 1d       	adc	r18, r1
    4a66:	82 2f       	mov	r24, r18
    4a68:	76 2f       	mov	r23, r22
    4a6a:	6a 2f       	mov	r22, r26
    4a6c:	11 24       	eor	r1, r1
    4a6e:	9f 57       	subi	r25, 0x7F	; 127
    4a70:	50 40       	sbci	r21, 0x00	; 0
    4a72:	8a f0       	brmi	.+34     	; 0x4a96 <__mulsf3_pse+0x84>
    4a74:	e1 f0       	breq	.+56     	; 0x4aae <__mulsf3_pse+0x9c>
    4a76:	88 23       	and	r24, r24
    4a78:	4a f0       	brmi	.+18     	; 0x4a8c <__mulsf3_pse+0x7a>
    4a7a:	ee 0f       	add	r30, r30
    4a7c:	ff 1f       	adc	r31, r31
    4a7e:	bb 1f       	adc	r27, r27
    4a80:	66 1f       	adc	r22, r22
    4a82:	77 1f       	adc	r23, r23
    4a84:	88 1f       	adc	r24, r24
    4a86:	91 50       	subi	r25, 0x01	; 1
    4a88:	50 40       	sbci	r21, 0x00	; 0
    4a8a:	a9 f7       	brne	.-22     	; 0x4a76 <__mulsf3_pse+0x64>
    4a8c:	9e 3f       	cpi	r25, 0xFE	; 254
    4a8e:	51 05       	cpc	r21, r1
    4a90:	70 f0       	brcs	.+28     	; 0x4aae <__mulsf3_pse+0x9c>
    4a92:	60 cf       	rjmp	.-320    	; 0x4954 <__fp_inf>
    4a94:	aa cf       	rjmp	.-172    	; 0x49ea <__fp_szero>
    4a96:	5f 3f       	cpi	r21, 0xFF	; 255
    4a98:	ec f3       	brlt	.-6      	; 0x4a94 <__mulsf3_pse+0x82>
    4a9a:	98 3e       	cpi	r25, 0xE8	; 232
    4a9c:	dc f3       	brlt	.-10     	; 0x4a94 <__mulsf3_pse+0x82>
    4a9e:	86 95       	lsr	r24
    4aa0:	77 95       	ror	r23
    4aa2:	67 95       	ror	r22
    4aa4:	b7 95       	ror	r27
    4aa6:	f7 95       	ror	r31
    4aa8:	e7 95       	ror	r30
    4aaa:	9f 5f       	subi	r25, 0xFF	; 255
    4aac:	c1 f7       	brne	.-16     	; 0x4a9e <__mulsf3_pse+0x8c>
    4aae:	fe 2b       	or	r31, r30
    4ab0:	88 0f       	add	r24, r24
    4ab2:	91 1d       	adc	r25, r1
    4ab4:	96 95       	lsr	r25
    4ab6:	87 95       	ror	r24
    4ab8:	97 f9       	bld	r25, 7
    4aba:	08 95       	ret

00004abc <pow>:
    4abc:	fa 01       	movw	r30, r20
    4abe:	ee 0f       	add	r30, r30
    4ac0:	ff 1f       	adc	r31, r31
    4ac2:	30 96       	adiw	r30, 0x00	; 0
    4ac4:	21 05       	cpc	r18, r1
    4ac6:	31 05       	cpc	r19, r1
    4ac8:	99 f1       	breq	.+102    	; 0x4b30 <pow+0x74>
    4aca:	61 15       	cp	r22, r1
    4acc:	71 05       	cpc	r23, r1
    4ace:	61 f4       	brne	.+24     	; 0x4ae8 <pow+0x2c>
    4ad0:	80 38       	cpi	r24, 0x80	; 128
    4ad2:	bf e3       	ldi	r27, 0x3F	; 63
    4ad4:	9b 07       	cpc	r25, r27
    4ad6:	49 f1       	breq	.+82     	; 0x4b2a <pow+0x6e>
    4ad8:	68 94       	set
    4ada:	90 38       	cpi	r25, 0x80	; 128
    4adc:	81 05       	cpc	r24, r1
    4ade:	61 f0       	breq	.+24     	; 0x4af8 <pow+0x3c>
    4ae0:	80 38       	cpi	r24, 0x80	; 128
    4ae2:	bf ef       	ldi	r27, 0xFF	; 255
    4ae4:	9b 07       	cpc	r25, r27
    4ae6:	41 f0       	breq	.+16     	; 0x4af8 <pow+0x3c>
    4ae8:	99 23       	and	r25, r25
    4aea:	42 f5       	brpl	.+80     	; 0x4b3c <pow+0x80>
    4aec:	ff 3f       	cpi	r31, 0xFF	; 255
    4aee:	e1 05       	cpc	r30, r1
    4af0:	31 05       	cpc	r19, r1
    4af2:	21 05       	cpc	r18, r1
    4af4:	11 f1       	breq	.+68     	; 0x4b3a <pow+0x7e>
    4af6:	e8 94       	clt
    4af8:	08 94       	sec
    4afa:	e7 95       	ror	r30
    4afc:	d9 01       	movw	r26, r18
    4afe:	aa 23       	and	r26, r26
    4b00:	29 f4       	brne	.+10     	; 0x4b0c <pow+0x50>
    4b02:	ab 2f       	mov	r26, r27
    4b04:	be 2f       	mov	r27, r30
    4b06:	f8 5f       	subi	r31, 0xF8	; 248
    4b08:	d0 f3       	brcs	.-12     	; 0x4afe <pow+0x42>
    4b0a:	10 c0       	rjmp	.+32     	; 0x4b2c <pow+0x70>
    4b0c:	ff 5f       	subi	r31, 0xFF	; 255
    4b0e:	70 f4       	brcc	.+28     	; 0x4b2c <pow+0x70>
    4b10:	a6 95       	lsr	r26
    4b12:	e0 f7       	brcc	.-8      	; 0x4b0c <pow+0x50>
    4b14:	f7 39       	cpi	r31, 0x97	; 151
    4b16:	50 f0       	brcs	.+20     	; 0x4b2c <pow+0x70>
    4b18:	19 f0       	breq	.+6      	; 0x4b20 <pow+0x64>
    4b1a:	ff 3a       	cpi	r31, 0xAF	; 175
    4b1c:	38 f4       	brcc	.+14     	; 0x4b2c <pow+0x70>
    4b1e:	9f 77       	andi	r25, 0x7F	; 127
    4b20:	9f 93       	push	r25
    4b22:	0c d0       	rcall	.+24     	; 0x4b3c <pow+0x80>
    4b24:	0f 90       	pop	r0
    4b26:	07 fc       	sbrc	r0, 7
    4b28:	90 58       	subi	r25, 0x80	; 128
    4b2a:	08 95       	ret
    4b2c:	3e f0       	brts	.+14     	; 0x4b3c <pow+0x80>
    4b2e:	18 cf       	rjmp	.-464    	; 0x4960 <__fp_nan>
    4b30:	60 e0       	ldi	r22, 0x00	; 0
    4b32:	70 e0       	ldi	r23, 0x00	; 0
    4b34:	80 e8       	ldi	r24, 0x80	; 128
    4b36:	9f e3       	ldi	r25, 0x3F	; 63
    4b38:	08 95       	ret
    4b3a:	4f e7       	ldi	r20, 0x7F	; 127
    4b3c:	9f 77       	andi	r25, 0x7F	; 127
    4b3e:	5f 93       	push	r21
    4b40:	4f 93       	push	r20
    4b42:	3f 93       	push	r19
    4b44:	2f 93       	push	r18
    4b46:	9e d0       	rcall	.+316    	; 0x4c84 <log>
    4b48:	2f 91       	pop	r18
    4b4a:	3f 91       	pop	r19
    4b4c:	4f 91       	pop	r20
    4b4e:	5f 91       	pop	r21
    4b50:	52 df       	rcall	.-348    	; 0x49f6 <__mulsf3>
    4b52:	05 c0       	rjmp	.+10     	; 0x4b5e <exp>
    4b54:	19 f4       	brne	.+6      	; 0x4b5c <pow+0xa0>
    4b56:	0e f0       	brts	.+2      	; 0x4b5a <pow+0x9e>
    4b58:	fd ce       	rjmp	.-518    	; 0x4954 <__fp_inf>
    4b5a:	46 cf       	rjmp	.-372    	; 0x49e8 <__fp_zero>
    4b5c:	01 cf       	rjmp	.-510    	; 0x4960 <__fp_nan>

00004b5e <exp>:
    4b5e:	2a df       	rcall	.-428    	; 0x49b4 <__fp_splitA>
    4b60:	c8 f3       	brcs	.-14     	; 0x4b54 <pow+0x98>
    4b62:	96 38       	cpi	r25, 0x86	; 134
    4b64:	c0 f7       	brcc	.-16     	; 0x4b56 <pow+0x9a>
    4b66:	07 f8       	bld	r0, 7
    4b68:	0f 92       	push	r0
    4b6a:	e8 94       	clt
    4b6c:	2b e3       	ldi	r18, 0x3B	; 59
    4b6e:	3a ea       	ldi	r19, 0xAA	; 170
    4b70:	48 eb       	ldi	r20, 0xB8	; 184
    4b72:	5f e7       	ldi	r21, 0x7F	; 127
    4b74:	4e df       	rcall	.-356    	; 0x4a12 <__mulsf3_pse>
    4b76:	0f 92       	push	r0
    4b78:	0f 92       	push	r0
    4b7a:	0f 92       	push	r0
    4b7c:	4d b7       	in	r20, 0x3d	; 61
    4b7e:	5e b7       	in	r21, 0x3e	; 62
    4b80:	0f 92       	push	r0
    4b82:	c0 d0       	rcall	.+384    	; 0x4d04 <modf>
    4b84:	ee ef       	ldi	r30, 0xFE	; 254
    4b86:	f1 e0       	ldi	r31, 0x01	; 1
    4b88:	16 d0       	rcall	.+44     	; 0x4bb6 <__fp_powser>
    4b8a:	4f 91       	pop	r20
    4b8c:	5f 91       	pop	r21
    4b8e:	ef 91       	pop	r30
    4b90:	ff 91       	pop	r31
    4b92:	e5 95       	asr	r30
    4b94:	ee 1f       	adc	r30, r30
    4b96:	ff 1f       	adc	r31, r31
    4b98:	49 f0       	breq	.+18     	; 0x4bac <exp+0x4e>
    4b9a:	fe 57       	subi	r31, 0x7E	; 126
    4b9c:	e0 68       	ori	r30, 0x80	; 128
    4b9e:	44 27       	eor	r20, r20
    4ba0:	ee 0f       	add	r30, r30
    4ba2:	44 1f       	adc	r20, r20
    4ba4:	fa 95       	dec	r31
    4ba6:	e1 f7       	brne	.-8      	; 0x4ba0 <exp+0x42>
    4ba8:	41 95       	neg	r20
    4baa:	55 0b       	sbc	r21, r21
    4bac:	32 d0       	rcall	.+100    	; 0x4c12 <ldexp>
    4bae:	0f 90       	pop	r0
    4bb0:	07 fe       	sbrs	r0, 7
    4bb2:	26 c0       	rjmp	.+76     	; 0x4c00 <inverse>
    4bb4:	08 95       	ret

00004bb6 <__fp_powser>:
    4bb6:	df 93       	push	r29
    4bb8:	cf 93       	push	r28
    4bba:	1f 93       	push	r17
    4bbc:	0f 93       	push	r16
    4bbe:	ff 92       	push	r15
    4bc0:	ef 92       	push	r14
    4bc2:	df 92       	push	r13
    4bc4:	7b 01       	movw	r14, r22
    4bc6:	8c 01       	movw	r16, r24
    4bc8:	68 94       	set
    4bca:	05 c0       	rjmp	.+10     	; 0x4bd6 <__fp_powser+0x20>
    4bcc:	da 2e       	mov	r13, r26
    4bce:	ef 01       	movw	r28, r30
    4bd0:	1e df       	rcall	.-452    	; 0x4a0e <__mulsf3x>
    4bd2:	fe 01       	movw	r30, r28
    4bd4:	e8 94       	clt
    4bd6:	a5 91       	lpm	r26, Z+
    4bd8:	25 91       	lpm	r18, Z+
    4bda:	35 91       	lpm	r19, Z+
    4bdc:	45 91       	lpm	r20, Z+
    4bde:	55 91       	lpm	r21, Z+
    4be0:	ae f3       	brts	.-22     	; 0x4bcc <__fp_powser+0x16>
    4be2:	ef 01       	movw	r28, r30
    4be4:	97 dd       	rcall	.-1234   	; 0x4714 <__addsf3x>
    4be6:	fe 01       	movw	r30, r28
    4be8:	97 01       	movw	r18, r14
    4bea:	a8 01       	movw	r20, r16
    4bec:	da 94       	dec	r13
    4bee:	79 f7       	brne	.-34     	; 0x4bce <__fp_powser+0x18>
    4bf0:	df 90       	pop	r13
    4bf2:	ef 90       	pop	r14
    4bf4:	ff 90       	pop	r15
    4bf6:	0f 91       	pop	r16
    4bf8:	1f 91       	pop	r17
    4bfa:	cf 91       	pop	r28
    4bfc:	df 91       	pop	r29
    4bfe:	08 95       	ret

00004c00 <inverse>:
    4c00:	9b 01       	movw	r18, r22
    4c02:	ac 01       	movw	r20, r24
    4c04:	60 e0       	ldi	r22, 0x00	; 0
    4c06:	70 e0       	ldi	r23, 0x00	; 0
    4c08:	80 e8       	ldi	r24, 0x80	; 128
    4c0a:	9f e3       	ldi	r25, 0x3F	; 63
    4c0c:	da cd       	rjmp	.-1100   	; 0x47c2 <__divsf3>
    4c0e:	a2 ce       	rjmp	.-700    	; 0x4954 <__fp_inf>
    4c10:	ac c0       	rjmp	.+344    	; 0x4d6a <__fp_mpack>

00004c12 <ldexp>:
    4c12:	d0 de       	rcall	.-608    	; 0x49b4 <__fp_splitA>
    4c14:	e8 f3       	brcs	.-6      	; 0x4c10 <inverse+0x10>
    4c16:	99 23       	and	r25, r25
    4c18:	d9 f3       	breq	.-10     	; 0x4c10 <inverse+0x10>
    4c1a:	94 0f       	add	r25, r20
    4c1c:	51 1d       	adc	r21, r1
    4c1e:	bb f3       	brvs	.-18     	; 0x4c0e <inverse+0xe>
    4c20:	91 50       	subi	r25, 0x01	; 1
    4c22:	50 40       	sbci	r21, 0x00	; 0
    4c24:	94 f0       	brlt	.+36     	; 0x4c4a <ldexp+0x38>
    4c26:	59 f0       	breq	.+22     	; 0x4c3e <ldexp+0x2c>
    4c28:	88 23       	and	r24, r24
    4c2a:	32 f0       	brmi	.+12     	; 0x4c38 <ldexp+0x26>
    4c2c:	66 0f       	add	r22, r22
    4c2e:	77 1f       	adc	r23, r23
    4c30:	88 1f       	adc	r24, r24
    4c32:	91 50       	subi	r25, 0x01	; 1
    4c34:	50 40       	sbci	r21, 0x00	; 0
    4c36:	c1 f7       	brne	.-16     	; 0x4c28 <ldexp+0x16>
    4c38:	9e 3f       	cpi	r25, 0xFE	; 254
    4c3a:	51 05       	cpc	r21, r1
    4c3c:	44 f7       	brge	.-48     	; 0x4c0e <inverse+0xe>
    4c3e:	88 0f       	add	r24, r24
    4c40:	91 1d       	adc	r25, r1
    4c42:	96 95       	lsr	r25
    4c44:	87 95       	ror	r24
    4c46:	97 f9       	bld	r25, 7
    4c48:	08 95       	ret
    4c4a:	5f 3f       	cpi	r21, 0xFF	; 255
    4c4c:	ac f0       	brlt	.+42     	; 0x4c78 <ldexp+0x66>
    4c4e:	98 3e       	cpi	r25, 0xE8	; 232
    4c50:	9c f0       	brlt	.+38     	; 0x4c78 <ldexp+0x66>
    4c52:	bb 27       	eor	r27, r27
    4c54:	86 95       	lsr	r24
    4c56:	77 95       	ror	r23
    4c58:	67 95       	ror	r22
    4c5a:	b7 95       	ror	r27
    4c5c:	08 f4       	brcc	.+2      	; 0x4c60 <ldexp+0x4e>
    4c5e:	b1 60       	ori	r27, 0x01	; 1
    4c60:	93 95       	inc	r25
    4c62:	c1 f7       	brne	.-16     	; 0x4c54 <ldexp+0x42>
    4c64:	bb 0f       	add	r27, r27
    4c66:	58 f7       	brcc	.-42     	; 0x4c3e <ldexp+0x2c>
    4c68:	11 f4       	brne	.+4      	; 0x4c6e <ldexp+0x5c>
    4c6a:	60 ff       	sbrs	r22, 0
    4c6c:	e8 cf       	rjmp	.-48     	; 0x4c3e <ldexp+0x2c>
    4c6e:	6f 5f       	subi	r22, 0xFF	; 255
    4c70:	7f 4f       	sbci	r23, 0xFF	; 255
    4c72:	8f 4f       	sbci	r24, 0xFF	; 255
    4c74:	9f 4f       	sbci	r25, 0xFF	; 255
    4c76:	e3 cf       	rjmp	.-58     	; 0x4c3e <ldexp+0x2c>
    4c78:	b8 ce       	rjmp	.-656    	; 0x49ea <__fp_szero>
    4c7a:	0e f0       	brts	.+2      	; 0x4c7e <ldexp+0x6c>
    4c7c:	76 c0       	rjmp	.+236    	; 0x4d6a <__fp_mpack>
    4c7e:	70 ce       	rjmp	.-800    	; 0x4960 <__fp_nan>
    4c80:	68 94       	set
    4c82:	68 ce       	rjmp	.-816    	; 0x4954 <__fp_inf>

00004c84 <log>:
    4c84:	97 de       	rcall	.-722    	; 0x49b4 <__fp_splitA>
    4c86:	c8 f3       	brcs	.-14     	; 0x4c7a <ldexp+0x68>
    4c88:	99 23       	and	r25, r25
    4c8a:	d1 f3       	breq	.-12     	; 0x4c80 <ldexp+0x6e>
    4c8c:	c6 f3       	brts	.-16     	; 0x4c7e <ldexp+0x6c>
    4c8e:	df 93       	push	r29
    4c90:	cf 93       	push	r28
    4c92:	1f 93       	push	r17
    4c94:	0f 93       	push	r16
    4c96:	ff 92       	push	r15
    4c98:	c9 2f       	mov	r28, r25
    4c9a:	dd 27       	eor	r29, r29
    4c9c:	88 23       	and	r24, r24
    4c9e:	2a f0       	brmi	.+10     	; 0x4caa <log+0x26>
    4ca0:	21 97       	sbiw	r28, 0x01	; 1
    4ca2:	66 0f       	add	r22, r22
    4ca4:	77 1f       	adc	r23, r23
    4ca6:	88 1f       	adc	r24, r24
    4ca8:	da f7       	brpl	.-10     	; 0x4ca0 <log+0x1c>
    4caa:	20 e0       	ldi	r18, 0x00	; 0
    4cac:	30 e0       	ldi	r19, 0x00	; 0
    4cae:	40 e8       	ldi	r20, 0x80	; 128
    4cb0:	5f eb       	ldi	r21, 0xBF	; 191
    4cb2:	9f e3       	ldi	r25, 0x3F	; 63
    4cb4:	88 39       	cpi	r24, 0x98	; 152
    4cb6:	20 f0       	brcs	.+8      	; 0x4cc0 <log+0x3c>
    4cb8:	80 3e       	cpi	r24, 0xE0	; 224
    4cba:	30 f0       	brcs	.+12     	; 0x4cc8 <log+0x44>
    4cbc:	21 96       	adiw	r28, 0x01	; 1
    4cbe:	8f 77       	andi	r24, 0x7F	; 127
    4cc0:	18 dd       	rcall	.-1488   	; 0x46f2 <__addsf3>
    4cc2:	e6 e2       	ldi	r30, 0x26	; 38
    4cc4:	f2 e0       	ldi	r31, 0x02	; 2
    4cc6:	03 c0       	rjmp	.+6      	; 0x4cce <log+0x4a>
    4cc8:	14 dd       	rcall	.-1496   	; 0x46f2 <__addsf3>
    4cca:	e3 e5       	ldi	r30, 0x53	; 83
    4ccc:	f2 e0       	ldi	r31, 0x02	; 2
    4cce:	73 df       	rcall	.-282    	; 0x4bb6 <__fp_powser>
    4cd0:	8b 01       	movw	r16, r22
    4cd2:	be 01       	movw	r22, r28
    4cd4:	ec 01       	movw	r28, r24
    4cd6:	fb 2e       	mov	r15, r27
    4cd8:	6f 57       	subi	r22, 0x7F	; 127
    4cda:	71 09       	sbc	r23, r1
    4cdc:	75 95       	asr	r23
    4cde:	77 1f       	adc	r23, r23
    4ce0:	88 0b       	sbc	r24, r24
    4ce2:	99 0b       	sbc	r25, r25
    4ce4:	d8 dd       	rcall	.-1104   	; 0x4896 <__floatsisf>
    4ce6:	28 e1       	ldi	r18, 0x18	; 24
    4ce8:	32 e7       	ldi	r19, 0x72	; 114
    4cea:	41 e3       	ldi	r20, 0x31	; 49
    4cec:	5f e3       	ldi	r21, 0x3F	; 63
    4cee:	8f de       	rcall	.-738    	; 0x4a0e <__mulsf3x>
    4cf0:	af 2d       	mov	r26, r15
    4cf2:	98 01       	movw	r18, r16
    4cf4:	ae 01       	movw	r20, r28
    4cf6:	ff 90       	pop	r15
    4cf8:	0f 91       	pop	r16
    4cfa:	1f 91       	pop	r17
    4cfc:	cf 91       	pop	r28
    4cfe:	df 91       	pop	r29
    4d00:	09 dd       	rcall	.-1518   	; 0x4714 <__addsf3x>
    4d02:	3f ce       	rjmp	.-898    	; 0x4982 <__fp_round>

00004d04 <modf>:
    4d04:	fa 01       	movw	r30, r20
    4d06:	dc 01       	movw	r26, r24
    4d08:	aa 0f       	add	r26, r26
    4d0a:	bb 1f       	adc	r27, r27
    4d0c:	9b 01       	movw	r18, r22
    4d0e:	ac 01       	movw	r20, r24
    4d10:	bf 57       	subi	r27, 0x7F	; 127
    4d12:	28 f4       	brcc	.+10     	; 0x4d1e <modf+0x1a>
    4d14:	22 27       	eor	r18, r18
    4d16:	33 27       	eor	r19, r19
    4d18:	44 27       	eor	r20, r20
    4d1a:	50 78       	andi	r21, 0x80	; 128
    4d1c:	1f c0       	rjmp	.+62     	; 0x4d5c <modf+0x58>
    4d1e:	b7 51       	subi	r27, 0x17	; 23
    4d20:	88 f4       	brcc	.+34     	; 0x4d44 <modf+0x40>
    4d22:	ab 2f       	mov	r26, r27
    4d24:	00 24       	eor	r0, r0
    4d26:	46 95       	lsr	r20
    4d28:	37 95       	ror	r19
    4d2a:	27 95       	ror	r18
    4d2c:	01 1c       	adc	r0, r1
    4d2e:	a3 95       	inc	r26
    4d30:	d2 f3       	brmi	.-12     	; 0x4d26 <modf+0x22>
    4d32:	00 20       	and	r0, r0
    4d34:	69 f0       	breq	.+26     	; 0x4d50 <modf+0x4c>
    4d36:	22 0f       	add	r18, r18
    4d38:	33 1f       	adc	r19, r19
    4d3a:	44 1f       	adc	r20, r20
    4d3c:	b3 95       	inc	r27
    4d3e:	da f3       	brmi	.-10     	; 0x4d36 <modf+0x32>
    4d40:	0d d0       	rcall	.+26     	; 0x4d5c <modf+0x58>
    4d42:	d6 cc       	rjmp	.-1620   	; 0x46f0 <__subsf3>
    4d44:	61 30       	cpi	r22, 0x01	; 1
    4d46:	71 05       	cpc	r23, r1
    4d48:	a0 e8       	ldi	r26, 0x80	; 128
    4d4a:	8a 07       	cpc	r24, r26
    4d4c:	b9 46       	sbci	r27, 0x69	; 105
    4d4e:	30 f4       	brcc	.+12     	; 0x4d5c <modf+0x58>
    4d50:	9b 01       	movw	r18, r22
    4d52:	ac 01       	movw	r20, r24
    4d54:	66 27       	eor	r22, r22
    4d56:	77 27       	eor	r23, r23
    4d58:	88 27       	eor	r24, r24
    4d5a:	90 78       	andi	r25, 0x80	; 128
    4d5c:	30 96       	adiw	r30, 0x00	; 0
    4d5e:	21 f0       	breq	.+8      	; 0x4d68 <modf+0x64>
    4d60:	20 83       	st	Z, r18
    4d62:	31 83       	std	Z+1, r19	; 0x01
    4d64:	42 83       	std	Z+2, r20	; 0x02
    4d66:	53 83       	std	Z+3, r21	; 0x03
    4d68:	08 95       	ret

00004d6a <__fp_mpack>:
    4d6a:	9f 3f       	cpi	r25, 0xFF	; 255
    4d6c:	31 f0       	breq	.+12     	; 0x4d7a <__fp_mpack_finite+0xc>

00004d6e <__fp_mpack_finite>:
    4d6e:	91 50       	subi	r25, 0x01	; 1
    4d70:	20 f4       	brcc	.+8      	; 0x4d7a <__fp_mpack_finite+0xc>
    4d72:	87 95       	ror	r24
    4d74:	77 95       	ror	r23
    4d76:	67 95       	ror	r22
    4d78:	b7 95       	ror	r27
    4d7a:	88 0f       	add	r24, r24
    4d7c:	91 1d       	adc	r25, r1
    4d7e:	96 95       	lsr	r25
    4d80:	87 95       	ror	r24
    4d82:	97 f9       	bld	r25, 7
    4d84:	08 95       	ret

00004d86 <__udivmodsi4>:
    4d86:	a1 e2       	ldi	r26, 0x21	; 33
    4d88:	1a 2e       	mov	r1, r26
    4d8a:	aa 1b       	sub	r26, r26
    4d8c:	bb 1b       	sub	r27, r27
    4d8e:	fd 01       	movw	r30, r26
    4d90:	0d c0       	rjmp	.+26     	; 0x4dac <__udivmodsi4_ep>

00004d92 <__udivmodsi4_loop>:
    4d92:	aa 1f       	adc	r26, r26
    4d94:	bb 1f       	adc	r27, r27
    4d96:	ee 1f       	adc	r30, r30
    4d98:	ff 1f       	adc	r31, r31
    4d9a:	a2 17       	cp	r26, r18
    4d9c:	b3 07       	cpc	r27, r19
    4d9e:	e4 07       	cpc	r30, r20
    4da0:	f5 07       	cpc	r31, r21
    4da2:	20 f0       	brcs	.+8      	; 0x4dac <__udivmodsi4_ep>
    4da4:	a2 1b       	sub	r26, r18
    4da6:	b3 0b       	sbc	r27, r19
    4da8:	e4 0b       	sbc	r30, r20
    4daa:	f5 0b       	sbc	r31, r21

00004dac <__udivmodsi4_ep>:
    4dac:	66 1f       	adc	r22, r22
    4dae:	77 1f       	adc	r23, r23
    4db0:	88 1f       	adc	r24, r24
    4db2:	99 1f       	adc	r25, r25
    4db4:	1a 94       	dec	r1
    4db6:	69 f7       	brne	.-38     	; 0x4d92 <__udivmodsi4_loop>
    4db8:	60 95       	com	r22
    4dba:	70 95       	com	r23
    4dbc:	80 95       	com	r24
    4dbe:	90 95       	com	r25
    4dc0:	9b 01       	movw	r18, r22
    4dc2:	ac 01       	movw	r20, r24
    4dc4:	bd 01       	movw	r22, r26
    4dc6:	cf 01       	movw	r24, r30
    4dc8:	08 95       	ret

00004dca <__tablejump2__>:
    4dca:	ee 0f       	add	r30, r30
    4dcc:	ff 1f       	adc	r31, r31
    4dce:	88 1f       	adc	r24, r24
    4dd0:	8b bf       	out	0x3b, r24	; 59
    4dd2:	07 90       	elpm	r0, Z+
    4dd4:	f6 91       	elpm	r31, Z
    4dd6:	e0 2d       	mov	r30, r0
    4dd8:	19 94       	eijmp

00004dda <__muluhisi3>:
    4dda:	09 d0       	rcall	.+18     	; 0x4dee <__umulhisi3>
    4ddc:	a5 9f       	mul	r26, r21
    4dde:	90 0d       	add	r25, r0
    4de0:	b4 9f       	mul	r27, r20
    4de2:	90 0d       	add	r25, r0
    4de4:	a4 9f       	mul	r26, r20
    4de6:	80 0d       	add	r24, r0
    4de8:	91 1d       	adc	r25, r1
    4dea:	11 24       	eor	r1, r1
    4dec:	08 95       	ret

00004dee <__umulhisi3>:
    4dee:	a2 9f       	mul	r26, r18
    4df0:	b0 01       	movw	r22, r0
    4df2:	b3 9f       	mul	r27, r19
    4df4:	c0 01       	movw	r24, r0
    4df6:	a3 9f       	mul	r26, r19
    4df8:	70 0d       	add	r23, r0
    4dfa:	81 1d       	adc	r24, r1
    4dfc:	11 24       	eor	r1, r1
    4dfe:	91 1d       	adc	r25, r1
    4e00:	b2 9f       	mul	r27, r18
    4e02:	70 0d       	add	r23, r0
    4e04:	81 1d       	adc	r24, r1
    4e06:	11 24       	eor	r1, r1
    4e08:	91 1d       	adc	r25, r1
    4e0a:	08 95       	ret

00004e0c <dtostrf>:
    4e0c:	ef 92       	push	r14
    4e0e:	0f 93       	push	r16
    4e10:	1f 93       	push	r17
    4e12:	cf 93       	push	r28
    4e14:	df 93       	push	r29
    4e16:	e8 01       	movw	r28, r16
    4e18:	47 fd       	sbrc	r20, 7
    4e1a:	02 c0       	rjmp	.+4      	; 0x4e20 <dtostrf+0x14>
    4e1c:	34 e0       	ldi	r19, 0x04	; 4
    4e1e:	01 c0       	rjmp	.+2      	; 0x4e22 <dtostrf+0x16>
    4e20:	34 e1       	ldi	r19, 0x14	; 20
    4e22:	04 2e       	mov	r0, r20
    4e24:	00 0c       	add	r0, r0
    4e26:	55 0b       	sbc	r21, r21
    4e28:	57 ff       	sbrs	r21, 7
    4e2a:	03 c0       	rjmp	.+6      	; 0x4e32 <dtostrf+0x26>
    4e2c:	51 95       	neg	r21
    4e2e:	41 95       	neg	r20
    4e30:	51 09       	sbc	r21, r1
    4e32:	e3 2e       	mov	r14, r19
    4e34:	02 2f       	mov	r16, r18
    4e36:	24 2f       	mov	r18, r20
    4e38:	ae 01       	movw	r20, r28
    4e3a:	39 d2       	rcall	.+1138   	; 0x52ae <dtoa_prf>
    4e3c:	ce 01       	movw	r24, r28
    4e3e:	df 91       	pop	r29
    4e40:	cf 91       	pop	r28
    4e42:	1f 91       	pop	r17
    4e44:	0f 91       	pop	r16
    4e46:	ef 90       	pop	r14
    4e48:	08 95       	ret

00004e4a <memset>:
    4e4a:	dc 01       	movw	r26, r24
    4e4c:	01 c0       	rjmp	.+2      	; 0x4e50 <memset+0x6>
    4e4e:	6d 93       	st	X+, r22
    4e50:	41 50       	subi	r20, 0x01	; 1
    4e52:	50 40       	sbci	r21, 0x00	; 0
    4e54:	e0 f7       	brcc	.-8      	; 0x4e4e <memset+0x4>
    4e56:	08 95       	ret

00004e58 <sprintf>:
    4e58:	0f 93       	push	r16
    4e5a:	1f 93       	push	r17
    4e5c:	cf 93       	push	r28
    4e5e:	df 93       	push	r29
    4e60:	cd b7       	in	r28, 0x3d	; 61
    4e62:	de b7       	in	r29, 0x3e	; 62
    4e64:	2e 97       	sbiw	r28, 0x0e	; 14
    4e66:	0f b6       	in	r0, 0x3f	; 63
    4e68:	f8 94       	cli
    4e6a:	de bf       	out	0x3e, r29	; 62
    4e6c:	0f be       	out	0x3f, r0	; 63
    4e6e:	cd bf       	out	0x3d, r28	; 61
    4e70:	0e 89       	ldd	r16, Y+22	; 0x16
    4e72:	1f 89       	ldd	r17, Y+23	; 0x17
    4e74:	86 e0       	ldi	r24, 0x06	; 6
    4e76:	8c 83       	std	Y+4, r24	; 0x04
    4e78:	1a 83       	std	Y+2, r17	; 0x02
    4e7a:	09 83       	std	Y+1, r16	; 0x01
    4e7c:	8f ef       	ldi	r24, 0xFF	; 255
    4e7e:	9f e7       	ldi	r25, 0x7F	; 127
    4e80:	9e 83       	std	Y+6, r25	; 0x06
    4e82:	8d 83       	std	Y+5, r24	; 0x05
    4e84:	ae 01       	movw	r20, r28
    4e86:	46 5e       	subi	r20, 0xE6	; 230
    4e88:	5f 4f       	sbci	r21, 0xFF	; 255
    4e8a:	68 8d       	ldd	r22, Y+24	; 0x18
    4e8c:	79 8d       	ldd	r23, Y+25	; 0x19
    4e8e:	ce 01       	movw	r24, r28
    4e90:	01 96       	adiw	r24, 0x01	; 1
    4e92:	10 d0       	rcall	.+32     	; 0x4eb4 <vfprintf>
    4e94:	ef 81       	ldd	r30, Y+7	; 0x07
    4e96:	f8 85       	ldd	r31, Y+8	; 0x08
    4e98:	e0 0f       	add	r30, r16
    4e9a:	f1 1f       	adc	r31, r17
    4e9c:	10 82       	st	Z, r1
    4e9e:	2e 96       	adiw	r28, 0x0e	; 14
    4ea0:	0f b6       	in	r0, 0x3f	; 63
    4ea2:	f8 94       	cli
    4ea4:	de bf       	out	0x3e, r29	; 62
    4ea6:	0f be       	out	0x3f, r0	; 63
    4ea8:	cd bf       	out	0x3d, r28	; 61
    4eaa:	df 91       	pop	r29
    4eac:	cf 91       	pop	r28
    4eae:	1f 91       	pop	r17
    4eb0:	0f 91       	pop	r16
    4eb2:	08 95       	ret

00004eb4 <vfprintf>:
    4eb4:	2f 92       	push	r2
    4eb6:	3f 92       	push	r3
    4eb8:	4f 92       	push	r4
    4eba:	5f 92       	push	r5
    4ebc:	6f 92       	push	r6
    4ebe:	7f 92       	push	r7
    4ec0:	8f 92       	push	r8
    4ec2:	9f 92       	push	r9
    4ec4:	af 92       	push	r10
    4ec6:	bf 92       	push	r11
    4ec8:	cf 92       	push	r12
    4eca:	df 92       	push	r13
    4ecc:	ef 92       	push	r14
    4ece:	ff 92       	push	r15
    4ed0:	0f 93       	push	r16
    4ed2:	1f 93       	push	r17
    4ed4:	cf 93       	push	r28
    4ed6:	df 93       	push	r29
    4ed8:	cd b7       	in	r28, 0x3d	; 61
    4eda:	de b7       	in	r29, 0x3e	; 62
    4edc:	2b 97       	sbiw	r28, 0x0b	; 11
    4ede:	0f b6       	in	r0, 0x3f	; 63
    4ee0:	f8 94       	cli
    4ee2:	de bf       	out	0x3e, r29	; 62
    4ee4:	0f be       	out	0x3f, r0	; 63
    4ee6:	cd bf       	out	0x3d, r28	; 61
    4ee8:	6c 01       	movw	r12, r24
    4eea:	7b 01       	movw	r14, r22
    4eec:	8a 01       	movw	r16, r20
    4eee:	fc 01       	movw	r30, r24
    4ef0:	17 82       	std	Z+7, r1	; 0x07
    4ef2:	16 82       	std	Z+6, r1	; 0x06
    4ef4:	83 81       	ldd	r24, Z+3	; 0x03
    4ef6:	81 ff       	sbrs	r24, 1
    4ef8:	bf c1       	rjmp	.+894    	; 0x5278 <vfprintf+0x3c4>
    4efa:	ce 01       	movw	r24, r28
    4efc:	01 96       	adiw	r24, 0x01	; 1
    4efe:	3c 01       	movw	r6, r24
    4f00:	f6 01       	movw	r30, r12
    4f02:	93 81       	ldd	r25, Z+3	; 0x03
    4f04:	f7 01       	movw	r30, r14
    4f06:	93 fd       	sbrc	r25, 3
    4f08:	85 91       	lpm	r24, Z+
    4f0a:	93 ff       	sbrs	r25, 3
    4f0c:	81 91       	ld	r24, Z+
    4f0e:	7f 01       	movw	r14, r30
    4f10:	88 23       	and	r24, r24
    4f12:	09 f4       	brne	.+2      	; 0x4f16 <vfprintf+0x62>
    4f14:	ad c1       	rjmp	.+858    	; 0x5270 <vfprintf+0x3bc>
    4f16:	85 32       	cpi	r24, 0x25	; 37
    4f18:	39 f4       	brne	.+14     	; 0x4f28 <vfprintf+0x74>
    4f1a:	93 fd       	sbrc	r25, 3
    4f1c:	85 91       	lpm	r24, Z+
    4f1e:	93 ff       	sbrs	r25, 3
    4f20:	81 91       	ld	r24, Z+
    4f22:	7f 01       	movw	r14, r30
    4f24:	85 32       	cpi	r24, 0x25	; 37
    4f26:	21 f4       	brne	.+8      	; 0x4f30 <vfprintf+0x7c>
    4f28:	b6 01       	movw	r22, r12
    4f2a:	90 e0       	ldi	r25, 0x00	; 0
    4f2c:	24 d4       	rcall	.+2120   	; 0x5776 <fputc>
    4f2e:	e8 cf       	rjmp	.-48     	; 0x4f00 <vfprintf+0x4c>
    4f30:	91 2c       	mov	r9, r1
    4f32:	21 2c       	mov	r2, r1
    4f34:	31 2c       	mov	r3, r1
    4f36:	ff e1       	ldi	r31, 0x1F	; 31
    4f38:	f3 15       	cp	r31, r3
    4f3a:	d8 f0       	brcs	.+54     	; 0x4f72 <vfprintf+0xbe>
    4f3c:	8b 32       	cpi	r24, 0x2B	; 43
    4f3e:	79 f0       	breq	.+30     	; 0x4f5e <vfprintf+0xaa>
    4f40:	38 f4       	brcc	.+14     	; 0x4f50 <vfprintf+0x9c>
    4f42:	80 32       	cpi	r24, 0x20	; 32
    4f44:	79 f0       	breq	.+30     	; 0x4f64 <vfprintf+0xb0>
    4f46:	83 32       	cpi	r24, 0x23	; 35
    4f48:	a1 f4       	brne	.+40     	; 0x4f72 <vfprintf+0xbe>
    4f4a:	23 2d       	mov	r18, r3
    4f4c:	20 61       	ori	r18, 0x10	; 16
    4f4e:	1d c0       	rjmp	.+58     	; 0x4f8a <vfprintf+0xd6>
    4f50:	8d 32       	cpi	r24, 0x2D	; 45
    4f52:	61 f0       	breq	.+24     	; 0x4f6c <vfprintf+0xb8>
    4f54:	80 33       	cpi	r24, 0x30	; 48
    4f56:	69 f4       	brne	.+26     	; 0x4f72 <vfprintf+0xbe>
    4f58:	23 2d       	mov	r18, r3
    4f5a:	21 60       	ori	r18, 0x01	; 1
    4f5c:	16 c0       	rjmp	.+44     	; 0x4f8a <vfprintf+0xd6>
    4f5e:	83 2d       	mov	r24, r3
    4f60:	82 60       	ori	r24, 0x02	; 2
    4f62:	38 2e       	mov	r3, r24
    4f64:	e3 2d       	mov	r30, r3
    4f66:	e4 60       	ori	r30, 0x04	; 4
    4f68:	3e 2e       	mov	r3, r30
    4f6a:	2a c0       	rjmp	.+84     	; 0x4fc0 <vfprintf+0x10c>
    4f6c:	f3 2d       	mov	r31, r3
    4f6e:	f8 60       	ori	r31, 0x08	; 8
    4f70:	1d c0       	rjmp	.+58     	; 0x4fac <vfprintf+0xf8>
    4f72:	37 fc       	sbrc	r3, 7
    4f74:	2d c0       	rjmp	.+90     	; 0x4fd0 <vfprintf+0x11c>
    4f76:	20 ed       	ldi	r18, 0xD0	; 208
    4f78:	28 0f       	add	r18, r24
    4f7a:	2a 30       	cpi	r18, 0x0A	; 10
    4f7c:	40 f0       	brcs	.+16     	; 0x4f8e <vfprintf+0xda>
    4f7e:	8e 32       	cpi	r24, 0x2E	; 46
    4f80:	b9 f4       	brne	.+46     	; 0x4fb0 <vfprintf+0xfc>
    4f82:	36 fc       	sbrc	r3, 6
    4f84:	75 c1       	rjmp	.+746    	; 0x5270 <vfprintf+0x3bc>
    4f86:	23 2d       	mov	r18, r3
    4f88:	20 64       	ori	r18, 0x40	; 64
    4f8a:	32 2e       	mov	r3, r18
    4f8c:	19 c0       	rjmp	.+50     	; 0x4fc0 <vfprintf+0x10c>
    4f8e:	36 fe       	sbrs	r3, 6
    4f90:	06 c0       	rjmp	.+12     	; 0x4f9e <vfprintf+0xea>
    4f92:	8a e0       	ldi	r24, 0x0A	; 10
    4f94:	98 9e       	mul	r9, r24
    4f96:	20 0d       	add	r18, r0
    4f98:	11 24       	eor	r1, r1
    4f9a:	92 2e       	mov	r9, r18
    4f9c:	11 c0       	rjmp	.+34     	; 0x4fc0 <vfprintf+0x10c>
    4f9e:	ea e0       	ldi	r30, 0x0A	; 10
    4fa0:	2e 9e       	mul	r2, r30
    4fa2:	20 0d       	add	r18, r0
    4fa4:	11 24       	eor	r1, r1
    4fa6:	22 2e       	mov	r2, r18
    4fa8:	f3 2d       	mov	r31, r3
    4faa:	f0 62       	ori	r31, 0x20	; 32
    4fac:	3f 2e       	mov	r3, r31
    4fae:	08 c0       	rjmp	.+16     	; 0x4fc0 <vfprintf+0x10c>
    4fb0:	8c 36       	cpi	r24, 0x6C	; 108
    4fb2:	21 f4       	brne	.+8      	; 0x4fbc <vfprintf+0x108>
    4fb4:	83 2d       	mov	r24, r3
    4fb6:	80 68       	ori	r24, 0x80	; 128
    4fb8:	38 2e       	mov	r3, r24
    4fba:	02 c0       	rjmp	.+4      	; 0x4fc0 <vfprintf+0x10c>
    4fbc:	88 36       	cpi	r24, 0x68	; 104
    4fbe:	41 f4       	brne	.+16     	; 0x4fd0 <vfprintf+0x11c>
    4fc0:	f7 01       	movw	r30, r14
    4fc2:	93 fd       	sbrc	r25, 3
    4fc4:	85 91       	lpm	r24, Z+
    4fc6:	93 ff       	sbrs	r25, 3
    4fc8:	81 91       	ld	r24, Z+
    4fca:	7f 01       	movw	r14, r30
    4fcc:	81 11       	cpse	r24, r1
    4fce:	b3 cf       	rjmp	.-154    	; 0x4f36 <vfprintf+0x82>
    4fd0:	98 2f       	mov	r25, r24
    4fd2:	9f 7d       	andi	r25, 0xDF	; 223
    4fd4:	95 54       	subi	r25, 0x45	; 69
    4fd6:	93 30       	cpi	r25, 0x03	; 3
    4fd8:	28 f4       	brcc	.+10     	; 0x4fe4 <vfprintf+0x130>
    4fda:	0c 5f       	subi	r16, 0xFC	; 252
    4fdc:	1f 4f       	sbci	r17, 0xFF	; 255
    4fde:	9f e3       	ldi	r25, 0x3F	; 63
    4fe0:	99 83       	std	Y+1, r25	; 0x01
    4fe2:	0d c0       	rjmp	.+26     	; 0x4ffe <vfprintf+0x14a>
    4fe4:	83 36       	cpi	r24, 0x63	; 99
    4fe6:	31 f0       	breq	.+12     	; 0x4ff4 <vfprintf+0x140>
    4fe8:	83 37       	cpi	r24, 0x73	; 115
    4fea:	71 f0       	breq	.+28     	; 0x5008 <vfprintf+0x154>
    4fec:	83 35       	cpi	r24, 0x53	; 83
    4fee:	09 f0       	breq	.+2      	; 0x4ff2 <vfprintf+0x13e>
    4ff0:	55 c0       	rjmp	.+170    	; 0x509c <vfprintf+0x1e8>
    4ff2:	20 c0       	rjmp	.+64     	; 0x5034 <vfprintf+0x180>
    4ff4:	f8 01       	movw	r30, r16
    4ff6:	80 81       	ld	r24, Z
    4ff8:	89 83       	std	Y+1, r24	; 0x01
    4ffa:	0e 5f       	subi	r16, 0xFE	; 254
    4ffc:	1f 4f       	sbci	r17, 0xFF	; 255
    4ffe:	88 24       	eor	r8, r8
    5000:	83 94       	inc	r8
    5002:	91 2c       	mov	r9, r1
    5004:	53 01       	movw	r10, r6
    5006:	12 c0       	rjmp	.+36     	; 0x502c <vfprintf+0x178>
    5008:	28 01       	movw	r4, r16
    500a:	f2 e0       	ldi	r31, 0x02	; 2
    500c:	4f 0e       	add	r4, r31
    500e:	51 1c       	adc	r5, r1
    5010:	f8 01       	movw	r30, r16
    5012:	a0 80       	ld	r10, Z
    5014:	b1 80       	ldd	r11, Z+1	; 0x01
    5016:	36 fe       	sbrs	r3, 6
    5018:	03 c0       	rjmp	.+6      	; 0x5020 <vfprintf+0x16c>
    501a:	69 2d       	mov	r22, r9
    501c:	70 e0       	ldi	r23, 0x00	; 0
    501e:	02 c0       	rjmp	.+4      	; 0x5024 <vfprintf+0x170>
    5020:	6f ef       	ldi	r22, 0xFF	; 255
    5022:	7f ef       	ldi	r23, 0xFF	; 255
    5024:	c5 01       	movw	r24, r10
    5026:	9c d3       	rcall	.+1848   	; 0x5760 <strnlen>
    5028:	4c 01       	movw	r8, r24
    502a:	82 01       	movw	r16, r4
    502c:	f3 2d       	mov	r31, r3
    502e:	ff 77       	andi	r31, 0x7F	; 127
    5030:	3f 2e       	mov	r3, r31
    5032:	15 c0       	rjmp	.+42     	; 0x505e <vfprintf+0x1aa>
    5034:	28 01       	movw	r4, r16
    5036:	22 e0       	ldi	r18, 0x02	; 2
    5038:	42 0e       	add	r4, r18
    503a:	51 1c       	adc	r5, r1
    503c:	f8 01       	movw	r30, r16
    503e:	a0 80       	ld	r10, Z
    5040:	b1 80       	ldd	r11, Z+1	; 0x01
    5042:	36 fe       	sbrs	r3, 6
    5044:	03 c0       	rjmp	.+6      	; 0x504c <vfprintf+0x198>
    5046:	69 2d       	mov	r22, r9
    5048:	70 e0       	ldi	r23, 0x00	; 0
    504a:	02 c0       	rjmp	.+4      	; 0x5050 <vfprintf+0x19c>
    504c:	6f ef       	ldi	r22, 0xFF	; 255
    504e:	7f ef       	ldi	r23, 0xFF	; 255
    5050:	c5 01       	movw	r24, r10
    5052:	7b d3       	rcall	.+1782   	; 0x574a <strnlen_P>
    5054:	4c 01       	movw	r8, r24
    5056:	f3 2d       	mov	r31, r3
    5058:	f0 68       	ori	r31, 0x80	; 128
    505a:	3f 2e       	mov	r3, r31
    505c:	82 01       	movw	r16, r4
    505e:	33 fc       	sbrc	r3, 3
    5060:	19 c0       	rjmp	.+50     	; 0x5094 <vfprintf+0x1e0>
    5062:	82 2d       	mov	r24, r2
    5064:	90 e0       	ldi	r25, 0x00	; 0
    5066:	88 16       	cp	r8, r24
    5068:	99 06       	cpc	r9, r25
    506a:	a0 f4       	brcc	.+40     	; 0x5094 <vfprintf+0x1e0>
    506c:	b6 01       	movw	r22, r12
    506e:	80 e2       	ldi	r24, 0x20	; 32
    5070:	90 e0       	ldi	r25, 0x00	; 0
    5072:	81 d3       	rcall	.+1794   	; 0x5776 <fputc>
    5074:	2a 94       	dec	r2
    5076:	f5 cf       	rjmp	.-22     	; 0x5062 <vfprintf+0x1ae>
    5078:	f5 01       	movw	r30, r10
    507a:	37 fc       	sbrc	r3, 7
    507c:	85 91       	lpm	r24, Z+
    507e:	37 fe       	sbrs	r3, 7
    5080:	81 91       	ld	r24, Z+
    5082:	5f 01       	movw	r10, r30
    5084:	b6 01       	movw	r22, r12
    5086:	90 e0       	ldi	r25, 0x00	; 0
    5088:	76 d3       	rcall	.+1772   	; 0x5776 <fputc>
    508a:	21 10       	cpse	r2, r1
    508c:	2a 94       	dec	r2
    508e:	21 e0       	ldi	r18, 0x01	; 1
    5090:	82 1a       	sub	r8, r18
    5092:	91 08       	sbc	r9, r1
    5094:	81 14       	cp	r8, r1
    5096:	91 04       	cpc	r9, r1
    5098:	79 f7       	brne	.-34     	; 0x5078 <vfprintf+0x1c4>
    509a:	e1 c0       	rjmp	.+450    	; 0x525e <vfprintf+0x3aa>
    509c:	84 36       	cpi	r24, 0x64	; 100
    509e:	11 f0       	breq	.+4      	; 0x50a4 <vfprintf+0x1f0>
    50a0:	89 36       	cpi	r24, 0x69	; 105
    50a2:	39 f5       	brne	.+78     	; 0x50f2 <vfprintf+0x23e>
    50a4:	f8 01       	movw	r30, r16
    50a6:	37 fe       	sbrs	r3, 7
    50a8:	07 c0       	rjmp	.+14     	; 0x50b8 <vfprintf+0x204>
    50aa:	60 81       	ld	r22, Z
    50ac:	71 81       	ldd	r23, Z+1	; 0x01
    50ae:	82 81       	ldd	r24, Z+2	; 0x02
    50b0:	93 81       	ldd	r25, Z+3	; 0x03
    50b2:	0c 5f       	subi	r16, 0xFC	; 252
    50b4:	1f 4f       	sbci	r17, 0xFF	; 255
    50b6:	08 c0       	rjmp	.+16     	; 0x50c8 <vfprintf+0x214>
    50b8:	60 81       	ld	r22, Z
    50ba:	71 81       	ldd	r23, Z+1	; 0x01
    50bc:	07 2e       	mov	r0, r23
    50be:	00 0c       	add	r0, r0
    50c0:	88 0b       	sbc	r24, r24
    50c2:	99 0b       	sbc	r25, r25
    50c4:	0e 5f       	subi	r16, 0xFE	; 254
    50c6:	1f 4f       	sbci	r17, 0xFF	; 255
    50c8:	f3 2d       	mov	r31, r3
    50ca:	ff 76       	andi	r31, 0x6F	; 111
    50cc:	3f 2e       	mov	r3, r31
    50ce:	97 ff       	sbrs	r25, 7
    50d0:	09 c0       	rjmp	.+18     	; 0x50e4 <vfprintf+0x230>
    50d2:	90 95       	com	r25
    50d4:	80 95       	com	r24
    50d6:	70 95       	com	r23
    50d8:	61 95       	neg	r22
    50da:	7f 4f       	sbci	r23, 0xFF	; 255
    50dc:	8f 4f       	sbci	r24, 0xFF	; 255
    50de:	9f 4f       	sbci	r25, 0xFF	; 255
    50e0:	f0 68       	ori	r31, 0x80	; 128
    50e2:	3f 2e       	mov	r3, r31
    50e4:	2a e0       	ldi	r18, 0x0A	; 10
    50e6:	30 e0       	ldi	r19, 0x00	; 0
    50e8:	a3 01       	movw	r20, r6
    50ea:	81 d3       	rcall	.+1794   	; 0x57ee <__ultoa_invert>
    50ec:	88 2e       	mov	r8, r24
    50ee:	86 18       	sub	r8, r6
    50f0:	44 c0       	rjmp	.+136    	; 0x517a <vfprintf+0x2c6>
    50f2:	85 37       	cpi	r24, 0x75	; 117
    50f4:	31 f4       	brne	.+12     	; 0x5102 <vfprintf+0x24e>
    50f6:	23 2d       	mov	r18, r3
    50f8:	2f 7e       	andi	r18, 0xEF	; 239
    50fa:	b2 2e       	mov	r11, r18
    50fc:	2a e0       	ldi	r18, 0x0A	; 10
    50fe:	30 e0       	ldi	r19, 0x00	; 0
    5100:	25 c0       	rjmp	.+74     	; 0x514c <vfprintf+0x298>
    5102:	93 2d       	mov	r25, r3
    5104:	99 7f       	andi	r25, 0xF9	; 249
    5106:	b9 2e       	mov	r11, r25
    5108:	8f 36       	cpi	r24, 0x6F	; 111
    510a:	c1 f0       	breq	.+48     	; 0x513c <vfprintf+0x288>
    510c:	18 f4       	brcc	.+6      	; 0x5114 <vfprintf+0x260>
    510e:	88 35       	cpi	r24, 0x58	; 88
    5110:	79 f0       	breq	.+30     	; 0x5130 <vfprintf+0x27c>
    5112:	ae c0       	rjmp	.+348    	; 0x5270 <vfprintf+0x3bc>
    5114:	80 37       	cpi	r24, 0x70	; 112
    5116:	19 f0       	breq	.+6      	; 0x511e <vfprintf+0x26a>
    5118:	88 37       	cpi	r24, 0x78	; 120
    511a:	21 f0       	breq	.+8      	; 0x5124 <vfprintf+0x270>
    511c:	a9 c0       	rjmp	.+338    	; 0x5270 <vfprintf+0x3bc>
    511e:	e9 2f       	mov	r30, r25
    5120:	e0 61       	ori	r30, 0x10	; 16
    5122:	be 2e       	mov	r11, r30
    5124:	b4 fe       	sbrs	r11, 4
    5126:	0d c0       	rjmp	.+26     	; 0x5142 <vfprintf+0x28e>
    5128:	fb 2d       	mov	r31, r11
    512a:	f4 60       	ori	r31, 0x04	; 4
    512c:	bf 2e       	mov	r11, r31
    512e:	09 c0       	rjmp	.+18     	; 0x5142 <vfprintf+0x28e>
    5130:	34 fe       	sbrs	r3, 4
    5132:	0a c0       	rjmp	.+20     	; 0x5148 <vfprintf+0x294>
    5134:	29 2f       	mov	r18, r25
    5136:	26 60       	ori	r18, 0x06	; 6
    5138:	b2 2e       	mov	r11, r18
    513a:	06 c0       	rjmp	.+12     	; 0x5148 <vfprintf+0x294>
    513c:	28 e0       	ldi	r18, 0x08	; 8
    513e:	30 e0       	ldi	r19, 0x00	; 0
    5140:	05 c0       	rjmp	.+10     	; 0x514c <vfprintf+0x298>
    5142:	20 e1       	ldi	r18, 0x10	; 16
    5144:	30 e0       	ldi	r19, 0x00	; 0
    5146:	02 c0       	rjmp	.+4      	; 0x514c <vfprintf+0x298>
    5148:	20 e1       	ldi	r18, 0x10	; 16
    514a:	32 e0       	ldi	r19, 0x02	; 2
    514c:	f8 01       	movw	r30, r16
    514e:	b7 fe       	sbrs	r11, 7
    5150:	07 c0       	rjmp	.+14     	; 0x5160 <vfprintf+0x2ac>
    5152:	60 81       	ld	r22, Z
    5154:	71 81       	ldd	r23, Z+1	; 0x01
    5156:	82 81       	ldd	r24, Z+2	; 0x02
    5158:	93 81       	ldd	r25, Z+3	; 0x03
    515a:	0c 5f       	subi	r16, 0xFC	; 252
    515c:	1f 4f       	sbci	r17, 0xFF	; 255
    515e:	06 c0       	rjmp	.+12     	; 0x516c <vfprintf+0x2b8>
    5160:	60 81       	ld	r22, Z
    5162:	71 81       	ldd	r23, Z+1	; 0x01
    5164:	80 e0       	ldi	r24, 0x00	; 0
    5166:	90 e0       	ldi	r25, 0x00	; 0
    5168:	0e 5f       	subi	r16, 0xFE	; 254
    516a:	1f 4f       	sbci	r17, 0xFF	; 255
    516c:	a3 01       	movw	r20, r6
    516e:	3f d3       	rcall	.+1662   	; 0x57ee <__ultoa_invert>
    5170:	88 2e       	mov	r8, r24
    5172:	86 18       	sub	r8, r6
    5174:	fb 2d       	mov	r31, r11
    5176:	ff 77       	andi	r31, 0x7F	; 127
    5178:	3f 2e       	mov	r3, r31
    517a:	36 fe       	sbrs	r3, 6
    517c:	0d c0       	rjmp	.+26     	; 0x5198 <vfprintf+0x2e4>
    517e:	23 2d       	mov	r18, r3
    5180:	2e 7f       	andi	r18, 0xFE	; 254
    5182:	a2 2e       	mov	r10, r18
    5184:	89 14       	cp	r8, r9
    5186:	58 f4       	brcc	.+22     	; 0x519e <vfprintf+0x2ea>
    5188:	34 fe       	sbrs	r3, 4
    518a:	0b c0       	rjmp	.+22     	; 0x51a2 <vfprintf+0x2ee>
    518c:	32 fc       	sbrc	r3, 2
    518e:	09 c0       	rjmp	.+18     	; 0x51a2 <vfprintf+0x2ee>
    5190:	83 2d       	mov	r24, r3
    5192:	8e 7e       	andi	r24, 0xEE	; 238
    5194:	a8 2e       	mov	r10, r24
    5196:	05 c0       	rjmp	.+10     	; 0x51a2 <vfprintf+0x2ee>
    5198:	b8 2c       	mov	r11, r8
    519a:	a3 2c       	mov	r10, r3
    519c:	03 c0       	rjmp	.+6      	; 0x51a4 <vfprintf+0x2f0>
    519e:	b8 2c       	mov	r11, r8
    51a0:	01 c0       	rjmp	.+2      	; 0x51a4 <vfprintf+0x2f0>
    51a2:	b9 2c       	mov	r11, r9
    51a4:	a4 fe       	sbrs	r10, 4
    51a6:	0f c0       	rjmp	.+30     	; 0x51c6 <vfprintf+0x312>
    51a8:	fe 01       	movw	r30, r28
    51aa:	e8 0d       	add	r30, r8
    51ac:	f1 1d       	adc	r31, r1
    51ae:	80 81       	ld	r24, Z
    51b0:	80 33       	cpi	r24, 0x30	; 48
    51b2:	21 f4       	brne	.+8      	; 0x51bc <vfprintf+0x308>
    51b4:	9a 2d       	mov	r25, r10
    51b6:	99 7e       	andi	r25, 0xE9	; 233
    51b8:	a9 2e       	mov	r10, r25
    51ba:	09 c0       	rjmp	.+18     	; 0x51ce <vfprintf+0x31a>
    51bc:	a2 fe       	sbrs	r10, 2
    51be:	06 c0       	rjmp	.+12     	; 0x51cc <vfprintf+0x318>
    51c0:	b3 94       	inc	r11
    51c2:	b3 94       	inc	r11
    51c4:	04 c0       	rjmp	.+8      	; 0x51ce <vfprintf+0x31a>
    51c6:	8a 2d       	mov	r24, r10
    51c8:	86 78       	andi	r24, 0x86	; 134
    51ca:	09 f0       	breq	.+2      	; 0x51ce <vfprintf+0x31a>
    51cc:	b3 94       	inc	r11
    51ce:	a3 fc       	sbrc	r10, 3
    51d0:	10 c0       	rjmp	.+32     	; 0x51f2 <vfprintf+0x33e>
    51d2:	a0 fe       	sbrs	r10, 0
    51d4:	06 c0       	rjmp	.+12     	; 0x51e2 <vfprintf+0x32e>
    51d6:	b2 14       	cp	r11, r2
    51d8:	80 f4       	brcc	.+32     	; 0x51fa <vfprintf+0x346>
    51da:	28 0c       	add	r2, r8
    51dc:	92 2c       	mov	r9, r2
    51de:	9b 18       	sub	r9, r11
    51e0:	0d c0       	rjmp	.+26     	; 0x51fc <vfprintf+0x348>
    51e2:	b2 14       	cp	r11, r2
    51e4:	58 f4       	brcc	.+22     	; 0x51fc <vfprintf+0x348>
    51e6:	b6 01       	movw	r22, r12
    51e8:	80 e2       	ldi	r24, 0x20	; 32
    51ea:	90 e0       	ldi	r25, 0x00	; 0
    51ec:	c4 d2       	rcall	.+1416   	; 0x5776 <fputc>
    51ee:	b3 94       	inc	r11
    51f0:	f8 cf       	rjmp	.-16     	; 0x51e2 <vfprintf+0x32e>
    51f2:	b2 14       	cp	r11, r2
    51f4:	18 f4       	brcc	.+6      	; 0x51fc <vfprintf+0x348>
    51f6:	2b 18       	sub	r2, r11
    51f8:	02 c0       	rjmp	.+4      	; 0x51fe <vfprintf+0x34a>
    51fa:	98 2c       	mov	r9, r8
    51fc:	21 2c       	mov	r2, r1
    51fe:	a4 fe       	sbrs	r10, 4
    5200:	0f c0       	rjmp	.+30     	; 0x5220 <vfprintf+0x36c>
    5202:	b6 01       	movw	r22, r12
    5204:	80 e3       	ldi	r24, 0x30	; 48
    5206:	90 e0       	ldi	r25, 0x00	; 0
    5208:	b6 d2       	rcall	.+1388   	; 0x5776 <fputc>
    520a:	a2 fe       	sbrs	r10, 2
    520c:	16 c0       	rjmp	.+44     	; 0x523a <vfprintf+0x386>
    520e:	a1 fc       	sbrc	r10, 1
    5210:	03 c0       	rjmp	.+6      	; 0x5218 <vfprintf+0x364>
    5212:	88 e7       	ldi	r24, 0x78	; 120
    5214:	90 e0       	ldi	r25, 0x00	; 0
    5216:	02 c0       	rjmp	.+4      	; 0x521c <vfprintf+0x368>
    5218:	88 e5       	ldi	r24, 0x58	; 88
    521a:	90 e0       	ldi	r25, 0x00	; 0
    521c:	b6 01       	movw	r22, r12
    521e:	0c c0       	rjmp	.+24     	; 0x5238 <vfprintf+0x384>
    5220:	8a 2d       	mov	r24, r10
    5222:	86 78       	andi	r24, 0x86	; 134
    5224:	51 f0       	breq	.+20     	; 0x523a <vfprintf+0x386>
    5226:	a1 fe       	sbrs	r10, 1
    5228:	02 c0       	rjmp	.+4      	; 0x522e <vfprintf+0x37a>
    522a:	8b e2       	ldi	r24, 0x2B	; 43
    522c:	01 c0       	rjmp	.+2      	; 0x5230 <vfprintf+0x37c>
    522e:	80 e2       	ldi	r24, 0x20	; 32
    5230:	a7 fc       	sbrc	r10, 7
    5232:	8d e2       	ldi	r24, 0x2D	; 45
    5234:	b6 01       	movw	r22, r12
    5236:	90 e0       	ldi	r25, 0x00	; 0
    5238:	9e d2       	rcall	.+1340   	; 0x5776 <fputc>
    523a:	89 14       	cp	r8, r9
    523c:	30 f4       	brcc	.+12     	; 0x524a <vfprintf+0x396>
    523e:	b6 01       	movw	r22, r12
    5240:	80 e3       	ldi	r24, 0x30	; 48
    5242:	90 e0       	ldi	r25, 0x00	; 0
    5244:	98 d2       	rcall	.+1328   	; 0x5776 <fputc>
    5246:	9a 94       	dec	r9
    5248:	f8 cf       	rjmp	.-16     	; 0x523a <vfprintf+0x386>
    524a:	8a 94       	dec	r8
    524c:	f3 01       	movw	r30, r6
    524e:	e8 0d       	add	r30, r8
    5250:	f1 1d       	adc	r31, r1
    5252:	80 81       	ld	r24, Z
    5254:	b6 01       	movw	r22, r12
    5256:	90 e0       	ldi	r25, 0x00	; 0
    5258:	8e d2       	rcall	.+1308   	; 0x5776 <fputc>
    525a:	81 10       	cpse	r8, r1
    525c:	f6 cf       	rjmp	.-20     	; 0x524a <vfprintf+0x396>
    525e:	22 20       	and	r2, r2
    5260:	09 f4       	brne	.+2      	; 0x5264 <vfprintf+0x3b0>
    5262:	4e ce       	rjmp	.-868    	; 0x4f00 <vfprintf+0x4c>
    5264:	b6 01       	movw	r22, r12
    5266:	80 e2       	ldi	r24, 0x20	; 32
    5268:	90 e0       	ldi	r25, 0x00	; 0
    526a:	85 d2       	rcall	.+1290   	; 0x5776 <fputc>
    526c:	2a 94       	dec	r2
    526e:	f7 cf       	rjmp	.-18     	; 0x525e <vfprintf+0x3aa>
    5270:	f6 01       	movw	r30, r12
    5272:	86 81       	ldd	r24, Z+6	; 0x06
    5274:	97 81       	ldd	r25, Z+7	; 0x07
    5276:	02 c0       	rjmp	.+4      	; 0x527c <vfprintf+0x3c8>
    5278:	8f ef       	ldi	r24, 0xFF	; 255
    527a:	9f ef       	ldi	r25, 0xFF	; 255
    527c:	2b 96       	adiw	r28, 0x0b	; 11
    527e:	0f b6       	in	r0, 0x3f	; 63
    5280:	f8 94       	cli
    5282:	de bf       	out	0x3e, r29	; 62
    5284:	0f be       	out	0x3f, r0	; 63
    5286:	cd bf       	out	0x3d, r28	; 61
    5288:	df 91       	pop	r29
    528a:	cf 91       	pop	r28
    528c:	1f 91       	pop	r17
    528e:	0f 91       	pop	r16
    5290:	ff 90       	pop	r15
    5292:	ef 90       	pop	r14
    5294:	df 90       	pop	r13
    5296:	cf 90       	pop	r12
    5298:	bf 90       	pop	r11
    529a:	af 90       	pop	r10
    529c:	9f 90       	pop	r9
    529e:	8f 90       	pop	r8
    52a0:	7f 90       	pop	r7
    52a2:	6f 90       	pop	r6
    52a4:	5f 90       	pop	r5
    52a6:	4f 90       	pop	r4
    52a8:	3f 90       	pop	r3
    52aa:	2f 90       	pop	r2
    52ac:	08 95       	ret

000052ae <dtoa_prf>:
    52ae:	8f 92       	push	r8
    52b0:	9f 92       	push	r9
    52b2:	af 92       	push	r10
    52b4:	bf 92       	push	r11
    52b6:	cf 92       	push	r12
    52b8:	df 92       	push	r13
    52ba:	ef 92       	push	r14
    52bc:	ff 92       	push	r15
    52be:	0f 93       	push	r16
    52c0:	1f 93       	push	r17
    52c2:	cf 93       	push	r28
    52c4:	df 93       	push	r29
    52c6:	cd b7       	in	r28, 0x3d	; 61
    52c8:	de b7       	in	r29, 0x3e	; 62
    52ca:	29 97       	sbiw	r28, 0x09	; 9
    52cc:	0f b6       	in	r0, 0x3f	; 63
    52ce:	f8 94       	cli
    52d0:	de bf       	out	0x3e, r29	; 62
    52d2:	0f be       	out	0x3f, r0	; 63
    52d4:	cd bf       	out	0x3d, r28	; 61
    52d6:	6a 01       	movw	r12, r20
    52d8:	12 2f       	mov	r17, r18
    52da:	b0 2e       	mov	r11, r16
    52dc:	2b e3       	ldi	r18, 0x3B	; 59
    52de:	20 17       	cp	r18, r16
    52e0:	20 f0       	brcs	.+8      	; 0x52ea <dtoa_prf+0x3c>
    52e2:	ff 24       	eor	r15, r15
    52e4:	f3 94       	inc	r15
    52e6:	f0 0e       	add	r15, r16
    52e8:	02 c0       	rjmp	.+4      	; 0x52ee <dtoa_prf+0x40>
    52ea:	2c e3       	ldi	r18, 0x3C	; 60
    52ec:	f2 2e       	mov	r15, r18
    52ee:	0f 2d       	mov	r16, r15
    52f0:	27 e0       	ldi	r18, 0x07	; 7
    52f2:	ae 01       	movw	r20, r28
    52f4:	4f 5f       	subi	r20, 0xFF	; 255
    52f6:	5f 4f       	sbci	r21, 0xFF	; 255
    52f8:	50 d1       	rcall	.+672    	; 0x559a <__ftoa_engine>
    52fa:	bc 01       	movw	r22, r24
    52fc:	49 81       	ldd	r20, Y+1	; 0x01
    52fe:	84 2f       	mov	r24, r20
    5300:	89 70       	andi	r24, 0x09	; 9
    5302:	81 30       	cpi	r24, 0x01	; 1
    5304:	31 f0       	breq	.+12     	; 0x5312 <dtoa_prf+0x64>
    5306:	e1 fc       	sbrc	r14, 1
    5308:	06 c0       	rjmp	.+12     	; 0x5316 <dtoa_prf+0x68>
    530a:	e0 fe       	sbrs	r14, 0
    530c:	06 c0       	rjmp	.+12     	; 0x531a <dtoa_prf+0x6c>
    530e:	90 e2       	ldi	r25, 0x20	; 32
    5310:	05 c0       	rjmp	.+10     	; 0x531c <dtoa_prf+0x6e>
    5312:	9d e2       	ldi	r25, 0x2D	; 45
    5314:	03 c0       	rjmp	.+6      	; 0x531c <dtoa_prf+0x6e>
    5316:	9b e2       	ldi	r25, 0x2B	; 43
    5318:	01 c0       	rjmp	.+2      	; 0x531c <dtoa_prf+0x6e>
    531a:	90 e0       	ldi	r25, 0x00	; 0
    531c:	5e 2d       	mov	r21, r14
    531e:	50 71       	andi	r21, 0x10	; 16
    5320:	43 ff       	sbrs	r20, 3
    5322:	3c c0       	rjmp	.+120    	; 0x539c <dtoa_prf+0xee>
    5324:	91 11       	cpse	r25, r1
    5326:	02 c0       	rjmp	.+4      	; 0x532c <dtoa_prf+0x7e>
    5328:	83 e0       	ldi	r24, 0x03	; 3
    532a:	01 c0       	rjmp	.+2      	; 0x532e <dtoa_prf+0x80>
    532c:	84 e0       	ldi	r24, 0x04	; 4
    532e:	81 17       	cp	r24, r17
    5330:	18 f4       	brcc	.+6      	; 0x5338 <dtoa_prf+0x8a>
    5332:	21 2f       	mov	r18, r17
    5334:	28 1b       	sub	r18, r24
    5336:	01 c0       	rjmp	.+2      	; 0x533a <dtoa_prf+0x8c>
    5338:	20 e0       	ldi	r18, 0x00	; 0
    533a:	51 11       	cpse	r21, r1
    533c:	0b c0       	rjmp	.+22     	; 0x5354 <dtoa_prf+0xa6>
    533e:	f6 01       	movw	r30, r12
    5340:	82 2f       	mov	r24, r18
    5342:	30 e2       	ldi	r19, 0x20	; 32
    5344:	88 23       	and	r24, r24
    5346:	19 f0       	breq	.+6      	; 0x534e <dtoa_prf+0xa0>
    5348:	31 93       	st	Z+, r19
    534a:	81 50       	subi	r24, 0x01	; 1
    534c:	fb cf       	rjmp	.-10     	; 0x5344 <dtoa_prf+0x96>
    534e:	c2 0e       	add	r12, r18
    5350:	d1 1c       	adc	r13, r1
    5352:	20 e0       	ldi	r18, 0x00	; 0
    5354:	99 23       	and	r25, r25
    5356:	29 f0       	breq	.+10     	; 0x5362 <dtoa_prf+0xb4>
    5358:	d6 01       	movw	r26, r12
    535a:	9c 93       	st	X, r25
    535c:	f6 01       	movw	r30, r12
    535e:	31 96       	adiw	r30, 0x01	; 1
    5360:	6f 01       	movw	r12, r30
    5362:	c6 01       	movw	r24, r12
    5364:	03 96       	adiw	r24, 0x03	; 3
    5366:	e2 fe       	sbrs	r14, 2
    5368:	0a c0       	rjmp	.+20     	; 0x537e <dtoa_prf+0xd0>
    536a:	3e e4       	ldi	r19, 0x4E	; 78
    536c:	d6 01       	movw	r26, r12
    536e:	3c 93       	st	X, r19
    5370:	41 e4       	ldi	r20, 0x41	; 65
    5372:	11 96       	adiw	r26, 0x01	; 1
    5374:	4c 93       	st	X, r20
    5376:	11 97       	sbiw	r26, 0x01	; 1
    5378:	12 96       	adiw	r26, 0x02	; 2
    537a:	3c 93       	st	X, r19
    537c:	06 c0       	rjmp	.+12     	; 0x538a <dtoa_prf+0xdc>
    537e:	3e e6       	ldi	r19, 0x6E	; 110
    5380:	f6 01       	movw	r30, r12
    5382:	30 83       	st	Z, r19
    5384:	41 e6       	ldi	r20, 0x61	; 97
    5386:	41 83       	std	Z+1, r20	; 0x01
    5388:	32 83       	std	Z+2, r19	; 0x02
    538a:	fc 01       	movw	r30, r24
    538c:	32 2f       	mov	r19, r18
    538e:	40 e2       	ldi	r20, 0x20	; 32
    5390:	33 23       	and	r19, r19
    5392:	09 f4       	brne	.+2      	; 0x5396 <dtoa_prf+0xe8>
    5394:	42 c0       	rjmp	.+132    	; 0x541a <dtoa_prf+0x16c>
    5396:	41 93       	st	Z+, r20
    5398:	31 50       	subi	r19, 0x01	; 1
    539a:	fa cf       	rjmp	.-12     	; 0x5390 <dtoa_prf+0xe2>
    539c:	42 ff       	sbrs	r20, 2
    539e:	44 c0       	rjmp	.+136    	; 0x5428 <dtoa_prf+0x17a>
    53a0:	91 11       	cpse	r25, r1
    53a2:	02 c0       	rjmp	.+4      	; 0x53a8 <dtoa_prf+0xfa>
    53a4:	83 e0       	ldi	r24, 0x03	; 3
    53a6:	01 c0       	rjmp	.+2      	; 0x53aa <dtoa_prf+0xfc>
    53a8:	84 e0       	ldi	r24, 0x04	; 4
    53aa:	81 17       	cp	r24, r17
    53ac:	18 f4       	brcc	.+6      	; 0x53b4 <dtoa_prf+0x106>
    53ae:	21 2f       	mov	r18, r17
    53b0:	28 1b       	sub	r18, r24
    53b2:	01 c0       	rjmp	.+2      	; 0x53b6 <dtoa_prf+0x108>
    53b4:	20 e0       	ldi	r18, 0x00	; 0
    53b6:	51 11       	cpse	r21, r1
    53b8:	0b c0       	rjmp	.+22     	; 0x53d0 <dtoa_prf+0x122>
    53ba:	f6 01       	movw	r30, r12
    53bc:	82 2f       	mov	r24, r18
    53be:	30 e2       	ldi	r19, 0x20	; 32
    53c0:	88 23       	and	r24, r24
    53c2:	19 f0       	breq	.+6      	; 0x53ca <dtoa_prf+0x11c>
    53c4:	31 93       	st	Z+, r19
    53c6:	81 50       	subi	r24, 0x01	; 1
    53c8:	fb cf       	rjmp	.-10     	; 0x53c0 <dtoa_prf+0x112>
    53ca:	c2 0e       	add	r12, r18
    53cc:	d1 1c       	adc	r13, r1
    53ce:	20 e0       	ldi	r18, 0x00	; 0
    53d0:	99 23       	and	r25, r25
    53d2:	29 f0       	breq	.+10     	; 0x53de <dtoa_prf+0x130>
    53d4:	d6 01       	movw	r26, r12
    53d6:	9c 93       	st	X, r25
    53d8:	f6 01       	movw	r30, r12
    53da:	31 96       	adiw	r30, 0x01	; 1
    53dc:	6f 01       	movw	r12, r30
    53de:	c6 01       	movw	r24, r12
    53e0:	03 96       	adiw	r24, 0x03	; 3
    53e2:	e2 fe       	sbrs	r14, 2
    53e4:	0b c0       	rjmp	.+22     	; 0x53fc <dtoa_prf+0x14e>
    53e6:	39 e4       	ldi	r19, 0x49	; 73
    53e8:	d6 01       	movw	r26, r12
    53ea:	3c 93       	st	X, r19
    53ec:	3e e4       	ldi	r19, 0x4E	; 78
    53ee:	11 96       	adiw	r26, 0x01	; 1
    53f0:	3c 93       	st	X, r19
    53f2:	11 97       	sbiw	r26, 0x01	; 1
    53f4:	36 e4       	ldi	r19, 0x46	; 70
    53f6:	12 96       	adiw	r26, 0x02	; 2
    53f8:	3c 93       	st	X, r19
    53fa:	07 c0       	rjmp	.+14     	; 0x540a <dtoa_prf+0x15c>
    53fc:	39 e6       	ldi	r19, 0x69	; 105
    53fe:	f6 01       	movw	r30, r12
    5400:	30 83       	st	Z, r19
    5402:	3e e6       	ldi	r19, 0x6E	; 110
    5404:	31 83       	std	Z+1, r19	; 0x01
    5406:	36 e6       	ldi	r19, 0x66	; 102
    5408:	32 83       	std	Z+2, r19	; 0x02
    540a:	fc 01       	movw	r30, r24
    540c:	32 2f       	mov	r19, r18
    540e:	40 e2       	ldi	r20, 0x20	; 32
    5410:	33 23       	and	r19, r19
    5412:	19 f0       	breq	.+6      	; 0x541a <dtoa_prf+0x16c>
    5414:	41 93       	st	Z+, r20
    5416:	31 50       	subi	r19, 0x01	; 1
    5418:	fb cf       	rjmp	.-10     	; 0x5410 <dtoa_prf+0x162>
    541a:	fc 01       	movw	r30, r24
    541c:	e2 0f       	add	r30, r18
    541e:	f1 1d       	adc	r31, r1
    5420:	10 82       	st	Z, r1
    5422:	8e ef       	ldi	r24, 0xFE	; 254
    5424:	9f ef       	ldi	r25, 0xFF	; 255
    5426:	a6 c0       	rjmp	.+332    	; 0x5574 <dtoa_prf+0x2c6>
    5428:	21 e0       	ldi	r18, 0x01	; 1
    542a:	30 e0       	ldi	r19, 0x00	; 0
    542c:	91 11       	cpse	r25, r1
    542e:	02 c0       	rjmp	.+4      	; 0x5434 <dtoa_prf+0x186>
    5430:	20 e0       	ldi	r18, 0x00	; 0
    5432:	30 e0       	ldi	r19, 0x00	; 0
    5434:	16 16       	cp	r1, r22
    5436:	17 06       	cpc	r1, r23
    5438:	1c f4       	brge	.+6      	; 0x5440 <dtoa_prf+0x192>
    543a:	fb 01       	movw	r30, r22
    543c:	31 96       	adiw	r30, 0x01	; 1
    543e:	02 c0       	rjmp	.+4      	; 0x5444 <dtoa_prf+0x196>
    5440:	e1 e0       	ldi	r30, 0x01	; 1
    5442:	f0 e0       	ldi	r31, 0x00	; 0
    5444:	2e 0f       	add	r18, r30
    5446:	3f 1f       	adc	r19, r31
    5448:	bb 20       	and	r11, r11
    544a:	21 f0       	breq	.+8      	; 0x5454 <dtoa_prf+0x1a6>
    544c:	eb 2d       	mov	r30, r11
    544e:	f0 e0       	ldi	r31, 0x00	; 0
    5450:	31 96       	adiw	r30, 0x01	; 1
    5452:	02 c0       	rjmp	.+4      	; 0x5458 <dtoa_prf+0x1aa>
    5454:	e0 e0       	ldi	r30, 0x00	; 0
    5456:	f0 e0       	ldi	r31, 0x00	; 0
    5458:	2e 0f       	add	r18, r30
    545a:	3f 1f       	adc	r19, r31
    545c:	e1 2f       	mov	r30, r17
    545e:	f0 e0       	ldi	r31, 0x00	; 0
    5460:	2e 17       	cp	r18, r30
    5462:	3f 07       	cpc	r19, r31
    5464:	1c f4       	brge	.+6      	; 0x546c <dtoa_prf+0x1be>
    5466:	12 1b       	sub	r17, r18
    5468:	21 2f       	mov	r18, r17
    546a:	01 c0       	rjmp	.+2      	; 0x546e <dtoa_prf+0x1c0>
    546c:	20 e0       	ldi	r18, 0x00	; 0
    546e:	8e 2d       	mov	r24, r14
    5470:	88 71       	andi	r24, 0x18	; 24
    5472:	59 f4       	brne	.+22     	; 0x548a <dtoa_prf+0x1dc>
    5474:	f6 01       	movw	r30, r12
    5476:	82 2f       	mov	r24, r18
    5478:	30 e2       	ldi	r19, 0x20	; 32
    547a:	88 23       	and	r24, r24
    547c:	19 f0       	breq	.+6      	; 0x5484 <dtoa_prf+0x1d6>
    547e:	31 93       	st	Z+, r19
    5480:	81 50       	subi	r24, 0x01	; 1
    5482:	fb cf       	rjmp	.-10     	; 0x547a <dtoa_prf+0x1cc>
    5484:	c2 0e       	add	r12, r18
    5486:	d1 1c       	adc	r13, r1
    5488:	20 e0       	ldi	r18, 0x00	; 0
    548a:	99 23       	and	r25, r25
    548c:	29 f0       	breq	.+10     	; 0x5498 <dtoa_prf+0x1ea>
    548e:	d6 01       	movw	r26, r12
    5490:	9c 93       	st	X, r25
    5492:	f6 01       	movw	r30, r12
    5494:	31 96       	adiw	r30, 0x01	; 1
    5496:	6f 01       	movw	r12, r30
    5498:	51 11       	cpse	r21, r1
    549a:	0b c0       	rjmp	.+22     	; 0x54b2 <dtoa_prf+0x204>
    549c:	f6 01       	movw	r30, r12
    549e:	82 2f       	mov	r24, r18
    54a0:	90 e3       	ldi	r25, 0x30	; 48
    54a2:	88 23       	and	r24, r24
    54a4:	19 f0       	breq	.+6      	; 0x54ac <dtoa_prf+0x1fe>
    54a6:	91 93       	st	Z+, r25
    54a8:	81 50       	subi	r24, 0x01	; 1
    54aa:	fb cf       	rjmp	.-10     	; 0x54a2 <dtoa_prf+0x1f4>
    54ac:	c2 0e       	add	r12, r18
    54ae:	d1 1c       	adc	r13, r1
    54b0:	20 e0       	ldi	r18, 0x00	; 0
    54b2:	0f 2d       	mov	r16, r15
    54b4:	06 0f       	add	r16, r22
    54b6:	9a 81       	ldd	r25, Y+2	; 0x02
    54b8:	34 2f       	mov	r19, r20
    54ba:	30 71       	andi	r19, 0x10	; 16
    54bc:	44 ff       	sbrs	r20, 4
    54be:	03 c0       	rjmp	.+6      	; 0x54c6 <dtoa_prf+0x218>
    54c0:	91 33       	cpi	r25, 0x31	; 49
    54c2:	09 f4       	brne	.+2      	; 0x54c6 <dtoa_prf+0x218>
    54c4:	01 50       	subi	r16, 0x01	; 1
    54c6:	10 16       	cp	r1, r16
    54c8:	24 f4       	brge	.+8      	; 0x54d2 <dtoa_prf+0x224>
    54ca:	09 30       	cpi	r16, 0x09	; 9
    54cc:	18 f0       	brcs	.+6      	; 0x54d4 <dtoa_prf+0x226>
    54ce:	08 e0       	ldi	r16, 0x08	; 8
    54d0:	01 c0       	rjmp	.+2      	; 0x54d4 <dtoa_prf+0x226>
    54d2:	01 e0       	ldi	r16, 0x01	; 1
    54d4:	ab 01       	movw	r20, r22
    54d6:	77 ff       	sbrs	r23, 7
    54d8:	02 c0       	rjmp	.+4      	; 0x54de <dtoa_prf+0x230>
    54da:	40 e0       	ldi	r20, 0x00	; 0
    54dc:	50 e0       	ldi	r21, 0x00	; 0
    54de:	fb 01       	movw	r30, r22
    54e0:	e4 1b       	sub	r30, r20
    54e2:	f5 0b       	sbc	r31, r21
    54e4:	a1 e0       	ldi	r26, 0x01	; 1
    54e6:	b0 e0       	ldi	r27, 0x00	; 0
    54e8:	ac 0f       	add	r26, r28
    54ea:	bd 1f       	adc	r27, r29
    54ec:	ea 0f       	add	r30, r26
    54ee:	fb 1f       	adc	r31, r27
    54f0:	8e e2       	ldi	r24, 0x2E	; 46
    54f2:	a8 2e       	mov	r10, r24
    54f4:	4b 01       	movw	r8, r22
    54f6:	80 1a       	sub	r8, r16
    54f8:	91 08       	sbc	r9, r1
    54fa:	0b 2d       	mov	r16, r11
    54fc:	10 e0       	ldi	r17, 0x00	; 0
    54fe:	11 95       	neg	r17
    5500:	01 95       	neg	r16
    5502:	11 09       	sbc	r17, r1
    5504:	4f 3f       	cpi	r20, 0xFF	; 255
    5506:	bf ef       	ldi	r27, 0xFF	; 255
    5508:	5b 07       	cpc	r21, r27
    550a:	21 f4       	brne	.+8      	; 0x5514 <dtoa_prf+0x266>
    550c:	d6 01       	movw	r26, r12
    550e:	ac 92       	st	X, r10
    5510:	11 96       	adiw	r26, 0x01	; 1
    5512:	6d 01       	movw	r12, r26
    5514:	64 17       	cp	r22, r20
    5516:	75 07       	cpc	r23, r21
    5518:	2c f0       	brlt	.+10     	; 0x5524 <dtoa_prf+0x276>
    551a:	84 16       	cp	r8, r20
    551c:	95 06       	cpc	r9, r21
    551e:	14 f4       	brge	.+4      	; 0x5524 <dtoa_prf+0x276>
    5520:	81 81       	ldd	r24, Z+1	; 0x01
    5522:	01 c0       	rjmp	.+2      	; 0x5526 <dtoa_prf+0x278>
    5524:	80 e3       	ldi	r24, 0x30	; 48
    5526:	41 50       	subi	r20, 0x01	; 1
    5528:	51 09       	sbc	r21, r1
    552a:	31 96       	adiw	r30, 0x01	; 1
    552c:	d6 01       	movw	r26, r12
    552e:	11 96       	adiw	r26, 0x01	; 1
    5530:	7d 01       	movw	r14, r26
    5532:	40 17       	cp	r20, r16
    5534:	51 07       	cpc	r21, r17
    5536:	24 f0       	brlt	.+8      	; 0x5540 <dtoa_prf+0x292>
    5538:	d6 01       	movw	r26, r12
    553a:	8c 93       	st	X, r24
    553c:	67 01       	movw	r12, r14
    553e:	e2 cf       	rjmp	.-60     	; 0x5504 <dtoa_prf+0x256>
    5540:	64 17       	cp	r22, r20
    5542:	75 07       	cpc	r23, r21
    5544:	39 f4       	brne	.+14     	; 0x5554 <dtoa_prf+0x2a6>
    5546:	96 33       	cpi	r25, 0x36	; 54
    5548:	20 f4       	brcc	.+8      	; 0x5552 <dtoa_prf+0x2a4>
    554a:	95 33       	cpi	r25, 0x35	; 53
    554c:	19 f4       	brne	.+6      	; 0x5554 <dtoa_prf+0x2a6>
    554e:	31 11       	cpse	r19, r1
    5550:	01 c0       	rjmp	.+2      	; 0x5554 <dtoa_prf+0x2a6>
    5552:	81 e3       	ldi	r24, 0x31	; 49
    5554:	f6 01       	movw	r30, r12
    5556:	80 83       	st	Z, r24
    5558:	f7 01       	movw	r30, r14
    555a:	82 2f       	mov	r24, r18
    555c:	90 e2       	ldi	r25, 0x20	; 32
    555e:	88 23       	and	r24, r24
    5560:	19 f0       	breq	.+6      	; 0x5568 <dtoa_prf+0x2ba>
    5562:	91 93       	st	Z+, r25
    5564:	81 50       	subi	r24, 0x01	; 1
    5566:	fb cf       	rjmp	.-10     	; 0x555e <dtoa_prf+0x2b0>
    5568:	f7 01       	movw	r30, r14
    556a:	e2 0f       	add	r30, r18
    556c:	f1 1d       	adc	r31, r1
    556e:	10 82       	st	Z, r1
    5570:	80 e0       	ldi	r24, 0x00	; 0
    5572:	90 e0       	ldi	r25, 0x00	; 0
    5574:	29 96       	adiw	r28, 0x09	; 9
    5576:	0f b6       	in	r0, 0x3f	; 63
    5578:	f8 94       	cli
    557a:	de bf       	out	0x3e, r29	; 62
    557c:	0f be       	out	0x3f, r0	; 63
    557e:	cd bf       	out	0x3d, r28	; 61
    5580:	df 91       	pop	r29
    5582:	cf 91       	pop	r28
    5584:	1f 91       	pop	r17
    5586:	0f 91       	pop	r16
    5588:	ff 90       	pop	r15
    558a:	ef 90       	pop	r14
    558c:	df 90       	pop	r13
    558e:	cf 90       	pop	r12
    5590:	bf 90       	pop	r11
    5592:	af 90       	pop	r10
    5594:	9f 90       	pop	r9
    5596:	8f 90       	pop	r8
    5598:	08 95       	ret

0000559a <__ftoa_engine>:
    559a:	28 30       	cpi	r18, 0x08	; 8
    559c:	08 f0       	brcs	.+2      	; 0x55a0 <__ftoa_engine+0x6>
    559e:	27 e0       	ldi	r18, 0x07	; 7
    55a0:	33 27       	eor	r19, r19
    55a2:	da 01       	movw	r26, r20
    55a4:	99 0f       	add	r25, r25
    55a6:	31 1d       	adc	r19, r1
    55a8:	87 fd       	sbrc	r24, 7
    55aa:	91 60       	ori	r25, 0x01	; 1
    55ac:	00 96       	adiw	r24, 0x00	; 0
    55ae:	61 05       	cpc	r22, r1
    55b0:	71 05       	cpc	r23, r1
    55b2:	39 f4       	brne	.+14     	; 0x55c2 <__ftoa_engine+0x28>
    55b4:	32 60       	ori	r19, 0x02	; 2
    55b6:	2e 5f       	subi	r18, 0xFE	; 254
    55b8:	3d 93       	st	X+, r19
    55ba:	30 e3       	ldi	r19, 0x30	; 48
    55bc:	2a 95       	dec	r18
    55be:	e1 f7       	brne	.-8      	; 0x55b8 <__ftoa_engine+0x1e>
    55c0:	08 95       	ret
    55c2:	9f 3f       	cpi	r25, 0xFF	; 255
    55c4:	30 f0       	brcs	.+12     	; 0x55d2 <__ftoa_engine+0x38>
    55c6:	80 38       	cpi	r24, 0x80	; 128
    55c8:	71 05       	cpc	r23, r1
    55ca:	61 05       	cpc	r22, r1
    55cc:	09 f0       	breq	.+2      	; 0x55d0 <__ftoa_engine+0x36>
    55ce:	3c 5f       	subi	r19, 0xFC	; 252
    55d0:	3c 5f       	subi	r19, 0xFC	; 252
    55d2:	3d 93       	st	X+, r19
    55d4:	91 30       	cpi	r25, 0x01	; 1
    55d6:	08 f0       	brcs	.+2      	; 0x55da <__ftoa_engine+0x40>
    55d8:	80 68       	ori	r24, 0x80	; 128
    55da:	91 1d       	adc	r25, r1
    55dc:	df 93       	push	r29
    55de:	cf 93       	push	r28
    55e0:	1f 93       	push	r17
    55e2:	0f 93       	push	r16
    55e4:	ff 92       	push	r15
    55e6:	ef 92       	push	r14
    55e8:	19 2f       	mov	r17, r25
    55ea:	98 7f       	andi	r25, 0xF8	; 248
    55ec:	96 95       	lsr	r25
    55ee:	e9 2f       	mov	r30, r25
    55f0:	96 95       	lsr	r25
    55f2:	96 95       	lsr	r25
    55f4:	e9 0f       	add	r30, r25
    55f6:	ff 27       	eor	r31, r31
    55f8:	e6 52       	subi	r30, 0x26	; 38
    55fa:	fd 4f       	sbci	r31, 0xFD	; 253
    55fc:	99 27       	eor	r25, r25
    55fe:	33 27       	eor	r19, r19
    5600:	ee 24       	eor	r14, r14
    5602:	ff 24       	eor	r15, r15
    5604:	a7 01       	movw	r20, r14
    5606:	e7 01       	movw	r28, r14
    5608:	05 90       	lpm	r0, Z+
    560a:	08 94       	sec
    560c:	07 94       	ror	r0
    560e:	28 f4       	brcc	.+10     	; 0x561a <__ftoa_engine+0x80>
    5610:	36 0f       	add	r19, r22
    5612:	e7 1e       	adc	r14, r23
    5614:	f8 1e       	adc	r15, r24
    5616:	49 1f       	adc	r20, r25
    5618:	51 1d       	adc	r21, r1
    561a:	66 0f       	add	r22, r22
    561c:	77 1f       	adc	r23, r23
    561e:	88 1f       	adc	r24, r24
    5620:	99 1f       	adc	r25, r25
    5622:	06 94       	lsr	r0
    5624:	a1 f7       	brne	.-24     	; 0x560e <__ftoa_engine+0x74>
    5626:	05 90       	lpm	r0, Z+
    5628:	07 94       	ror	r0
    562a:	28 f4       	brcc	.+10     	; 0x5636 <__ftoa_engine+0x9c>
    562c:	e7 0e       	add	r14, r23
    562e:	f8 1e       	adc	r15, r24
    5630:	49 1f       	adc	r20, r25
    5632:	56 1f       	adc	r21, r22
    5634:	c1 1d       	adc	r28, r1
    5636:	77 0f       	add	r23, r23
    5638:	88 1f       	adc	r24, r24
    563a:	99 1f       	adc	r25, r25
    563c:	66 1f       	adc	r22, r22
    563e:	06 94       	lsr	r0
    5640:	a1 f7       	brne	.-24     	; 0x562a <__ftoa_engine+0x90>
    5642:	05 90       	lpm	r0, Z+
    5644:	07 94       	ror	r0
    5646:	28 f4       	brcc	.+10     	; 0x5652 <__ftoa_engine+0xb8>
    5648:	f8 0e       	add	r15, r24
    564a:	49 1f       	adc	r20, r25
    564c:	56 1f       	adc	r21, r22
    564e:	c7 1f       	adc	r28, r23
    5650:	d1 1d       	adc	r29, r1
    5652:	88 0f       	add	r24, r24
    5654:	99 1f       	adc	r25, r25
    5656:	66 1f       	adc	r22, r22
    5658:	77 1f       	adc	r23, r23
    565a:	06 94       	lsr	r0
    565c:	a1 f7       	brne	.-24     	; 0x5646 <__ftoa_engine+0xac>
    565e:	05 90       	lpm	r0, Z+
    5660:	07 94       	ror	r0
    5662:	20 f4       	brcc	.+8      	; 0x566c <__ftoa_engine+0xd2>
    5664:	49 0f       	add	r20, r25
    5666:	56 1f       	adc	r21, r22
    5668:	c7 1f       	adc	r28, r23
    566a:	d8 1f       	adc	r29, r24
    566c:	99 0f       	add	r25, r25
    566e:	66 1f       	adc	r22, r22
    5670:	77 1f       	adc	r23, r23
    5672:	88 1f       	adc	r24, r24
    5674:	06 94       	lsr	r0
    5676:	a9 f7       	brne	.-22     	; 0x5662 <__ftoa_engine+0xc8>
    5678:	84 91       	lpm	r24, Z
    567a:	10 95       	com	r17
    567c:	17 70       	andi	r17, 0x07	; 7
    567e:	41 f0       	breq	.+16     	; 0x5690 <__ftoa_engine+0xf6>
    5680:	d6 95       	lsr	r29
    5682:	c7 95       	ror	r28
    5684:	57 95       	ror	r21
    5686:	47 95       	ror	r20
    5688:	f7 94       	ror	r15
    568a:	e7 94       	ror	r14
    568c:	1a 95       	dec	r17
    568e:	c1 f7       	brne	.-16     	; 0x5680 <__ftoa_engine+0xe6>
    5690:	e0 e8       	ldi	r30, 0x80	; 128
    5692:	f2 e0       	ldi	r31, 0x02	; 2
    5694:	68 94       	set
    5696:	15 90       	lpm	r1, Z+
    5698:	15 91       	lpm	r17, Z+
    569a:	35 91       	lpm	r19, Z+
    569c:	65 91       	lpm	r22, Z+
    569e:	95 91       	lpm	r25, Z+
    56a0:	05 90       	lpm	r0, Z+
    56a2:	7f e2       	ldi	r23, 0x2F	; 47
    56a4:	73 95       	inc	r23
    56a6:	e1 18       	sub	r14, r1
    56a8:	f1 0a       	sbc	r15, r17
    56aa:	43 0b       	sbc	r20, r19
    56ac:	56 0b       	sbc	r21, r22
    56ae:	c9 0b       	sbc	r28, r25
    56b0:	d0 09       	sbc	r29, r0
    56b2:	c0 f7       	brcc	.-16     	; 0x56a4 <__ftoa_engine+0x10a>
    56b4:	e1 0c       	add	r14, r1
    56b6:	f1 1e       	adc	r15, r17
    56b8:	43 1f       	adc	r20, r19
    56ba:	56 1f       	adc	r21, r22
    56bc:	c9 1f       	adc	r28, r25
    56be:	d0 1d       	adc	r29, r0
    56c0:	7e f4       	brtc	.+30     	; 0x56e0 <__ftoa_engine+0x146>
    56c2:	70 33       	cpi	r23, 0x30	; 48
    56c4:	11 f4       	brne	.+4      	; 0x56ca <__ftoa_engine+0x130>
    56c6:	8a 95       	dec	r24
    56c8:	e6 cf       	rjmp	.-52     	; 0x5696 <__ftoa_engine+0xfc>
    56ca:	e8 94       	clt
    56cc:	01 50       	subi	r16, 0x01	; 1
    56ce:	30 f0       	brcs	.+12     	; 0x56dc <__ftoa_engine+0x142>
    56d0:	08 0f       	add	r16, r24
    56d2:	0a f4       	brpl	.+2      	; 0x56d6 <__ftoa_engine+0x13c>
    56d4:	00 27       	eor	r16, r16
    56d6:	02 17       	cp	r16, r18
    56d8:	08 f4       	brcc	.+2      	; 0x56dc <__ftoa_engine+0x142>
    56da:	20 2f       	mov	r18, r16
    56dc:	23 95       	inc	r18
    56de:	02 2f       	mov	r16, r18
    56e0:	7a 33       	cpi	r23, 0x3A	; 58
    56e2:	28 f0       	brcs	.+10     	; 0x56ee <__ftoa_engine+0x154>
    56e4:	79 e3       	ldi	r23, 0x39	; 57
    56e6:	7d 93       	st	X+, r23
    56e8:	2a 95       	dec	r18
    56ea:	e9 f7       	brne	.-6      	; 0x56e6 <__ftoa_engine+0x14c>
    56ec:	10 c0       	rjmp	.+32     	; 0x570e <__ftoa_engine+0x174>
    56ee:	7d 93       	st	X+, r23
    56f0:	2a 95       	dec	r18
    56f2:	89 f6       	brne	.-94     	; 0x5696 <__ftoa_engine+0xfc>
    56f4:	06 94       	lsr	r0
    56f6:	97 95       	ror	r25
    56f8:	67 95       	ror	r22
    56fa:	37 95       	ror	r19
    56fc:	17 95       	ror	r17
    56fe:	17 94       	ror	r1
    5700:	e1 18       	sub	r14, r1
    5702:	f1 0a       	sbc	r15, r17
    5704:	43 0b       	sbc	r20, r19
    5706:	56 0b       	sbc	r21, r22
    5708:	c9 0b       	sbc	r28, r25
    570a:	d0 09       	sbc	r29, r0
    570c:	98 f0       	brcs	.+38     	; 0x5734 <__ftoa_engine+0x19a>
    570e:	23 95       	inc	r18
    5710:	7e 91       	ld	r23, -X
    5712:	73 95       	inc	r23
    5714:	7a 33       	cpi	r23, 0x3A	; 58
    5716:	08 f0       	brcs	.+2      	; 0x571a <__ftoa_engine+0x180>
    5718:	70 e3       	ldi	r23, 0x30	; 48
    571a:	7c 93       	st	X, r23
    571c:	20 13       	cpse	r18, r16
    571e:	b8 f7       	brcc	.-18     	; 0x570e <__ftoa_engine+0x174>
    5720:	7e 91       	ld	r23, -X
    5722:	70 61       	ori	r23, 0x10	; 16
    5724:	7d 93       	st	X+, r23
    5726:	30 f0       	brcs	.+12     	; 0x5734 <__ftoa_engine+0x19a>
    5728:	83 95       	inc	r24
    572a:	71 e3       	ldi	r23, 0x31	; 49
    572c:	7d 93       	st	X+, r23
    572e:	70 e3       	ldi	r23, 0x30	; 48
    5730:	2a 95       	dec	r18
    5732:	e1 f7       	brne	.-8      	; 0x572c <__ftoa_engine+0x192>
    5734:	11 24       	eor	r1, r1
    5736:	ef 90       	pop	r14
    5738:	ff 90       	pop	r15
    573a:	0f 91       	pop	r16
    573c:	1f 91       	pop	r17
    573e:	cf 91       	pop	r28
    5740:	df 91       	pop	r29
    5742:	99 27       	eor	r25, r25
    5744:	87 fd       	sbrc	r24, 7
    5746:	90 95       	com	r25
    5748:	08 95       	ret

0000574a <strnlen_P>:
    574a:	fc 01       	movw	r30, r24
    574c:	05 90       	lpm	r0, Z+
    574e:	61 50       	subi	r22, 0x01	; 1
    5750:	70 40       	sbci	r23, 0x00	; 0
    5752:	01 10       	cpse	r0, r1
    5754:	d8 f7       	brcc	.-10     	; 0x574c <strnlen_P+0x2>
    5756:	80 95       	com	r24
    5758:	90 95       	com	r25
    575a:	8e 0f       	add	r24, r30
    575c:	9f 1f       	adc	r25, r31
    575e:	08 95       	ret

00005760 <strnlen>:
    5760:	fc 01       	movw	r30, r24
    5762:	61 50       	subi	r22, 0x01	; 1
    5764:	70 40       	sbci	r23, 0x00	; 0
    5766:	01 90       	ld	r0, Z+
    5768:	01 10       	cpse	r0, r1
    576a:	d8 f7       	brcc	.-10     	; 0x5762 <strnlen+0x2>
    576c:	80 95       	com	r24
    576e:	90 95       	com	r25
    5770:	8e 0f       	add	r24, r30
    5772:	9f 1f       	adc	r25, r31
    5774:	08 95       	ret

00005776 <fputc>:
    5776:	0f 93       	push	r16
    5778:	1f 93       	push	r17
    577a:	cf 93       	push	r28
    577c:	df 93       	push	r29
    577e:	fb 01       	movw	r30, r22
    5780:	23 81       	ldd	r18, Z+3	; 0x03
    5782:	21 fd       	sbrc	r18, 1
    5784:	03 c0       	rjmp	.+6      	; 0x578c <fputc+0x16>
    5786:	8f ef       	ldi	r24, 0xFF	; 255
    5788:	9f ef       	ldi	r25, 0xFF	; 255
    578a:	2c c0       	rjmp	.+88     	; 0x57e4 <fputc+0x6e>
    578c:	22 ff       	sbrs	r18, 2
    578e:	16 c0       	rjmp	.+44     	; 0x57bc <fputc+0x46>
    5790:	46 81       	ldd	r20, Z+6	; 0x06
    5792:	57 81       	ldd	r21, Z+7	; 0x07
    5794:	24 81       	ldd	r18, Z+4	; 0x04
    5796:	35 81       	ldd	r19, Z+5	; 0x05
    5798:	42 17       	cp	r20, r18
    579a:	53 07       	cpc	r21, r19
    579c:	44 f4       	brge	.+16     	; 0x57ae <fputc+0x38>
    579e:	a0 81       	ld	r26, Z
    57a0:	b1 81       	ldd	r27, Z+1	; 0x01
    57a2:	9d 01       	movw	r18, r26
    57a4:	2f 5f       	subi	r18, 0xFF	; 255
    57a6:	3f 4f       	sbci	r19, 0xFF	; 255
    57a8:	31 83       	std	Z+1, r19	; 0x01
    57aa:	20 83       	st	Z, r18
    57ac:	8c 93       	st	X, r24
    57ae:	26 81       	ldd	r18, Z+6	; 0x06
    57b0:	37 81       	ldd	r19, Z+7	; 0x07
    57b2:	2f 5f       	subi	r18, 0xFF	; 255
    57b4:	3f 4f       	sbci	r19, 0xFF	; 255
    57b6:	37 83       	std	Z+7, r19	; 0x07
    57b8:	26 83       	std	Z+6, r18	; 0x06
    57ba:	14 c0       	rjmp	.+40     	; 0x57e4 <fputc+0x6e>
    57bc:	8b 01       	movw	r16, r22
    57be:	ec 01       	movw	r28, r24
    57c0:	fb 01       	movw	r30, r22
    57c2:	00 84       	ldd	r0, Z+8	; 0x08
    57c4:	f1 85       	ldd	r31, Z+9	; 0x09
    57c6:	e0 2d       	mov	r30, r0
    57c8:	19 95       	eicall
    57ca:	89 2b       	or	r24, r25
    57cc:	e1 f6       	brne	.-72     	; 0x5786 <fputc+0x10>
    57ce:	d8 01       	movw	r26, r16
    57d0:	16 96       	adiw	r26, 0x06	; 6
    57d2:	8d 91       	ld	r24, X+
    57d4:	9c 91       	ld	r25, X
    57d6:	17 97       	sbiw	r26, 0x07	; 7
    57d8:	01 96       	adiw	r24, 0x01	; 1
    57da:	17 96       	adiw	r26, 0x07	; 7
    57dc:	9c 93       	st	X, r25
    57de:	8e 93       	st	-X, r24
    57e0:	16 97       	sbiw	r26, 0x06	; 6
    57e2:	ce 01       	movw	r24, r28
    57e4:	df 91       	pop	r29
    57e6:	cf 91       	pop	r28
    57e8:	1f 91       	pop	r17
    57ea:	0f 91       	pop	r16
    57ec:	08 95       	ret

000057ee <__ultoa_invert>:
    57ee:	fa 01       	movw	r30, r20
    57f0:	aa 27       	eor	r26, r26
    57f2:	28 30       	cpi	r18, 0x08	; 8
    57f4:	51 f1       	breq	.+84     	; 0x584a <__ultoa_invert+0x5c>
    57f6:	20 31       	cpi	r18, 0x10	; 16
    57f8:	81 f1       	breq	.+96     	; 0x585a <__ultoa_invert+0x6c>
    57fa:	e8 94       	clt
    57fc:	6f 93       	push	r22
    57fe:	6e 7f       	andi	r22, 0xFE	; 254
    5800:	6e 5f       	subi	r22, 0xFE	; 254
    5802:	7f 4f       	sbci	r23, 0xFF	; 255
    5804:	8f 4f       	sbci	r24, 0xFF	; 255
    5806:	9f 4f       	sbci	r25, 0xFF	; 255
    5808:	af 4f       	sbci	r26, 0xFF	; 255
    580a:	b1 e0       	ldi	r27, 0x01	; 1
    580c:	3e d0       	rcall	.+124    	; 0x588a <__ultoa_invert+0x9c>
    580e:	b4 e0       	ldi	r27, 0x04	; 4
    5810:	3c d0       	rcall	.+120    	; 0x588a <__ultoa_invert+0x9c>
    5812:	67 0f       	add	r22, r23
    5814:	78 1f       	adc	r23, r24
    5816:	89 1f       	adc	r24, r25
    5818:	9a 1f       	adc	r25, r26
    581a:	a1 1d       	adc	r26, r1
    581c:	68 0f       	add	r22, r24
    581e:	79 1f       	adc	r23, r25
    5820:	8a 1f       	adc	r24, r26
    5822:	91 1d       	adc	r25, r1
    5824:	a1 1d       	adc	r26, r1
    5826:	6a 0f       	add	r22, r26
    5828:	71 1d       	adc	r23, r1
    582a:	81 1d       	adc	r24, r1
    582c:	91 1d       	adc	r25, r1
    582e:	a1 1d       	adc	r26, r1
    5830:	20 d0       	rcall	.+64     	; 0x5872 <__ultoa_invert+0x84>
    5832:	09 f4       	brne	.+2      	; 0x5836 <__ultoa_invert+0x48>
    5834:	68 94       	set
    5836:	3f 91       	pop	r19
    5838:	2a e0       	ldi	r18, 0x0A	; 10
    583a:	26 9f       	mul	r18, r22
    583c:	11 24       	eor	r1, r1
    583e:	30 19       	sub	r19, r0
    5840:	30 5d       	subi	r19, 0xD0	; 208
    5842:	31 93       	st	Z+, r19
    5844:	de f6       	brtc	.-74     	; 0x57fc <__ultoa_invert+0xe>
    5846:	cf 01       	movw	r24, r30
    5848:	08 95       	ret
    584a:	46 2f       	mov	r20, r22
    584c:	47 70       	andi	r20, 0x07	; 7
    584e:	40 5d       	subi	r20, 0xD0	; 208
    5850:	41 93       	st	Z+, r20
    5852:	b3 e0       	ldi	r27, 0x03	; 3
    5854:	0f d0       	rcall	.+30     	; 0x5874 <__ultoa_invert+0x86>
    5856:	c9 f7       	brne	.-14     	; 0x584a <__ultoa_invert+0x5c>
    5858:	f6 cf       	rjmp	.-20     	; 0x5846 <__ultoa_invert+0x58>
    585a:	46 2f       	mov	r20, r22
    585c:	4f 70       	andi	r20, 0x0F	; 15
    585e:	40 5d       	subi	r20, 0xD0	; 208
    5860:	4a 33       	cpi	r20, 0x3A	; 58
    5862:	18 f0       	brcs	.+6      	; 0x586a <__ultoa_invert+0x7c>
    5864:	49 5d       	subi	r20, 0xD9	; 217
    5866:	31 fd       	sbrc	r19, 1
    5868:	40 52       	subi	r20, 0x20	; 32
    586a:	41 93       	st	Z+, r20
    586c:	02 d0       	rcall	.+4      	; 0x5872 <__ultoa_invert+0x84>
    586e:	a9 f7       	brne	.-22     	; 0x585a <__ultoa_invert+0x6c>
    5870:	ea cf       	rjmp	.-44     	; 0x5846 <__ultoa_invert+0x58>
    5872:	b4 e0       	ldi	r27, 0x04	; 4
    5874:	a6 95       	lsr	r26
    5876:	97 95       	ror	r25
    5878:	87 95       	ror	r24
    587a:	77 95       	ror	r23
    587c:	67 95       	ror	r22
    587e:	ba 95       	dec	r27
    5880:	c9 f7       	brne	.-14     	; 0x5874 <__ultoa_invert+0x86>
    5882:	00 97       	sbiw	r24, 0x00	; 0
    5884:	61 05       	cpc	r22, r1
    5886:	71 05       	cpc	r23, r1
    5888:	08 95       	ret
    588a:	9b 01       	movw	r18, r22
    588c:	ac 01       	movw	r20, r24
    588e:	0a 2e       	mov	r0, r26
    5890:	06 94       	lsr	r0
    5892:	57 95       	ror	r21
    5894:	47 95       	ror	r20
    5896:	37 95       	ror	r19
    5898:	27 95       	ror	r18
    589a:	ba 95       	dec	r27
    589c:	c9 f7       	brne	.-14     	; 0x5890 <__ultoa_invert+0xa2>
    589e:	62 0f       	add	r22, r18
    58a0:	73 1f       	adc	r23, r19
    58a2:	84 1f       	adc	r24, r20
    58a4:	95 1f       	adc	r25, r21
    58a6:	a0 1d       	adc	r26, r0
    58a8:	08 95       	ret

000058aa <_exit>:
    58aa:	f8 94       	cli

000058ac <__stop_program>:
    58ac:	ff cf       	rjmp	.-2      	; 0x58ac <__stop_program>
